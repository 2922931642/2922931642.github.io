{"version":3,"sources":["../node_modules/react/index.js","../node_modules/prop-types/index.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/jschardet/src/constants.js","../node_modules/history/node_modules/warning/browser.js","../node_modules/invariant/browser.js","../node_modules/warning/warning.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/jschardet/src/codingstatemachine.js","../node_modules/jschardet/src/charsetprober.js","../node_modules/jschardet/src/logger.js","../node_modules/jschardet/src/mbcharsetprober.js","../node_modules/jschardet/src/chardistribution.js","../node_modules/react-router/es/matchPath.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/es/PathUtils.js","../node_modules/history/es/LocationUtils.js","../node_modules/history/es/createTransitionManager.js","../node_modules/history/es/DOMUtils.js","../node_modules/history/es/createBrowserHistory.js","../node_modules/history/es/createHashHistory.js","../node_modules/history/es/createMemoryHistory.js","../node_modules/history/es/index.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js","../node_modules/jschardet/src/charsetgroupprober.js","../node_modules/jschardet/src/jpcntx.js","../node_modules/react-dom/index.js","../node_modules/fetch-jsonp/build/fetch-jsonp.js","../node_modules/path-to-regexp/index.js","../node_modules/jschardet/index.js","../node_modules/papaparse/papaparse.min.js","../node_modules/react-router/es/Route.js","../node_modules/react-router-dom/es/Route.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/path-to-regexp/node_modules/isarray/index.js","../node_modules/jschardet/src/index.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/jschardet/src/universaldetector.js","../node_modules/jschardet/src/mbcsgroupprober.js","../node_modules/jschardet/src/big5prober.js","../node_modules/jschardet/src/mbcssm/big5.js","../node_modules/jschardet/src/jisfreq.js","../node_modules/jschardet/src/euctwfreq.js","../node_modules/jschardet/src/euckrfreq.js","../node_modules/jschardet/src/gb2312freq.js","../node_modules/jschardet/src/big5freq.js","../node_modules/jschardet/src/utf8prober.js","../node_modules/jschardet/src/mbcssm/utf8.js","../node_modules/jschardet/src/sjisprober.js","../node_modules/jschardet/src/mbcssm/sjis.js","../node_modules/jschardet/src/eucjpprober.js","../node_modules/jschardet/src/mbcssm/eucjp.js","../node_modules/jschardet/src/gb2312prober.js","../node_modules/jschardet/src/mbcssm/gb2312.js","../node_modules/jschardet/src/euckrprober.js","../node_modules/jschardet/src/mbcssm/euckr.js","../node_modules/jschardet/src/euctwprober.js","../node_modules/jschardet/src/mbcssm/euctw.js","../node_modules/jschardet/src/sbcsgroupprober.js","../node_modules/jschardet/src/sbcharsetprober.js","../node_modules/jschardet/src/langhebrewmodel.js","../node_modules/jschardet/src/hebrewprober.js","../node_modules/jschardet/src/langcyrillicmodel.js","../node_modules/jschardet/src/langgreekmodel.js","../node_modules/jschardet/src/langthaimodel.js","../node_modules/jschardet/src/langhungarianmodel.js","../node_modules/jschardet/src/langbulgarianmodel.js","../node_modules/jschardet/src/latin1prober.js","../node_modules/jschardet/src/escprober.js","../node_modules/jschardet/src/escsm.js","../node_modules/react-router/es/Router.js","../node_modules/react-router-dom/es/Router.js","../node_modules/react-router-dom/es/BrowserRouter.js","../node_modules/react-router/es/Switch.js","../node_modules/react-router-dom/es/Switch.js","../node_modules/react-router-dom/es/Link.js","../node_modules/react-router-dom/es/NavLink.js"],"names":["module","exports","__webpack_require__","_assertThisInitialized","self","ReferenceError","d","__webpack_exports__","detecting","foundIt","notMe","start","error","itsMe","SHORTCUT_THRESHOLD","condition","format","a","b","c","e","f","undefined","Error","args","argIndex","replace","name","framesToPop","warning","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","call","assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","constants","sm","this","reset","_mCurrentState","nextState","byteCls","_mModel","classTable","charCodeAt","_mCurrentBytePos","_mCurrentCharLen","charLenTable","stateTable","classFactor","getCurrentCharLen","getCodingStateMachine","init","_mState","getCharsetName","feed","aBuf","getState","getConfidence","filterHighBitOnly","filterWithoutEnglishLetters","filterWithEnglishLetters","result","inTag","prev","curr","isAlpha","test","substring","log","setLogger","loggerFunction","enabled","CharSetProber","logger","MultiByteCharSetProber","apply","_mCodingSM","_mDistributionAnalyzer","_mLastChar","aLen","codingState","charLen","slice","gotEnoughData","jisfreq","euctwfreq","euckrfreq","gb2312freq","big5freq","CharDistributionAnalysis","_mDone","_mTotalChars","_mFreqChars","aStr","aCharLen","order","getOrder","_mTableSize","_mCharToFreqOrder","r","_mTypicalDistributionRatio","EUCTWDistributionAnalysis","EUCTWCharToFreqOrder","EUCTW_TABLE_SIZE","EUCTW_TYPICAL_DISTRIBUTION_RATIO","EUCKRDistributionAnalysis","EUCKRCharToFreqOrder","EUCKR_TABLE_SIZE","EUCKR_TYPICAL_DISTRIBUTION_RATIO","GB2312DistributionAnalysis","GB2312CharToFreqOrder","GB2312_TABLE_SIZE","GB2312_TYPICAL_DISTRIBUTION_RATIO","Big5DistributionAnalysis","Big5CharToFreqOrder","BIG5_TABLE_SIZE","BIG5_TYPICAL_DISTRIBUTION_RATIO","SJISDistributionAnalysis","JISCharToFreqOrder","JIS_TABLE_SIZE","JIS_TYPICAL_DISTRIBUTION_RATIO","EUCJPDistributionAnalysis","path_to_regexp__WEBPACK_IMPORTED_MODULE_0__","path_to_regexp__WEBPACK_IMPORTED_MODULE_0___default","n","patternCache","cacheCount","pathname","options","arguments","parent","path","_options","_options$exact","exact","_options$strict","strict","_options$sensitive","sensitive","_compilePath","pattern","cacheKey","end","cache","keys","compiledPattern","re","compilePath","match","exec","url","values","isExact","params","reduce","memo","index","isAbsolute","charAt","spliceOne","list","k","pop","resolve_pathname","to","from","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","hasTrailingSlash","last","up","part","unshift","join","substr","addLeadingSlash","hasBasename","prefix","RegExp","stripBasename","stripTrailingSlash","createPath","location","search","hash","_extends","assign","source","hasOwnProperty","LocationUtils_createLocation","state","currentLocation","hashIndex","indexOf","searchIndex","parsePath","decodeURI","URIError","es_createTransitionManager","prompt","listeners","setPrompt","nextPrompt","browser_default","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","fn","isActive","listener","push","filter","item","notifyListeners","_len","Array","_key","forEach","canUseDOM","window","document","createElement","addEventListener","node","event","attachEvent","removeEventListener","detachEvent","getConfirmation","message","confirm","createBrowserHistory_typeof","createBrowserHistory_extends","getHistoryState","history","es_createBrowserHistory","invariant_browser_default","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","toString","transitionManager","setState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","revertPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","map","test3","letter","err","shouldUseNative","symbols","val","toObject","s","g","Function","CharSetGroupProber","_mActiveNum","prober","_mProbers","active","_mBestGuessProber","st","bestConf","cf","JapaneseContextAnalysis","_mTotalRel","_mRelSample","_mNeedToSkipCharNum","_mLastCharOrder","rets","jp2CharContext","SJISContextAnalysis","EUCJPContextAnalysis","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","defaultOptions","timeout","jsonpCallback","jsonpCallbackFunction","clearFunction","functionName","removeScript","scriptId","script","getElementById","getElementsByTagName","removeChild","_url","timeoutId","Promise","resolve","reject","callbackFunction","Date","now","ceil","response","json","clearTimeout","jsonpScript","setAttribute","charset","id","appendChild","setTimeout","onerror","isarray","pathToRegexp","parse","compile","str","tokensToFunction","tokensToRegExp","PATH_REGEXP","res","tokens","defaultDelimiter","delimiter","m","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","data","encode","pretty","encodeURIComponent","token","segment","JSON","stringify","j","attachKeys","flags","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","isArray","postMessage","h","u","t","dynamicTyping","z","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","SCRIPT_PATH","Worker","onmessage","userStep","step","userChunk","chunk","userComplete","complete","userError","input","config","workerId","NODE_STREAM_INPUT","download","_","readable","read","on","File","stream","unparse","y","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","header","M","fields","meta","v","trim","l","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","each","prop","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","before","reason","splice","_handle","_finished","_completed","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","E","chunkSize","parseInt","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","preview","results","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","w","_chunkError","open","downloadRequestHeaders","setRequestHeader","send","status","readyState","getResponseHeader","lastIndexOf","responseText","statusText","webkitSlice","mozSlice","FileReaderSync","min","size","readAsText","encoding","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","removeListener","abort","trimHeaders","parseFloat","type","code","row","comments","abs","successful","bestDelimiter","getCharIndex","S","O","x","T","I","A","D","fastMode","L","escapeChar","P","F","C","R","linebreak","truncated","terminate","src","body","Route_isEmptyChildren","children","react_default","Children","count","Route_Route","_React$Component","Route","_temp","_this","computeMatch","context","router","getChildContext","computedMatch","matchPath","componentWillMount","warning_default","component","render","componentWillReceiveProps","nextProps","nextContext","_props","_context$router","staticContext","only","Component","propTypes","prop_types_default","object","string","bool","func","oneOfType","contextTypes","shape","isRequired","childContextTypes","es_Route","for","q","aa","ba","B","ca","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","refs","updater","G","isReactComponent","forceUpdate","H","isPureReactComponent","current","J","K","ref","__self","__source","defaultProps","$$typeof","_owner","N","Q","keyPrefix","U","done","=",":","escape","ea","fa","V","da","W","X","toArray","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","bind","isValidElement","version","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","default","Z","ha","ia","onError","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","va","wa","currentTarget","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Fa","Ga","Ha","parentNode","tag","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","style","animation","transition","Xa","Ya","Za","$a","ab","bb","cb","db","eb","textContent","fb","gb","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","keyCode","vb","detail","wb","zb","locale","which","xb","ctrlKey","altKey","metaKey","char","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","date","datetime","datetime-local","email","month","number","password","range","tel","text","time","week","Mb","nodeName","Nb","srcElement","correspondingUseElement","nodeType","Ob","Pb","Rb","_valueTracker","getOwnPropertyDescriptor","get","set","getValue","setValue","stopTracking","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","isNaN","qc","oc","removeAttribute","setAttributeNS","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","ownerDocument","activeElement","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","view","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","child","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","pd","dataTransfer","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","firstChild","Ld","nextSibling","Nd","HTMLIFrameElement","contentDocument","Od","contentEditable","Qd","focusedElem","selectionRange","Md","contains","compareDocumentPosition","documentElement","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","selected","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","innerHTML","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","base","br","col","embed","hr","img","keygen","link","param","track","wbr","qe","is","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Set","Fe","Ge","He","Ie","Je","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ke","Le","Me","Ne","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","implementation","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Map","delete","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","queue","baseUpdate","ng","og","pg","dispatch","qg","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","then","hf","We","hydrate","hidden","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onClick","onclick","ph","WeakSet","qh","rh","sh","th","vh","componentWillUnmount","wh","xh","yh","insertBefore","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","has","add","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","createTextNode","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","querySelectorAll","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","global","_r","previous","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","ReactPropTypes","array","symbol","any","arrayOf","instanceOf","objectOf","oneOf","checkPropTypes","PropTypes","arr","Buffer","UniversalDetector","detect","buffer","close","enableDebug","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","len","copy","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","MBCSGroupProber","SBCSGroupProber","Latin1Prober","EscCharSetProber","minimumThreshold","_state","confidence","_mStart","_mGotData","_mInputState","_mBOM","_mEscCharsetProber","_mCharsetProbers","_highBitDetector","_escDetector","proberConfidence","maxProberConfidence","maxProber","Big5Prober","UTF8Prober","SJISProber","EUCJPProber","GB2312Prober","EUCKRProber","EUCTWProber","CodingStateMachine","Big5SMModel","consts","BIG5_st","UTF8SMModel","_mNumOfMBChar","unlike","UTF8_st","SJISSMModel","_mContextAnalyzer","contxtCf","distribCf","SJIS_st","EUCJPSMModel","EUCJP_st","GB2312SMModel","GB2312_st","EUCKRSMModel","EUCKR_st","EUCTWSMModel","EUCTW_st","SingleByteCharSetProber","Win1255HebrewModel","HebrewProber","cyrillicModels","greekModels","TIS620ThaiModel","hungarianModels","bulgarianModels","Win1251CyrillicModel","Koi8rModel","Latin5CyrillicModel","MacCyrillicModel","Ibm866Model","Ibm855Model","Latin7GreekModel","Win1253GreekModel","Latin5BulgarianModel","Win1251BulgarianModel","Latin2HungarianModel","Win1250HungarianModel","hebrewProber","logicalHebrewProber","visualHebrewProber","setModelProbers","model","reversed","nameProber","_mLastOrder","_mSeqCounters","_mTotalSeqs","_mTotalChar","_mFreqChar","_mNameProber","charsetName","keepEnglishLetter","charToOrderMap","_mReversed","precedenceMatrix","NUMBER_OF_SEQ_CAT","mTypicalPositiveRatio","win1255_CharToOrderMap","HebrewLangModel","FINAL_KAF","NORMAL_KAF","FINAL_MEM","NORMAL_MEM","FINAL_NUN","NORMAL_NUN","FINAL_PE","NORMAL_PE","FINAL_TSADI","_mFinalCharLogicalScore","_mFinalCharVisualScore","_mPrev","_mBeforePrev","logicalProber","visualProber","_mLogicalProber","_mVisualProber","isFinal","isNonFinal","cur","finalsub","modelsub","elt","KOI8R_CharToOrderMap","win1251_CharToOrderMap","latin5_CharToOrderMap","macCyrillic_CharToOrderMap","IBM855_CharToOrderMap","IBM866_CharToOrderMap","RussianLangModel","Latin7_CharToOrderMap","win1253_CharToOrderMap","GreekLangModel","TIS620CharToOrderMap","ThaiLangModel","Latin2_HungarianCharToOrderMap","win1250HungarianCharToOrderMap","HungarianLangModel","Latin5_BulgarianCharToOrderMap","win1251BulgarianCharToOrderMap","BulgarianLangModel","Constants","OTH","Latin1_CharToClass","Latin1ClassModel","_mLastCharClass","_mFreqCounter","charClass","freq","total","escsm","codingSM","_mActiveSM","_mDetectedCharset","HZSMModel","ISO2022CNSMModel","ISO2022JPSMModel","ISO2022KRSMModel","HZ_st","ISO2022CN_st","ISO2022JP_st","ISO2022KR_st","Router_Router","Router","_this2","react_router_dom_es_Router","BrowserRouter_possibleConstructorReturn","BrowserRouter_BrowserRouter","BrowserRouter","BrowserRouter_classCallCheck","es","BrowserRouter_inherits","Switch_Switch","Switch","_element$props","pathProp","es_Switch","isModifiedEvent","Link_Link","Link","handleClick","_this$props","innerRef","_objectWithoutProperties","es_Link","NavLink_extends","NavLink_NavLink","activeClassName","className","activeStyle","getIsActive","ariaCurrent","rest","NavLink_objectWithoutProperties","escapedPath","_ref2","aria-current"],"mappings":"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A53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,OAGAX,EAAAC,QAAA,CACA8E,WAvCA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBASAM,YAAA,EACAD,WAAAszD,EACAvzD,aALA,YAMAxD,KAAA,uBCFA1B,EAAA4J,+BAAA,EACA5J,EAAA2J,eAAA,KACA3J,EAAA0J,mBAAA,mEACA,2EACA,0EACA,oEACA,gFACA,+EACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,6EACA,gFACA,6EACA,gFACA,gFACA,yEACA,yDACA,iDACA,sDACA,6DACA,2DACA,qEACA,0DACA,8DACA,2DACA,+DACA,mEACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,6EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,4EACA,8EACA,yEACA,yEACA,yEACA,2EACA,4EACA,6EACA,8EACA,2EACA,6EACA,2EACA,4EACA,yEACA,yEACA,8EACA,2EACA,wEACA,yEACA,+EACA,yEACA,4EACA,+EACA,gFACA,2EACA,8EACA,2EACA,4EACA,uEACA,2EACA,2EACA,2EACA,4EACA,2EACA,0EACA,6EACA,2EACA,yEACA,+EACA,2EACA,6EACA,+EACA,4EACA,4EACA,6EACA,2EACA,2EACA,2EACA,yEACA,uEACA,+EACA,yEACA,yEACA,4EACA,4EACA,6EACA,4EACA,0EACA,0EACA,4EACA,0EACA,4EACA,4EACA,6EACA,6EACA,2EACA,4EACA,uEACA,uEACA,2EACA,uEACA,wEACA,2EACA,2EACA,8EACA,uEACA,6EACA,6EACA,2EACA,yEACA,4EACA,0EACA,6EACA,2EACA,4EACA,4EACA,yEACA,yEACA,4EACA,0EACA,0EACA,4EACA,4EACA,+EACA,0EACA,wEACA,6EACA,yEACA,wEACA,8EACA,6EACA,6EACA,8EACA,4EACA,4EACA,0EACA,wEACA,0EACA,4EACA,2EACA,yEACA,8EACA,6EACA,4EACA,yEACA,2EACA,6EACA,8EACA,2EACA,4EACA,6EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,0EACA,6EACA,0EACA,4EACA,0EACA,+EACA,8EACA,6EACA,2EACA,2EACA,2EACA,4EACA,6EACA,8EACA,+EACA,2EACA,6EACA,2EACA,6EACA,yEACA,4EACA,4EACA,4EACA,yEACA,0EACA,yEACA,2EACA,4EACA,4EACA,0EACA,8EACA,0EACA,gFACA,4EACA,8EACA,8EACA,6EACA,2EACA,0EACA,2EACA,8EACA,0EACA,0EACA,6EACA,6EACA,0EACA,0EACA,8EACA,0EACA,4EACA,2EACA,4EACA,6EACA,0EACA,6EACA,6EACA,6EACA,4EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gGCxgBA1J,EAAA4I,iCAAA,IAEA5I,EAAA2I,iBAAA,KACA3I,EAAA0I,qBAAA,iEACA,oEACA,sEACA,wEACA,sEACA,qEACA,uEACA,uEACA,qEACA,uEACA,qEACA,yEACA,yEACA,qEACA,wEACA,wEACA,uEACA,0EACA,2EACA,wEACA,2EACA,oEACA,uEACA,2EACA,wEACA,4EACA,wEACA,wEACA,0EACA,yEACA,yEACA,4EACA,4EACA,8EACA,+EACA,4EACA,yEACA,4EACA,0EACA,4EACA,6EACA,+EACA,6EACA,wEACA,4EACA,uEACA,0EACA,sEACA,2EACA,6EACA,4EACA,4EACA,0EACA,8EACA,0EACA,2EACA,2EACA,+EACA,0EACA,2EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,+EACA,4EACA,uEACA,4EACA,+EACA,2EACA,8EACA,8EACA,6EACA,6EACA,uEACA,8EACA,2EACA,wEACA,6EACA,4EACA,6EACA,8EACA,8EACA,+EACA,4EACA,0EACA,6EACA,6EACA,+EACA,0EACA,8EACA,sEACA,4EACA,4EACA,8EACA,8EACA,8EACA,gFACA,0EACA,0EACA,8EACA,+EACA,2EACA,2EACA,8EACA,6EACA,+EACA,8EACA,6EACA,8EACA,+EACA,4EACA,4EACA,8EACA,8EACA,+EACA,8EACA,4EACA,2EACA,4EACA,yEACA,+EACA,wEACA,4EACA,4EACA,6EACA,4EACA,6EACA,0EACA,8EACA,8EACA,4EACA,6EACA,6EACA,+EACA,+EACA,+EACA,+EACA,8EACA,wEACA,6EACA,6EACA,4EACA,+EACA,+EACA,+EACA,2EACA,6EACA,uEACA,4EACA,2EACA,6EACA,2EACA,8EACA,8EACA,2EACA,8EACA,+EACA,gFACA,6EACA,0EACA,+EACA,+EACA,8EACA,+EACA,4EACA,gFACA,2EACA,2EACA,0EACA,6EACA,gFACA,8EACA,8EACA,6EACA,4EACA,6EACA,2EACA,0EACA,yEACA,2EACA,6EACA,+EACA,+EACA,+EACA,0EACA,+EACA,8EACA,0EACA,+EACA,6EACA,+EACA,+EACA,8EACA,gFACA,+EACA,6EACA,2EACA,4EACA,8EACA,6EACA,4EACA,8EACA,4EACA,wEACA,gFACA,gFACA,2EACA,gFACA,8EACA,6EACA,8EACA,4EACA,6EACA,+EACA,+EACA,6EACA,8EACA,8EACA,8EACA,4EACA,2EACA,8EACA,6EACA,4EACA,gFACA,+EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,gFACA,+EACA,0EACA,8EACA,gFACA,8EACA,0EACA,+EACA,+EACA,8EACA,6EACA,8EACA,6EACA,gFACA,gFACA,+EACA,0EACA,8EACA,+EACA,6EACA,+EACA,8EACA,gFACA,gFACA,+EACA,6EACA,2EACA,8EACA,4EACA,8EACA,+EACA,+EACA,gFACA,+EACA,+EACA,8EACA,gFACA,4EACA,6EACA,6EACA,6EACA,+EACA,8EACA,8EACA,8EACA,8EACA,+EACA,6EACA,+EACA,gFACA,+EACA,8EACA,6EACA,gFACA,8EACA,6EACA,+EACA,+EACA,gFACA,+EACA,+EACA,gFACA,+EACA,8EACA,6EACA,+EACA,8EACA,4EACA,8EACA,+EACA,6EACA,gFACA,+EACA,+EACA,8EACA,8EACA,8EACA,8EACA,8EACA,6EACA,gFACA,8EACA,+EACA,4EACA,gFACA,6EACA,gFACA,4EACA,+EACA,8EACA,gFACA,8EACA,8EACA,gFACA,gFACA,8EACA,6EACA,+EACA,8EACA,8EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gGC9XA1I,EAAAgJ,iCAAA,EACAhJ,EAAA+I,iBAAA,KAEA/I,EAAA8I,qBAAA,45UAEA,y+lBACA,4uYCLA9I,EAAAoJ,kCAAA,GACApJ,EAAAmJ,kBAAA,KACAnJ,EAAAkJ,sBAAA,yxiBAEA,4sdCFAlJ,EAAAwJ,gCAAA,IAEAxJ,EAAAuJ,gBAAA,KACAvJ,EAAAsJ,oBAAA,iEACA,oEACA,sEACA,wEACA,sEACA,qEACA,uEACA,uEACA,qEACA,uEACA,qEACA,yEACA,yEACA,qEACA,wEACA,wEACA,uEACA,0EACA,2EACA,wEACA,2EACA,oEACA,uEACA,2EACA,wEACA,4EACA,wEACA,wEACA,0EACA,yEACA,yEACA,4EACA,4EACA,8EACA,+EACA,6EACA,yEACA,4EACA,0EACA,4EACA,6EACA,+EACA,6EACA,wEACA,4EACA,uEACA,0EACA,sEACA,2EACA,6EACA,4EACA,4EACA,0EACA,8EACA,0EACA,2EACA,2EACA,+EACA,0EACA,2EACA,8EACA,0EACA,+EACA,2EACA,0EACA,4EACA,+EACA,4EACA,uEACA,4EACA,+EACA,2EACA,8EACA,8EACA,6EACA,6EACA,uEACA,6EACA,2EACA,wEACA,6EACA,4EACA,6EACA,8EACA,8EACA,+EACA,4EACA,0EACA,6EACA,6EACA,+EACA,0EACA,+EACA,qEACA,4EACA,4EACA,6EACA,8EACA,8EACA,gFACA,0EACA,0EACA,8EACA,+EACA,2EACA,2EACA,+EACA,4EACA,+EACA,8EACA,8EACA,6EACA,+EACA,4EACA,4EACA,8EACA,8EACA,+EACA,8EACA,4EACA,2EACA,4EACA,yEACA,+EACA,wEACA,4EACA,4EACA,6EACA,4EACA,6EACA,0EACA,8EACA,8EACA,4EACA,6EACA,6EACA,+EACA,+EACA,+EACA,+EACA,8EACA,wEACA,6EACA,6EACA,4EACA,+EACA,+EACA,+EACA,2EACA,6EACA,uEACA,4EACA,2EACA,6EACA,2EACA,8EACA,8EACA,2EACA,8EACA,+EACA,gFACA,6EACA,0EACA,+EACA,+EACA,8EACA,+EACA,4EACA,gFACA,2EACA,2EACA,0EACA,6EACA,gFACA,8EACA,8EACA,6EACA,4EACA,6EACA,2EACA,0EACA,yEACA,2EACA,6EACA,+EACA,+EACA,+EACA,0EACA,+EACA,8EACA,0EACA,+EACA,6EACA,+EACA,+EACA,8EACA,gFACA,+EACA,6EACA,2EACA,4EACA,8EACA,6EACA,4EACA,8EACA,4EACA,wEACA,gFACA,gFACA,2EACA,gFACA,8EACA,6EACA,8EACA,4EACA,6EACA,+EACA,+EACA,8EACA,8EACA,8EACA,8EACA,4EACA,2EACA,8EACA,6EACA,4EACA,gFACA,+EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,+EACA,+EACA,0EACA,+EACA,gFACA,6EACA,2EACA,+EACA,+EACA,+EACA,6EACA,8EACA,6EACA,gFACA,gFACA,+EACA,0EACA,6EACA,+EACA,8EACA,+EACA,8EACA,gFACA,gFACA,+EACA,6EACA,2EACA,8EACA,4EACA,8EACA,+EACA,+EACA,gFACA,+EACA,+EACA,8EACA,gFACA,4EACA,6EACA,6EACA,6EACA,+EACA,8EACA,8EACA,8EACA,8EACA,+EACA,6EACA,+EACA,gFACA,+EACA,8EACA,6EACA,gFACA,8EACA,6EACA,+EACA,+EACA,+EACA,gFACA,8EACA,gFACA,+EACA,8EACA,6EACA,+EACA,8EACA,4EACA,8EACA,+EACA,8EACA,gFACA,+EACA,+EACA,8EACA,8EACA,8EACA,6EACA,+EACA,6EACA,gFACA,8EACA,+EACA,4EACA,gFACA,6EACA,gFACA,4EACA,+EACA,8EACA,gFACA,8EACA,8EACA,gFACA,gFACA,8EACA,6EACA,+EACA,8EACA,8EAEA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,+EACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,gFACA,kFACA,gGACA,8FACA,+FACA,gGACA,gGACA,+FACA,+FACA,+FACA,+FACA,4FACA,8FACA,gGACA,+FACA,8FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,+FACA,+FACA,6FACA,+FACA,+FACA,+FACA,+FACA,8FACA,8FACA,gGACA,gGACA,gGACA,8FACA,+FACA,gGACA,8FACA,8FACA,+FACA,gGACA,gGACA,8FACA,gGACA,8FACA,+FACA,+FACA,6FACA,+FACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,8FACA,gGACA,+FACA,+FACA,+FACA,+FACA,gGACA,gGACA,8FACA,gGACA,+FACA,8FACA,8FACA,gGACA,gGACA,+FACA,+FACA,gGACA,+FACA,+FACA,+FACA,8FACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,gGACA,+FACA,gGACA,8FACA,gGACA,+FACA,+FACA,gGACA,gGACA,8FACA,+FACA,+FACA,gGACA,+FACA,gGACA,gGACA,8FACA,8FACA,+FACA,+FACA,gGACA,gGACA,gGACA,+FACA,+FACA,gGACA,8FACA,+FACA,+FACA,gGACA,+FACA,+FACA,+FACA,8FACA,+FACA,gGACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,gGACA,8FACA,6FACA,+FACA,gGACA,gGACA,+FACA,8FACA,+FACA,8FACA,+FACA,+FACA,+FACA,+FACA,gGACA,+FACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,8FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,gGACA,6FACA,gGACA,gGACA,8FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,+FACA,gGACA,gGACA,6FACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,8FACA,4FACA,gGACA,+FACA,+FACA,gGACA,8FACA,8FACA,8FACA,gGACA,+FACA,+FACA,+FACA,gGACA,+FACA,+FACA,gGACA,+FACA,gGACA,gGACA,gGACA,8FACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,+FACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,+FACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gGACA,gDC33BA,IAAAgvD,EAAyBr4D,EAAQ,IAEjC2G,EAAoB3G,EAAQ,IAE5BqE,EAAgBrE,EAAQ,GAExBy4D,EAAkBz4D,EAAQ,IAE1B,SAAA+3D,IACApxD,EAAAG,MAAAvC,MACA,IACArE,EAAAqE,KAOAA,KAAAC,MAAA,WACAuzD,EAAAh1D,UAAAyB,MAAAsC,MAAAvC,MAEAA,KAAAwC,WAAAvC,QAEAD,KAAAm0D,cAAA,GAGAn0D,KAAAiB,eAAA,WACA,eAGAjB,KAAAkB,KAAA,SAAAC,GACA,QAAAzE,EAAAkB,EAAA,EAAsBA,EAAAuD,EAAAtD,OAAiBD,IAAA,CACvClB,EAAAyE,EAAAvD,GAEA,IAAAgF,EAAA5C,KAAAwC,WAAArC,UAAAzD,GAEA,GAAAkG,GAAA9C,EAAA3D,MAAA,CACA6D,KAAAgB,QAAAlB,EAAA7D,MACA,MACO,GAAA2G,GAAA9C,EAAA1D,MAAA,CACP4D,KAAAgB,QAAAlB,EAAA9D,QACA,MACO4G,GAAA9C,EAAA5D,OACP8D,KAAAwC,WAAA3B,qBAAA,GACAb,KAAAm0D,gBAWA,OANAn0D,KAAAoB,YAAAtB,EAAA/D,WACAiE,KAAAqB,gBAAAvB,EAAAzD,qBACA2D,KAAAgB,QAAAlB,EAAA9D,SAIAgE,KAAAoB,YAGApB,KAAAqB,cAAA,WACA,IAAA+yD,EAAA,IAEA,GAAAp0D,KAAAm0D,cAAA,GACA,QAAAv2D,EAAA,EAAqBA,EAAAoC,KAAAm0D,cAAwBv2D,IAC7Cw2D,GArDA,GAwDA,SAAAA,EAEA,OAAAA,GAtDAz4D,EAAA6G,WAAA,IAAAsxD,EAAAI,GACAv4D,EAAAsE,QA4DAuzD,EAAAh1D,UAAA,IAAA4D,EACA7G,EAAAC,QAAAg4D,mBCxGA,IAAAQ,EAAav4D,EAAQ,GAmCrB44D,EAAA,CAAAL,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,MACA,iBACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA73D,MAAA63D,EAAA73D,MAAA,QAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,QAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,IAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,QAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,IAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,YAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,GAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,SAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,OAGAZ,EAAAC,QAAA,CACA8E,WA9DA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,wBACA,uBAgCAM,YAAA,GACAD,WAAA0zD,EACA3zD,aALA,kCAMAxD,KAAA,0BCxCA,IAAA42D,EAAyBr4D,EAAQ,IAEjC6G,EAA6B7G,EAAQ,IAErC64D,EAAkB74D,EAAQ,IAE1BwJ,EAA+BxJ,EAAQ,IAAoBwJ,yBAE3DuN,EAA0B/W,EAAQ,IAAU+W,oBAE5C1S,EAAgBr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AAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MACA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,OAGAX,EAAAC,QAAA,CACA8E,WAzCA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAWAM,YAAA,EACAD,WAAAi0D,EACAl0D,aALA,cAMAxD,KAAA,2BCnBA,IAAAoF,EAA6B7G,EAAQ,IAErCq4D,EAAyBr4D,EAAQ,IAEjCo5D,EAAoBp5D,EAAQ,IAE5BgJ,EAAiChJ,EAAQ,IAAoBgJ,2BAE7D,SAAAkvD,IACArxD,EAAAC,MAAAvC,MACA,IAAArE,EAAAqE,KAQAA,KAAAiB,eAAA,WACA,gBANAtF,EAAA6G,WAAA,IAAAsxD,EAAAe,GACAl5D,EAAA8G,uBAAA,IAAAgC,EACA9I,EAAAsE,QAUA0zD,EAAAn1D,UAAA,IAAA8D,EACA/G,EAAAC,QAAAm4D,mBCtDA,IAAAK,EAAav4D,EAAQ,GAmCrBq5D,EAAA,CAAAd,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA,EAAA83D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MACA,EAAA83D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,OAQAX,EAAAC,QAAA,CACA8E,WA/CA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAiBAM,YAAA,EACAD,WAAAm0D,EACAp0D,aALA,gBAMAxD,KAAA,2BCzBA,IAAA42D,EAAyBr4D,EAAQ,IAEjC6G,EAA6B7G,EAAQ,IAErC4I,EAAgC5I,EAAQ,IAAoB4I,0BAE5D0wD,EAAmBt5D,EAAQ,IAE3B,SAAAm4D,IACAtxD,EAAAC,MAAAvC,MACA,IAAArE,EAAAqE,KAQAA,KAAAiB,eAAA,WACA,gBANAtF,EAAA6G,WAAA,IAAAsxD,EAAAiB,GACAp5D,EAAA8G,uBAAA,IAAA4B,EACA1I,EAAAsE,QAUA2zD,EAAAp1D,UAAA,IAAA8D,EACA/G,EAAAC,QAAAo4D,mBCtDA,IAAAI,EAAav4D,EAAQ,GAmCrBu5D,EAAA,CAAAhB,EAAA73D,MAAA63D,EAAA93D,MAAA,EAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,OAGAX,EAAAC,QAAA,CACA8E,WAtCA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAQAM,YAAA,EACAD,WAAAq0D,EACAt0D,aALA,UAMAxD,KAAA,2BChBA,IAAA42D,EAAyBr4D,EAAQ,IAEjC6G,EAA6B7G,EAAQ,IAErCwI,EAAgCxI,EAAQ,IAAoBwI,0BAE5DgxD,EAAmBx5D,EAAQ,IAE3B,SAAAo4D,IACAvxD,EAAAC,MAAAvC,MACA,IAAArE,EAAAqE,KAQAA,KAAAiB,eAAA,WACA,gBANAtF,EAAA6G,WAAA,IAAAsxD,EAAAmB,GACAt5D,EAAA8G,uBAAA,IAAAwB,EACAtI,EAAAsE,QAUA4zD,EAAAr1D,UAAA,IAAA8D,EACA/G,EAAAC,QAAAq4D,mBCtDA,IAAAG,EAAav4D,EAAQ,GAmCrBy5D,EAAA,CAAAlB,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA93D,MAAA,QAAA83D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA73D,MACA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D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93D,OAGAV,EAAA2/D,UAAA,CACA76D,WA1CA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAYAM,YAAA,EACAD,WAAA46D,EACA76D,aALA,cAMAxD,KAAA,cAEA,IAiCAs+D,EAAA,CAAAxH,EAAA93D,MAAA,EAAA83D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MACA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA,IAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA93D,OAGAV,EAAA4/D,iBAAA,CACA96D,WA5CA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAcAM,YAAA,EACAD,WAAA66D,EACA96D,aALA,oBAMAxD,KAAA,eAEA,IAiCAu+D,EAAA,CAAAzH,EAAA93D,MAAA,EAAA83D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MACA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,OAGAV,EAAA6/D,iBAAA,CACA/6D,WA7CA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAeAM,YAAA,GACAD,WAAA86D,EACA/6D,aALA,sBAMAxD,KAAA,eAEA,IAiCAw+D,EAAA,CAAA1H,EAAA93D,MAAA,EAAA83D,EAAA73D,MAAA63D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA53D,MACA43D,EAAA53D,MAAA43D,EAAA53D,MAAA43D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA,EAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MACA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA73D,MAAA63D,EAAA53D,MAAA43D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,MAAA83D,EAAA93D,OAGAV,EAAA8/D,iBAAA,CACAh7D,WAzCA,iBAC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","file":"static/js/2.29e4cbe3.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nmodule.exports = {\n  detecting: 0,\n  foundIt: 1,\n  notMe: 2,\n  start: 0,\n  error: 1,\n  itsMe: 2,\n  SHORTCUT_THRESHOLD: 0.95\n};","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function warning() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    }\n  };\n}\n\nmodule.exports = warning;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar constants = require('./constants');\n\nfunction CodingStateMachine(sm) {\n  var self = this;\n\n  function init(sm) {\n    self._mModel = sm;\n    self._mCurrentBytePos = 0;\n    self._mCurrentCharLen = 0;\n    self.reset();\n  }\n\n  this.reset = function () {\n    this._mCurrentState = constants.start;\n  };\n\n  this.nextState = function (c) {\n    // for each byte we get its class\n    // if it is first byte, we also get byte length\n    var byteCls = this._mModel.classTable[c.charCodeAt(0)];\n\n    if (this._mCurrentState == constants.start) {\n      this._mCurrentBytePos = 0;\n      this._mCurrentCharLen = this._mModel.charLenTable[byteCls];\n    } // from byte's class and stateTable, we get its next state\n\n\n    this._mCurrentState = this._mModel.stateTable[this._mCurrentState * this._mModel.classFactor + byteCls];\n    this._mCurrentBytePos++;\n    return this._mCurrentState;\n  };\n\n  this.getCurrentCharLen = function () {\n    return this._mCurrentCharLen;\n  };\n\n  this.getCodingStateMachine = function () {\n    return this._mModel.name;\n  };\n\n  init(sm);\n}\n\nmodule.exports = CodingStateMachine;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar constants = require('./constants');\n\nfunction CharSetProber() {\n  this.reset = function () {\n    this._mState = constants.detecting;\n  };\n\n  this.getCharsetName = function () {\n    return null;\n  };\n\n  this.feed = function (aBuf) {};\n\n  this.getState = function () {\n    return this._mState;\n  };\n\n  this.getConfidence = function () {\n    return 0.0;\n  };\n\n  this.filterHighBitOnly = function (aBuf) {\n    aBuf = aBuf.replace(/[\\x00-\\x7F]+/g, \" \");\n    return aBuf;\n  };\n\n  this.filterWithoutEnglishLetters = function (aBuf) {\n    aBuf = aBuf.replace(/[A-Za-z]+/g, \" \");\n    return aBuf;\n  }; // Input: aBuf is a string containing all different types of characters\n  // Output: a string that contains all alphabetic letters, high-byte characters, and word immediately preceding `>`, but nothing else within `<>`\n  // Ex: input - '¡£º <div blah blah> abcdef</div> apples! * and oranges 9jd93jd>'\n  //     output - '¡£º blah div apples and oranges jd jd '\n\n\n  this.filterWithEnglishLetters = function (aBuf) {\n    var result = '';\n    var inTag = false;\n    var prev = 0;\n\n    for (var curr = 0; curr < aBuf.length; curr++) {\n      var c = aBuf[curr];\n\n      if (c == '>') {\n        inTag = false;\n      } else if (c == '<') {\n        inTag = true;\n      }\n\n      var isAlpha = /[a-zA-Z]/.test(c);\n      var isASCII = /^[\\x00-\\x7F]*$/.test(c);\n\n      if (isASCII && !isAlpha) {\n        if (curr > prev && !inTag) {\n          result = result + aBuf.substring(prev, curr) + ' ';\n        }\n\n        prev = curr + 1;\n      }\n    }\n\n    if (!inTag) {\n      result = result + aBuf.substring(prev);\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = CharSetProber;","// By default, do nothing\nexports.log = function () {};\n\nexports.setLogger = function setLogger(loggerFunction) {\n  exports.enabled = true;\n  exports.log = loggerFunction;\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetProber = require('./charsetprober');\n\nvar constants = require('./constants');\n\nvar logger = require('./logger');\n\nfunction MultiByteCharSetProber() {\n  CharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mDistributionAnalyzer = null;\n    self._mCodingSM = null; //self._mLastChar = [\"\\x00\", \"\\x00\"];\n\n    self._mLastChar = \"\\x00\\x00\";\n  }\n\n  this.reset = function () {\n    MultiByteCharSetProber.prototype.reset.apply(this);\n\n    if (this._mCodingSM) {\n      this._mCodingSM.reset();\n    }\n\n    if (this._mDistributionAnalyzer) {\n      this._mDistributionAnalyzer.reset();\n    } //this._mLastChar = [\"\\x00\", \"\\x00\"];\n\n\n    this._mLastChar = \"\\x00\\x00\";\n  };\n\n  this.getCharsetName = function () {};\n\n  this.feed = function (aBuf) {\n    var aLen = aBuf.length;\n\n    for (var i = 0; i < aLen; i++) {\n      var codingState = this._mCodingSM.nextState(aBuf[i]);\n\n      if (codingState == constants.error) {\n        logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n        this._mState = constants.notMe;\n        break;\n      } else if (codingState == constants.itsMe) {\n        this._mState = constants.foundIt;\n        break;\n      } else if (codingState == constants.start) {\n        var charLen = this._mCodingSM.getCurrentCharLen();\n\n        if (i == 0) {\n          this._mLastChar[1] = aBuf[0];\n\n          this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n        } else {\n          this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n        }\n      }\n    }\n\n    this._mLastChar[0] = aBuf[aLen - 1];\n\n    if (this.getState() == constants.detecting) {\n      if (this._mDistributionAnalyzer.gotEnoughData() && this.getConfidence() > constants.SHORTCUT_THRESHOLD) {\n        this._mState = constants.foundIt;\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    return this._mDistributionAnalyzer.getConfidence();\n  };\n}\n\nMultiByteCharSetProber.prototype = new CharSetProber();\nmodule.exports = MultiByteCharSetProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar jisfreq = require('./jisfreq');\n\nvar euctwfreq = require('./euctwfreq');\n\nvar euckrfreq = require('./euckrfreq');\n\nvar gb2312freq = require('./gb2312freq');\n\nvar big5freq = require('./big5freq');\n\nfunction CharDistributionAnalysis() {\n  var ENOUGH_DATA_THRESHOLD = 1024;\n  var SURE_YES = 0.99;\n  var SURE_NO = 0.01;\n  var MINIMUM_DATA_THRESHOLD = 3;\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = null; // Mapping table to get frequency order from char order (get from GetOrder())\n\n    self._mTableSize = null; // Size of above table\n\n    self._mTypicalDistributionRatio = null; // This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.\n\n    self.reset();\n  }\n  /**\n   * reset analyser, clear any state\n   */\n\n\n  this.reset = function () {\n    this._mDone = false; // If this flag is set to constants.True, detection is done and conclusion has been made\n\n    this._mTotalChars = 0; // Total characters encountered\n\n    this._mFreqChars = 0; // The number of characters whose frequency order is less than 512\n  };\n  /**\n   * feed a character with known length\n   */\n\n\n  this.feed = function (aStr, aCharLen) {\n    if (aCharLen == 2) {\n      // we only care about 2-bytes character in our distribution analysis\n      var order = this.getOrder(aStr);\n    } else {\n      order = -1;\n    }\n\n    if (order >= 0) {\n      this._mTotalChars++; // order is valid\n\n      if (order < this._mTableSize) {\n        if (512 > this._mCharToFreqOrder[order]) {\n          this._mFreqChars++;\n        }\n      }\n    }\n  };\n  /**\n   * return confidence based on existing data\n   */\n\n\n  this.getConfidence = function () {\n    // if we didn't receive any character in our consideration range, return negative answer\n    if (this._mTotalChars <= 0 || this._mFreqChars <= MINIMUM_DATA_THRESHOLD) {\n      return SURE_NO;\n    }\n\n    if (this._mTotalChars != this._mFreqChars) {\n      var r = this._mFreqChars / ((this._mTotalChars - this._mFreqChars) * this._mTypicalDistributionRatio);\n\n      if (r < SURE_YES) {\n        return r;\n      }\n    } // normalize confidence (we don't want to be 100% sure)\n\n\n    return SURE_YES;\n  };\n\n  this.gotEnoughData = function () {\n    // It is not necessary to receive all data to draw conclusion. For charset detection,\n    // certain amount of data is enough\n    return this._mTotalChars > ENOUGH_DATA_THRESHOLD;\n  };\n\n  this.getOrder = function (aStr) {\n    // We do not handle characters based on the original encoding string, but\n    // convert this encoding string to a number, here called order.\n    // This allows multiple encodings of a language to share one frequency table.\n    return -1;\n  };\n\n  init();\n}\n\nexports.CharDistributionAnalysis = CharDistributionAnalysis;\n\nfunction EUCTWDistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = euctwfreq.EUCTWCharToFreqOrder;\n    self._mTableSize = euctwfreq.EUCTW_TABLE_SIZE;\n    self._mTypicalDistributionRatio = euctwfreq.EUCTW_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for euc-TW encoding, we are interested\n    //   first  byte range: 0xc4 -- 0xfe\n    //   second byte range: 0xa1 -- 0xfe\n    // no validation needed here. State machine has done that\n    if (aStr.charCodeAt(0) >= 0xC4) {\n      return 94 * (aStr.charCodeAt(0) - 0xC4) + aStr.charCodeAt(1) - 0xA1;\n    } else {\n      return -1;\n    }\n  };\n\n  init();\n}\n\nEUCTWDistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.EUCTWDistributionAnalysis = EUCTWDistributionAnalysis;\n\nfunction EUCKRDistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = euckrfreq.EUCKRCharToFreqOrder;\n    self._mTableSize = euckrfreq.EUCKR_TABLE_SIZE;\n    self._mTypicalDistributionRatio = euckrfreq.EUCKR_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for euc-KR encoding, we are interested\n    //   first  byte range: 0xb0 -- 0xfe\n    //   second byte range: 0xa1 -- 0xfe\n    // no validation needed here. State machine has done that\n    if (aStr.charCodeAt(0) >= 0xB0) {\n      return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n    } else {\n      return -1;\n    }\n  };\n\n  init();\n}\n\nEUCKRDistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.EUCKRDistributionAnalysis = EUCKRDistributionAnalysis;\n\nfunction GB2312DistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = gb2312freq.GB2312CharToFreqOrder;\n    self._mTableSize = gb2312freq.GB2312_TABLE_SIZE;\n    self._mTypicalDistributionRatio = gb2312freq.GB2312_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for GB2312 encoding, we are interested\n    //  first  byte range: 0xb0 -- 0xfe\n    //  second byte range: 0xa1 -- 0xfe\n    // no validation needed here. State machine has done that\n    if (aStr.charCodeAt(0) >= 0xB0 && aStr.charCodeAt(1) >= 0xA1) {\n      return 94 * (aStr.charCodeAt(0) - 0xB0) + aStr.charCodeAt(1) - 0xA1;\n    } else {\n      return -1;\n    }\n  };\n\n  init();\n}\n\nGB2312DistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.GB2312DistributionAnalysis = GB2312DistributionAnalysis;\n\nfunction Big5DistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = big5freq.Big5CharToFreqOrder;\n    self._mTableSize = big5freq.BIG5_TABLE_SIZE;\n    self._mTypicalDistributionRatio = big5freq.BIG5_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for big5 encoding, we are interested\n    //   first  byte range: 0xa4 -- 0xfe\n    //   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe\n    // no validation needed here. State machine has done that\n    if (aStr.charCodeAt(0) >= 0xA4) {\n      if (aStr.charCodeAt(1) >= 0xA1) {\n        return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0xA1 + 63;\n      } else {\n        return 157 * (aStr.charCodeAt(0) - 0xA4) + aStr.charCodeAt(1) - 0x40;\n      }\n    } else {\n      return -1;\n    }\n  };\n\n  init();\n}\n\nBig5DistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.Big5DistributionAnalysis = Big5DistributionAnalysis;\n\nfunction SJISDistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\n    self._mTableSize = jisfreq.JIS_TABLE_SIZE;\n    self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for sjis encoding, we are interested\n    //   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xef\n    //   second byte range: 0x40 -- 0x7e,  0x80 -- 0xfc\n    // no validation needed here. State machine has done that\n    if (aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F) {\n      var order = 188 * (aStr.charCodeAt(0) - 0x81);\n    } else if (aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xEF) {\n      order = 188 * (aStr.charCodeAt(0) - 0xE0 + 31);\n    } else {\n      return -1;\n    }\n\n    order += aStr.charCodeAt(1) - 0x40;\n\n    if (aStr.charCodeAt(1) < 0x40 || aStr.charCodeAt(1) === 0x7F || aStr.charCodeAt(1) > 0xFC) {\n      order = -1;\n    }\n\n    return order;\n  };\n\n  init();\n}\n\nSJISDistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.SJISDistributionAnalysis = SJISDistributionAnalysis;\n\nfunction EUCJPDistributionAnalysis() {\n  CharDistributionAnalysis.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCharToFreqOrder = jisfreq.JISCharToFreqOrder;\n    self._mTableSize = jisfreq.JIS_TABLE_SIZE;\n    self._mTypicalDistributionRatio = jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO;\n  }\n\n  this.getOrder = function (aStr) {\n    // for euc-JP encoding, we are interested\n    //   first  byte range: 0xa0 -- 0xfe\n    //   second byte range: 0xa1 -- 0xfe\n    // no validation needed here. State machine has done that\n    if (aStr[0] >= \"\\xA0\") {\n      return 94 * (aStr.charCodeAt(0) - 0xA1) + aStr.charCodeAt(1) - 0xA1;\n    } else {\n      return -1;\n    }\n  };\n\n  init();\n}\n\nEUCJPDistributionAnalysis.prototype = new CharDistributionAnalysis();\nexports.EUCJPDistributionAnalysis = EUCJPDistributionAnalysis;","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = {\n    re: re,\n    keys: keys\n  };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\n\n\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, {\n    end: exact,\n    strict: strict,\n    sensitive: sensitive\n  }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n  if (!match) return null;\n  var url = match[0],\n      values = match.slice(1);\n  var isExact = pathname === url;\n  if (exact && !isExact) return null;\n  return {\n    path: path,\n    // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url,\n    // the matched portion of the URL\n    isExact: isExact,\n    // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash = void 0;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","export var addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\nexport var stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\nexport var hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\nexport var stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\nexport var stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\nexport var parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\nexport var createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return path;\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport { parsePath } from './PathUtils';\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n};","import warning from 'warning';\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    warning(prompt == null, 'A history supports only one prompt at a time');\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexport default createTransitionManager;","export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n};\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation } from './LocationUtils';\nimport { addLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsHistory, supportsPopStateOnHashChange, isExtraneousPopstateEvent } from './DOMUtils';\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  invariant(canUseDOM, 'Browser history needs a DOM');\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + createPath(location);\n  };\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, PopStateEvent, handlePopState);\n      if (needsHashChangeListener) addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, PopStateEvent, handlePopState);\n      if (needsHashChangeListener) removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createBrowserHistory;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from './LocationUtils';\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\nvar HashChangeEvent = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  invariant(canUseDOM, 'Hash history needs a DOM');\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }; // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  };\n\n  var push = function push(path, state) {\n    warning(state === undefined, 'Hash history cannot push state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(state === undefined, 'Hash history cannot replace state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createHashHistory;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport { createPath } from './PathUtils';\nimport { createLocation } from './LocationUtils';\nimport createTransitionManager from './createTransitionManager';\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createMemoryHistory;","import _createBrowserHistory from './createBrowserHistory';\nexport { _createBrowserHistory as createBrowserHistory };\nimport _createHashHistory from './createHashHistory';\nexport { _createHashHistory as createHashHistory };\nimport _createMemoryHistory from './createMemoryHistory';\nexport { _createMemoryHistory as createMemoryHistory };\nexport { createLocation, locationsAreEqual } from './LocationUtils';\nexport { parsePath, createPath } from './PathUtils';","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar constants = require('./constants');\n\nvar CharSetProber = require('./charsetprober');\n\nvar logger = require('./logger');\n\nfunction CharSetGroupProber() {\n  CharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mActiveNum = 0;\n    self._mProbers = [];\n    self._mBestGuessProber = null;\n  }\n\n  this.reset = function () {\n    CharSetGroupProber.prototype.reset.apply(this);\n    this._mActiveNum = 0;\n\n    for (var i = 0, prober; prober = this._mProbers[i]; i++) {\n      if (prober) {\n        prober.reset();\n        prober.active = true;\n        this._mActiveNum++;\n      }\n    }\n\n    this._mBestGuessProber = null;\n  };\n\n  this.getCharsetName = function () {\n    if (!this._mBestGuessProber) {\n      this.getConfidence();\n      if (!this._mBestGuessProber) return null;\n    }\n\n    return this._mBestGuessProber.getCharsetName();\n  };\n\n  this.feed = function (aBuf) {\n    for (var i = 0, prober; prober = this._mProbers[i]; i++) {\n      if (!prober || !prober.active) continue;\n      var st = prober.feed(aBuf);\n      if (!st) continue;\n\n      if (st == constants.foundIt) {\n        this._mBestGuessProber = prober;\n        return this.getState();\n      } else if (st == constants.notMe) {\n        prober.active = false;\n        this._mActiveNum--;\n\n        if (this._mActiveNum <= 0) {\n          this._mState = constants.notMe;\n          return this.getState();\n        }\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var st = this.getState();\n\n    if (st == constants.foundIt) {\n      return 0.99;\n    } else if (st == constants.notMe) {\n      return 0.01;\n    }\n\n    var bestConf = 0.0;\n    this._mBestGuessProber = null;\n\n    for (var i = 0, prober; prober = this._mProbers[i]; i++) {\n      if (!prober) continue;\n\n      if (!prober.active) {\n        logger.log(prober.getCharsetName() + \" not active\\n\");\n        continue;\n      }\n\n      var cf = prober.getConfidence();\n      logger.log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\");\n\n      if (bestConf < cf) {\n        bestConf = cf;\n        this._mBestGuessProber = prober;\n      }\n    }\n\n    if (!this._mBestGuessProber) return 0.0;\n    return bestConf;\n  };\n\n  init();\n}\n\nCharSetGroupProber.prototype = new CharSetProber();\nmodule.exports = CharSetGroupProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// This is hiragana 2-char sequence table, the number in each cell represents its frequency category\nexports.jp2CharContext = [[0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [2, 4, 0, 4, 0, 3, 0, 4, 0, 3, 4, 4, 4, 2, 4, 3, 3, 4, 3, 2, 3, 3, 4, 2, 3, 3, 3, 2, 4, 1, 4, 3, 3, 1, 5, 4, 3, 4, 3, 4, 3, 5, 3, 0, 3, 5, 4, 2, 0, 3, 1, 0, 3, 3, 0, 3, 3, 0, 1, 1, 0, 4, 3, 0, 3, 3, 0, 4, 0, 2, 0, 3, 5, 5, 5, 5, 4, 0, 4, 1, 0, 3, 4], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 4, 0, 5, 0, 5, 0, 4, 0, 4, 5, 4, 4, 3, 5, 3, 5, 1, 5, 3, 4, 3, 4, 4, 3, 4, 3, 3, 4, 3, 5, 4, 4, 3, 5, 5, 3, 5, 5, 5, 3, 5, 5, 3, 4, 5, 5, 3, 1, 3, 2, 0, 3, 4, 0, 4, 2, 0, 4, 2, 1, 5, 3, 2, 3, 5, 0, 4, 0, 2, 0, 5, 4, 4, 5, 4, 5, 0, 4, 0, 0, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 4, 0, 3, 0, 3, 0, 4, 5, 4, 3, 3, 3, 3, 4, 3, 5, 4, 4, 3, 5, 4, 4, 3, 4, 3, 4, 4, 4, 4, 5, 3, 4, 4, 3, 4, 5, 5, 4, 5, 5, 1, 4, 5, 4, 3, 0, 3, 3, 1, 3, 3, 0, 4, 4, 0, 3, 3, 1, 5, 3, 3, 3, 5, 0, 4, 0, 3, 0, 4, 4, 3, 4, 3, 3, 0, 4, 1, 1, 3, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 4, 0, 3, 0, 3, 0, 4, 0, 3, 4, 4, 3, 2, 2, 1, 2, 1, 3, 1, 3, 3, 3, 3, 3, 4, 3, 1, 3, 3, 5, 3, 3, 0, 4, 3, 0, 5, 4, 3, 3, 5, 4, 4, 3, 4, 4, 5, 0, 1, 2, 0, 1, 2, 0, 2, 2, 0, 1, 0, 0, 5, 2, 2, 1, 4, 0, 3, 0, 1, 0, 4, 4, 3, 5, 4, 3, 0, 2, 1, 0, 4, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 5, 0, 4, 0, 2, 1, 4, 4, 2, 4, 1, 4, 2, 4, 2, 4, 3, 3, 3, 4, 3, 3, 3, 3, 1, 4, 2, 3, 3, 3, 1, 4, 4, 1, 1, 1, 4, 3, 3, 2, 0, 2, 4, 3, 2, 0, 3, 3, 0, 3, 1, 1, 0, 0, 0, 3, 3, 0, 4, 2, 2, 3, 4, 0, 4, 0, 3, 0, 4, 4, 5, 3, 4, 4, 0, 3, 0, 0, 1, 4], [1, 4, 0, 4, 0, 4, 0, 4, 0, 3, 5, 4, 4, 3, 4, 3, 5, 4, 3, 3, 4, 3, 5, 4, 4, 4, 4, 3, 4, 2, 4, 3, 3, 1, 5, 4, 3, 2, 4, 5, 4, 5, 5, 4, 4, 5, 4, 4, 0, 3, 2, 2, 3, 3, 0, 4, 3, 1, 3, 2, 1, 4, 3, 3, 4, 5, 0, 3, 0, 2, 0, 4, 5, 5, 4, 5, 4, 0, 4, 0, 0, 5, 4], [0, 5, 0, 5, 0, 4, 0, 3, 0, 4, 4, 3, 4, 3, 3, 3, 4, 0, 4, 4, 4, 3, 4, 3, 4, 3, 3, 1, 4, 2, 4, 3, 4, 0, 5, 4, 1, 4, 5, 4, 4, 5, 3, 2, 4, 3, 4, 3, 2, 4, 1, 3, 3, 3, 2, 3, 2, 0, 4, 3, 3, 4, 3, 3, 3, 4, 0, 4, 0, 3, 0, 4, 5, 4, 4, 4, 3, 0, 4, 1, 0, 1, 3], [0, 3, 1, 4, 0, 3, 0, 2, 0, 3, 4, 4, 3, 1, 4, 2, 3, 3, 4, 3, 4, 3, 4, 3, 4, 4, 3, 2, 3, 1, 5, 4, 4, 1, 4, 4, 3, 5, 4, 4, 3, 5, 5, 4, 3, 4, 4, 3, 1, 2, 3, 1, 2, 2, 0, 3, 2, 0, 3, 1, 0, 5, 3, 3, 3, 4, 3, 3, 3, 3, 4, 4, 4, 4, 5, 4, 2, 0, 3, 3, 2, 4, 3], [0, 2, 0, 3, 0, 1, 0, 1, 0, 0, 3, 2, 0, 0, 2, 0, 1, 0, 2, 1, 3, 3, 3, 1, 2, 3, 1, 0, 1, 0, 4, 2, 1, 1, 3, 3, 0, 4, 3, 3, 1, 4, 3, 3, 0, 3, 3, 2, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 4, 1, 0, 2, 3, 2, 2, 2, 1, 3, 3, 3, 4, 4, 3, 2, 0, 3, 1, 0, 3, 3], [0, 4, 0, 4, 0, 3, 0, 3, 0, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 3, 4, 2, 4, 3, 4, 3, 3, 2, 4, 3, 4, 5, 4, 1, 4, 5, 3, 5, 4, 5, 3, 5, 4, 0, 3, 5, 5, 3, 1, 3, 3, 2, 2, 3, 0, 3, 4, 1, 3, 3, 2, 4, 3, 3, 3, 4, 0, 4, 0, 3, 0, 4, 5, 4, 4, 5, 3, 0, 4, 1, 0, 3, 4], [0, 2, 0, 3, 0, 3, 0, 0, 0, 2, 2, 2, 1, 0, 1, 0, 0, 0, 3, 0, 3, 0, 3, 0, 1, 3, 1, 0, 3, 1, 3, 3, 3, 1, 3, 3, 3, 0, 1, 3, 1, 3, 4, 0, 0, 3, 1, 1, 0, 3, 2, 0, 0, 0, 0, 1, 3, 0, 1, 0, 0, 3, 3, 2, 0, 3, 0, 0, 0, 0, 0, 3, 4, 3, 4, 3, 3, 0, 3, 0, 0, 2, 3], [2, 3, 0, 3, 0, 2, 0, 1, 0, 3, 3, 4, 3, 1, 3, 1, 1, 1, 3, 1, 4, 3, 4, 3, 3, 3, 0, 0, 3, 1, 5, 4, 3, 1, 4, 3, 2, 5, 5, 4, 4, 4, 4, 3, 3, 4, 4, 4, 0, 2, 1, 1, 3, 2, 0, 1, 2, 0, 0, 1, 0, 4, 1, 3, 3, 3, 0, 3, 0, 1, 0, 4, 4, 4, 5, 5, 3, 0, 2, 0, 0, 4, 4], [0, 2, 0, 1, 0, 3, 1, 3, 0, 2, 3, 3, 3, 0, 3, 1, 0, 0, 3, 0, 3, 2, 3, 1, 3, 2, 1, 1, 0, 0, 4, 2, 1, 0, 2, 3, 1, 4, 3, 2, 0, 4, 4, 3, 1, 3, 1, 3, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 4, 1, 1, 1, 2, 0, 3, 0, 0, 0, 3, 4, 2, 4, 3, 2, 0, 1, 0, 0, 3, 3], [0, 1, 0, 4, 0, 5, 0, 4, 0, 2, 4, 4, 2, 3, 3, 2, 3, 3, 5, 3, 3, 3, 4, 3, 4, 2, 3, 0, 4, 3, 3, 3, 4, 1, 4, 3, 2, 1, 5, 5, 3, 4, 5, 1, 3, 5, 4, 2, 0, 3, 3, 0, 1, 3, 0, 4, 2, 0, 1, 3, 1, 4, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 4, 4, 4, 5, 5, 0, 3, 0, 1, 4, 5], [0, 2, 0, 3, 0, 3, 0, 0, 0, 2, 3, 1, 3, 0, 4, 0, 1, 1, 3, 0, 3, 4, 3, 2, 3, 1, 0, 3, 3, 2, 3, 1, 3, 0, 2, 3, 0, 2, 1, 4, 1, 2, 2, 0, 0, 3, 3, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 0, 3, 2, 1, 3, 3, 0, 2, 0, 2, 0, 0, 3, 3, 1, 2, 4, 0, 3, 0, 2, 2, 3], [2, 4, 0, 5, 0, 4, 0, 4, 0, 2, 4, 4, 4, 3, 4, 3, 3, 3, 1, 2, 4, 3, 4, 3, 4, 4, 5, 0, 3, 3, 3, 3, 2, 0, 4, 3, 1, 4, 3, 4, 1, 4, 4, 3, 3, 4, 4, 3, 1, 2, 3, 0, 4, 2, 0, 4, 1, 0, 3, 3, 0, 4, 3, 3, 3, 4, 0, 4, 0, 2, 0, 3, 5, 3, 4, 5, 2, 0, 3, 0, 0, 4, 5], [0, 3, 0, 4, 0, 1, 0, 1, 0, 1, 3, 2, 2, 1, 3, 0, 3, 0, 2, 0, 2, 0, 3, 0, 2, 0, 0, 0, 1, 0, 1, 1, 0, 0, 3, 1, 0, 0, 0, 4, 0, 3, 1, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 3, 1, 0, 3, 0, 0, 0, 1, 4, 4, 4, 3, 0, 0, 4, 0, 0, 1, 4], [1, 4, 1, 5, 0, 3, 0, 3, 0, 4, 5, 4, 4, 3, 5, 3, 3, 4, 4, 3, 4, 1, 3, 3, 3, 3, 2, 1, 4, 1, 5, 4, 3, 1, 4, 4, 3, 5, 4, 4, 3, 5, 4, 3, 3, 4, 4, 4, 0, 3, 3, 1, 2, 3, 0, 3, 1, 0, 3, 3, 0, 5, 4, 4, 4, 4, 4, 4, 3, 3, 5, 4, 4, 3, 3, 5, 4, 0, 3, 2, 0, 4, 4], [0, 2, 0, 3, 0, 1, 0, 0, 0, 1, 3, 3, 3, 2, 4, 1, 3, 0, 3, 1, 3, 0, 2, 2, 1, 1, 0, 0, 2, 0, 4, 3, 1, 0, 4, 3, 0, 4, 4, 4, 1, 4, 3, 1, 1, 3, 3, 1, 0, 2, 0, 0, 1, 3, 0, 0, 0, 0, 2, 0, 0, 4, 3, 2, 4, 3, 5, 4, 3, 3, 3, 4, 3, 3, 4, 3, 3, 0, 2, 1, 0, 3, 3], [0, 2, 0, 4, 0, 3, 0, 2, 0, 2, 5, 5, 3, 4, 4, 4, 4, 1, 4, 3, 3, 0, 4, 3, 4, 3, 1, 3, 3, 2, 4, 3, 0, 3, 4, 3, 0, 3, 4, 4, 2, 4, 4, 0, 4, 5, 3, 3, 2, 2, 1, 1, 1, 2, 0, 1, 5, 0, 3, 3, 2, 4, 3, 3, 3, 4, 0, 3, 0, 2, 0, 4, 4, 3, 5, 5, 0, 0, 3, 0, 2, 3, 3], [0, 3, 0, 4, 0, 3, 0, 1, 0, 3, 4, 3, 3, 1, 3, 3, 3, 0, 3, 1, 3, 0, 4, 3, 3, 1, 1, 0, 3, 0, 3, 3, 0, 0, 4, 4, 0, 1, 5, 4, 3, 3, 5, 0, 3, 3, 4, 3, 0, 2, 0, 1, 1, 1, 0, 1, 3, 0, 1, 2, 1, 3, 3, 2, 3, 3, 0, 3, 0, 1, 0, 1, 3, 3, 4, 4, 1, 0, 1, 2, 2, 1, 3], [0, 1, 0, 4, 0, 4, 0, 3, 0, 1, 3, 3, 3, 2, 3, 1, 1, 0, 3, 0, 3, 3, 4, 3, 2, 4, 2, 0, 1, 0, 4, 3, 2, 0, 4, 3, 0, 5, 3, 3, 2, 4, 4, 4, 3, 3, 3, 4, 0, 1, 3, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 4, 2, 3, 3, 3, 0, 3, 0, 0, 0, 4, 4, 4, 5, 3, 2, 0, 3, 3, 0, 3, 5], [0, 2, 0, 3, 0, 0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0, 1, 0, 3, 1, 1, 3, 3, 0, 0, 3, 0, 0, 3, 0, 2, 3, 1, 0, 3, 1, 0, 3, 3, 2, 0, 4, 2, 2, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 0, 1, 3, 1, 2, 0, 0, 0, 1, 0, 0, 1, 4], [0, 3, 0, 3, 0, 5, 0, 1, 0, 2, 4, 3, 1, 3, 3, 2, 1, 1, 5, 2, 1, 0, 5, 1, 2, 0, 0, 0, 3, 3, 2, 2, 3, 2, 4, 3, 0, 0, 3, 3, 1, 3, 3, 0, 2, 5, 3, 4, 0, 3, 3, 0, 1, 2, 0, 2, 2, 0, 3, 2, 0, 2, 2, 3, 3, 3, 0, 2, 0, 1, 0, 3, 4, 4, 2, 5, 4, 0, 3, 0, 0, 3, 5], [0, 3, 0, 3, 0, 3, 0, 1, 0, 3, 3, 3, 3, 0, 3, 0, 2, 0, 2, 1, 1, 0, 2, 0, 1, 0, 0, 0, 2, 1, 0, 0, 1, 0, 3, 2, 0, 0, 3, 3, 1, 2, 3, 1, 0, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 3, 1, 2, 3, 0, 3, 0, 1, 0, 3, 2, 1, 0, 4, 3, 0, 1, 1, 0, 3, 3], [0, 4, 0, 5, 0, 3, 0, 3, 0, 4, 5, 5, 4, 3, 5, 3, 4, 3, 5, 3, 3, 2, 5, 3, 4, 4, 4, 3, 4, 3, 4, 5, 5, 3, 4, 4, 3, 4, 4, 5, 4, 4, 4, 3, 4, 5, 5, 4, 2, 3, 4, 2, 3, 4, 0, 3, 3, 1, 4, 3, 2, 4, 3, 3, 5, 5, 0, 3, 0, 3, 0, 5, 5, 5, 5, 4, 4, 0, 4, 0, 1, 4, 4], [0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 5, 4, 4, 2, 3, 2, 5, 1, 3, 2, 5, 1, 4, 2, 3, 2, 3, 3, 4, 3, 3, 3, 3, 2, 5, 4, 1, 3, 3, 5, 3, 4, 4, 0, 4, 4, 3, 1, 1, 3, 1, 0, 2, 3, 0, 2, 3, 0, 3, 0, 0, 4, 3, 1, 3, 4, 0, 3, 0, 2, 0, 4, 4, 4, 3, 4, 5, 0, 4, 0, 0, 3, 4], [0, 3, 0, 3, 0, 3, 1, 2, 0, 3, 4, 4, 3, 3, 3, 0, 2, 2, 4, 3, 3, 1, 3, 3, 3, 1, 1, 0, 3, 1, 4, 3, 2, 3, 4, 4, 2, 4, 4, 4, 3, 4, 4, 3, 2, 4, 4, 3, 1, 3, 3, 1, 3, 3, 0, 4, 1, 0, 2, 2, 1, 4, 3, 2, 3, 3, 5, 4, 3, 3, 5, 4, 4, 3, 3, 0, 4, 0, 3, 2, 2, 4, 4], [0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 2, 1, 3, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 1, 0, 1, 1, 3, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 0, 3, 4, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 4, 0, 4, 1, 4, 0, 3, 0, 4, 0, 3, 0, 4, 0, 3, 0, 3, 0, 4, 1, 5, 1, 4, 0, 0, 3, 0, 5, 0, 5, 2, 0, 1, 0, 0, 0, 2, 1, 4, 0, 1, 3, 0, 0, 3, 0, 0, 3, 1, 1, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 4, 0, 5, 0, 3, 0, 2, 0, 3, 5, 4, 4, 3, 4, 3, 5, 3, 4, 3, 3, 0, 4, 3, 3, 3, 3, 3, 3, 2, 4, 4, 3, 1, 3, 4, 4, 5, 4, 4, 3, 4, 4, 1, 3, 5, 4, 3, 3, 3, 1, 2, 2, 3, 3, 1, 3, 1, 3, 3, 3, 5, 3, 3, 4, 5, 0, 3, 0, 3, 0, 3, 4, 3, 4, 4, 3, 0, 3, 0, 2, 4, 3], [0, 1, 0, 4, 0, 0, 0, 0, 0, 1, 4, 0, 4, 1, 4, 2, 4, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 1, 1, 1, 0, 3, 0, 0, 0, 1, 2, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 3, 2, 0, 2, 2, 0, 1, 0, 0, 0, 2, 3, 2, 3, 3, 0, 0, 0, 0, 2, 1, 0], [0, 5, 1, 5, 0, 3, 0, 3, 0, 5, 4, 4, 5, 1, 5, 3, 3, 0, 4, 3, 4, 3, 5, 3, 4, 3, 3, 2, 4, 3, 4, 3, 3, 0, 3, 3, 1, 4, 4, 3, 4, 4, 4, 3, 4, 5, 5, 3, 2, 3, 1, 1, 3, 3, 1, 3, 1, 1, 3, 3, 2, 4, 5, 3, 3, 5, 0, 4, 0, 3, 0, 4, 4, 3, 5, 3, 3, 0, 3, 4, 0, 4, 3], [0, 5, 0, 5, 0, 3, 0, 2, 0, 4, 4, 3, 5, 2, 4, 3, 3, 3, 4, 4, 4, 3, 5, 3, 5, 3, 3, 1, 4, 0, 4, 3, 3, 0, 3, 3, 0, 4, 4, 4, 4, 5, 4, 3, 3, 5, 5, 3, 2, 3, 1, 2, 3, 2, 0, 1, 0, 0, 3, 2, 2, 4, 4, 3, 1, 5, 0, 4, 0, 3, 0, 4, 3, 1, 3, 2, 1, 0, 3, 3, 0, 3, 3], [0, 4, 0, 5, 0, 5, 0, 4, 0, 4, 5, 5, 5, 3, 4, 3, 3, 2, 5, 4, 4, 3, 5, 3, 5, 3, 4, 0, 4, 3, 4, 4, 3, 2, 4, 4, 3, 4, 5, 4, 4, 5, 5, 0, 3, 5, 5, 4, 1, 3, 3, 2, 3, 3, 1, 3, 1, 0, 4, 3, 1, 4, 4, 3, 4, 5, 0, 4, 0, 2, 0, 4, 3, 4, 4, 3, 3, 0, 4, 0, 0, 5, 5], [0, 4, 0, 4, 0, 5, 0, 1, 1, 3, 3, 4, 4, 3, 4, 1, 3, 0, 5, 1, 3, 0, 3, 1, 3, 1, 1, 0, 3, 0, 3, 3, 4, 0, 4, 3, 0, 4, 4, 4, 3, 4, 4, 0, 3, 5, 4, 1, 0, 3, 0, 0, 2, 3, 0, 3, 1, 0, 3, 1, 0, 3, 2, 1, 3, 5, 0, 3, 0, 1, 0, 3, 2, 3, 3, 4, 4, 0, 2, 2, 0, 4, 4], [2, 4, 0, 5, 0, 4, 0, 3, 0, 4, 5, 5, 4, 3, 5, 3, 5, 3, 5, 3, 5, 2, 5, 3, 4, 3, 3, 4, 3, 4, 5, 3, 2, 1, 5, 4, 3, 2, 3, 4, 5, 3, 4, 1, 2, 5, 4, 3, 0, 3, 3, 0, 3, 2, 0, 2, 3, 0, 4, 1, 0, 3, 4, 3, 3, 5, 0, 3, 0, 1, 0, 4, 5, 5, 5, 4, 3, 0, 4, 2, 0, 3, 5], [0, 5, 0, 4, 0, 4, 0, 2, 0, 5, 4, 3, 4, 3, 4, 3, 3, 3, 4, 3, 4, 2, 5, 3, 5, 3, 4, 1, 4, 3, 4, 4, 4, 0, 3, 5, 0, 4, 4, 4, 4, 5, 3, 1, 3, 4, 5, 3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 0, 3, 3, 2, 4, 3, 3, 3, 5, 3, 4, 1, 3, 3, 5, 3, 2, 0, 0, 0, 0, 4, 3, 1, 3, 3], [0, 1, 0, 3, 0, 3, 0, 1, 0, 1, 3, 3, 3, 2, 3, 3, 3, 0, 3, 0, 0, 0, 3, 1, 3, 0, 0, 0, 2, 2, 2, 3, 0, 0, 3, 2, 0, 1, 2, 4, 1, 3, 3, 0, 0, 3, 3, 3, 0, 1, 0, 0, 2, 1, 0, 0, 3, 0, 3, 1, 0, 3, 0, 0, 1, 3, 0, 2, 0, 1, 0, 3, 3, 1, 3, 3, 0, 0, 1, 1, 0, 3, 3], [0, 2, 0, 3, 0, 2, 1, 4, 0, 2, 2, 3, 1, 1, 3, 1, 1, 0, 2, 0, 3, 1, 2, 3, 1, 3, 0, 0, 1, 0, 4, 3, 2, 3, 3, 3, 1, 4, 2, 3, 3, 3, 3, 1, 0, 3, 1, 4, 0, 1, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1, 0, 3, 1, 3, 2, 2, 0, 1, 0, 0, 0, 2, 3, 3, 3, 1, 0, 0, 0, 0, 0, 2, 3], [0, 5, 0, 4, 0, 5, 0, 2, 0, 4, 5, 5, 3, 3, 4, 3, 3, 1, 5, 4, 4, 2, 4, 4, 4, 3, 4, 2, 4, 3, 5, 5, 4, 3, 3, 4, 3, 3, 5, 5, 4, 5, 5, 1, 3, 4, 5, 3, 1, 4, 3, 1, 3, 3, 0, 3, 3, 1, 4, 3, 1, 4, 5, 3, 3, 5, 0, 4, 0, 3, 0, 5, 3, 3, 1, 4, 3, 0, 4, 0, 1, 5, 3], [0, 5, 0, 5, 0, 4, 0, 2, 0, 4, 4, 3, 4, 3, 3, 3, 3, 3, 5, 4, 4, 4, 4, 4, 4, 5, 3, 3, 5, 2, 4, 4, 4, 3, 4, 4, 3, 3, 4, 4, 5, 5, 3, 3, 4, 3, 4, 3, 3, 4, 3, 3, 3, 3, 1, 2, 2, 1, 4, 3, 3, 5, 4, 4, 3, 4, 0, 4, 0, 3, 0, 4, 4, 4, 4, 4, 1, 0, 4, 2, 0, 2, 4], [0, 4, 0, 4, 0, 3, 0, 1, 0, 3, 5, 2, 3, 0, 3, 0, 2, 1, 4, 2, 3, 3, 4, 1, 4, 3, 3, 2, 4, 1, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3, 3, 5, 3, 3, 3, 3, 3, 2, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0, 3, 1, 2, 2, 3, 0, 3, 0, 2, 0, 4, 4, 3, 3, 4, 1, 0, 3, 0, 0, 2, 4], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 1, 3, 0, 3, 2, 0, 0, 0, 1, 0, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 0, 2, 0, 0, 0, 0, 0, 0, 2], [0, 2, 1, 3, 0, 2, 0, 2, 0, 3, 3, 3, 3, 1, 3, 1, 3, 3, 3, 3, 3, 3, 4, 2, 2, 1, 2, 1, 4, 0, 4, 3, 1, 3, 3, 3, 2, 4, 3, 5, 4, 3, 3, 3, 3, 3, 3, 3, 0, 1, 3, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 4, 2, 0, 2, 3, 0, 3, 3, 0, 3, 3, 4, 2, 3, 1, 4, 0, 1, 2, 0, 2, 3], [0, 3, 0, 3, 0, 1, 0, 3, 0, 2, 3, 3, 3, 0, 3, 1, 2, 0, 3, 3, 2, 3, 3, 2, 3, 2, 3, 1, 3, 0, 4, 3, 2, 0, 3, 3, 1, 4, 3, 3, 2, 3, 4, 3, 1, 3, 3, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 4, 1, 1, 0, 3, 0, 3, 1, 0, 2, 3, 3, 3, 3, 3, 1, 0, 0, 2, 0, 3, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 3, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3], [0, 2, 0, 3, 1, 3, 0, 3, 0, 2, 3, 3, 3, 1, 3, 1, 3, 1, 3, 1, 3, 3, 3, 1, 3, 0, 2, 3, 1, 1, 4, 3, 3, 2, 3, 3, 1, 2, 2, 4, 1, 3, 3, 0, 1, 4, 2, 3, 0, 1, 3, 0, 3, 0, 0, 1, 3, 0, 2, 0, 0, 3, 3, 2, 1, 3, 0, 3, 0, 2, 0, 3, 4, 4, 4, 3, 1, 0, 3, 0, 0, 3, 3], [0, 2, 0, 1, 0, 2, 0, 0, 0, 1, 3, 2, 2, 1, 3, 0, 1, 1, 3, 0, 3, 2, 3, 1, 2, 0, 2, 0, 1, 1, 3, 3, 3, 0, 3, 3, 1, 1, 2, 3, 2, 3, 3, 1, 2, 3, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 2, 1, 2, 1, 3, 0, 3, 0, 0, 0, 3, 4, 4, 4, 3, 2, 0, 2, 0, 0, 2, 4], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 3], [0, 3, 0, 3, 0, 2, 0, 3, 0, 3, 3, 3, 2, 3, 2, 2, 2, 0, 3, 1, 3, 3, 3, 2, 3, 3, 0, 0, 3, 0, 3, 2, 2, 0, 2, 3, 1, 4, 3, 4, 3, 3, 2, 3, 1, 5, 4, 4, 0, 3, 1, 2, 1, 3, 0, 3, 1, 1, 2, 0, 2, 3, 1, 3, 1, 3, 0, 3, 0, 1, 0, 3, 3, 4, 4, 2, 1, 0, 2, 1, 0, 2, 4], [0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 4, 2, 5, 1, 4, 0, 2, 0, 2, 1, 3, 1, 4, 0, 2, 1, 0, 0, 2, 1, 4, 1, 1, 0, 3, 3, 0, 5, 1, 3, 2, 3, 3, 1, 0, 3, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 0, 1, 0, 3, 0, 2, 0, 1, 0, 3, 3, 3, 4, 3, 3, 0, 0, 0, 0, 2, 3], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 3], [0, 1, 0, 3, 0, 4, 0, 3, 0, 2, 4, 3, 1, 0, 3, 2, 2, 1, 3, 1, 2, 2, 3, 1, 1, 1, 2, 1, 3, 0, 1, 2, 0, 1, 3, 2, 1, 3, 0, 5, 5, 1, 0, 0, 1, 3, 2, 1, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 3, 4, 0, 1, 1, 1, 3, 2, 0, 2, 0, 1, 0, 2, 3, 3, 1, 2, 3, 0, 1, 0, 1, 0, 4], [0, 0, 0, 1, 0, 3, 0, 3, 0, 2, 2, 1, 0, 0, 4, 0, 3, 0, 3, 1, 3, 0, 3, 0, 3, 0, 1, 0, 3, 0, 3, 1, 3, 0, 3, 3, 0, 0, 1, 2, 1, 1, 1, 0, 1, 2, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 0, 0, 0, 0, 2, 3, 3, 3, 3, 0, 0, 0, 0, 1, 4], [0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 3, 1, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 0, 2, 3, 0, 0, 2, 2, 3, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 2, 3], [2, 4, 0, 5, 0, 5, 0, 4, 0, 3, 4, 3, 3, 3, 4, 3, 3, 3, 4, 3, 4, 4, 5, 4, 5, 5, 5, 2, 3, 0, 5, 5, 4, 1, 5, 4, 3, 1, 5, 4, 3, 4, 4, 3, 3, 4, 3, 3, 0, 3, 2, 0, 2, 3, 0, 3, 0, 0, 3, 3, 0, 5, 3, 2, 3, 3, 0, 3, 0, 3, 0, 3, 4, 5, 4, 5, 3, 0, 4, 3, 0, 3, 4], [0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 3, 4, 3, 2, 3, 2, 3, 0, 4, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 4, 3, 3, 1, 3, 4, 3, 4, 4, 4, 3, 4, 4, 3, 2, 4, 4, 1, 0, 2, 0, 0, 1, 1, 0, 2, 0, 0, 3, 1, 0, 5, 3, 2, 1, 3, 0, 3, 0, 1, 2, 4, 3, 2, 4, 3, 3, 0, 3, 2, 0, 4, 4], [0, 3, 0, 3, 0, 1, 0, 0, 0, 1, 4, 3, 3, 2, 3, 1, 3, 1, 4, 2, 3, 2, 4, 2, 3, 4, 3, 0, 2, 2, 3, 3, 3, 0, 3, 3, 3, 0, 3, 4, 1, 3, 3, 0, 3, 4, 3, 3, 0, 1, 1, 0, 1, 0, 0, 0, 4, 0, 3, 0, 0, 3, 1, 2, 1, 3, 0, 4, 0, 1, 0, 4, 3, 3, 4, 3, 3, 0, 2, 0, 0, 3, 3], [0, 3, 0, 4, 0, 1, 0, 3, 0, 3, 4, 3, 3, 0, 3, 3, 3, 1, 3, 1, 3, 3, 4, 3, 3, 3, 0, 0, 3, 1, 5, 3, 3, 1, 3, 3, 2, 5, 4, 3, 3, 4, 5, 3, 2, 5, 3, 4, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 4, 2, 2, 1, 3, 0, 3, 0, 2, 0, 4, 4, 3, 5, 3, 2, 0, 1, 1, 0, 3, 4], [0, 5, 0, 4, 0, 5, 0, 2, 0, 4, 4, 3, 3, 2, 3, 3, 3, 1, 4, 3, 4, 1, 5, 3, 4, 3, 4, 0, 4, 2, 4, 3, 4, 1, 5, 4, 0, 4, 4, 4, 4, 5, 4, 1, 3, 5, 4, 2, 1, 4, 1, 1, 3, 2, 0, 3, 1, 0, 3, 2, 1, 4, 3, 3, 3, 4, 0, 4, 0, 3, 0, 4, 4, 4, 3, 3, 3, 0, 4, 2, 0, 3, 4], [1, 4, 0, 4, 0, 3, 0, 1, 0, 3, 3, 3, 1, 1, 3, 3, 2, 2, 3, 3, 1, 0, 3, 2, 2, 1, 2, 0, 3, 1, 2, 1, 2, 0, 3, 2, 0, 2, 2, 3, 3, 4, 3, 0, 3, 3, 1, 2, 0, 1, 1, 3, 1, 2, 0, 0, 3, 0, 1, 1, 0, 3, 2, 2, 3, 3, 0, 3, 0, 0, 0, 2, 3, 3, 4, 3, 3, 0, 1, 0, 0, 1, 4], [0, 4, 0, 4, 0, 4, 0, 0, 0, 3, 4, 4, 3, 1, 4, 2, 3, 2, 3, 3, 3, 1, 4, 3, 4, 0, 3, 0, 4, 2, 3, 3, 2, 2, 5, 4, 2, 1, 3, 4, 3, 4, 3, 1, 3, 3, 4, 2, 0, 2, 1, 0, 3, 3, 0, 0, 2, 0, 3, 1, 0, 4, 4, 3, 4, 3, 0, 4, 0, 1, 0, 2, 4, 4, 4, 4, 4, 0, 3, 2, 0, 3, 3], [0, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2], [0, 2, 0, 3, 0, 4, 0, 4, 0, 1, 3, 3, 3, 0, 4, 0, 2, 1, 2, 1, 1, 1, 2, 0, 3, 1, 1, 0, 1, 0, 3, 1, 0, 0, 3, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 2, 0, 3, 1, 0, 0, 1, 0, 1, 1, 0, 1, 2, 0, 3, 0, 0, 0, 0, 1, 0, 0, 3, 3, 4, 3, 1, 0, 1, 0, 3, 0, 2], [0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 1, 0, 2, 0, 3, 1, 0, 1, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 4, 0, 0, 0, 2, 3, 0, 1, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0, 3], [0, 2, 0, 5, 0, 5, 0, 1, 0, 2, 4, 3, 3, 2, 5, 1, 3, 2, 3, 3, 3, 0, 4, 1, 2, 0, 3, 0, 4, 0, 2, 2, 1, 1, 5, 3, 0, 0, 1, 4, 2, 3, 2, 0, 3, 3, 3, 2, 0, 2, 4, 1, 1, 2, 0, 1, 1, 0, 3, 1, 0, 1, 3, 1, 2, 3, 0, 2, 0, 0, 0, 1, 3, 5, 4, 4, 4, 0, 3, 0, 0, 1, 3], [0, 4, 0, 5, 0, 4, 0, 4, 0, 4, 5, 4, 3, 3, 4, 3, 3, 3, 4, 3, 4, 4, 5, 3, 4, 5, 4, 2, 4, 2, 3, 4, 3, 1, 4, 4, 1, 3, 5, 4, 4, 5, 5, 4, 4, 5, 5, 5, 2, 3, 3, 1, 4, 3, 1, 3, 3, 0, 3, 3, 1, 4, 3, 4, 4, 4, 0, 3, 0, 4, 0, 3, 3, 4, 4, 5, 0, 0, 4, 3, 0, 4, 5], [0, 4, 0, 4, 0, 3, 0, 3, 0, 3, 4, 4, 4, 3, 3, 2, 4, 3, 4, 3, 4, 3, 5, 3, 4, 3, 2, 1, 4, 2, 4, 4, 3, 1, 3, 4, 2, 4, 5, 5, 3, 4, 5, 4, 1, 5, 4, 3, 0, 3, 2, 2, 3, 2, 1, 3, 1, 0, 3, 3, 3, 5, 3, 3, 3, 5, 4, 4, 2, 3, 3, 4, 3, 3, 3, 2, 1, 0, 3, 2, 1, 4, 3], [0, 4, 0, 5, 0, 4, 0, 3, 0, 3, 5, 5, 3, 2, 4, 3, 4, 0, 5, 4, 4, 1, 4, 4, 4, 3, 3, 3, 4, 3, 5, 5, 2, 3, 3, 4, 1, 2, 5, 5, 3, 5, 5, 2, 3, 5, 5, 4, 0, 3, 2, 0, 3, 3, 1, 1, 5, 1, 4, 1, 0, 4, 3, 2, 3, 5, 0, 4, 0, 3, 0, 5, 4, 3, 4, 3, 0, 0, 4, 1, 0, 4, 4], [1, 3, 0, 4, 0, 2, 0, 2, 0, 2, 5, 5, 3, 3, 3, 3, 3, 0, 4, 2, 3, 4, 4, 4, 3, 4, 0, 0, 3, 4, 5, 4, 3, 3, 3, 3, 2, 5, 5, 4, 5, 5, 5, 4, 3, 5, 5, 5, 1, 3, 1, 0, 1, 0, 0, 3, 2, 0, 4, 2, 0, 5, 2, 3, 2, 4, 1, 3, 0, 3, 0, 4, 5, 4, 5, 4, 3, 0, 4, 2, 0, 5, 4], [0, 3, 0, 4, 0, 5, 0, 3, 0, 3, 4, 4, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 4, 3, 3, 2, 2, 0, 3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 4, 4, 3, 4, 4, 1, 1, 4, 4, 2, 0, 3, 1, 0, 1, 1, 0, 4, 1, 0, 2, 3, 1, 3, 3, 1, 3, 4, 0, 3, 0, 1, 0, 3, 1, 3, 0, 0, 1, 0, 2, 0, 0, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 3, 0, 2, 0, 3, 0, 1, 5, 4, 3, 3, 3, 1, 4, 2, 1, 2, 3, 4, 4, 2, 4, 4, 5, 0, 3, 1, 4, 3, 4, 0, 4, 3, 3, 3, 2, 3, 2, 5, 3, 4, 3, 2, 2, 3, 0, 0, 3, 0, 2, 1, 0, 1, 2, 0, 0, 0, 0, 2, 1, 1, 3, 1, 0, 2, 0, 4, 0, 3, 4, 4, 4, 5, 2, 0, 2, 0, 0, 1, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 4, 2, 1, 1, 0, 1, 0, 3, 2, 0, 0, 3, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 4, 0, 4, 2, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 2, 0, 2, 1, 0, 0, 1, 2, 1, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 4, 0, 4, 0, 4, 0, 3, 0, 4, 4, 3, 4, 2, 4, 3, 2, 0, 4, 4, 4, 3, 5, 3, 5, 3, 3, 2, 4, 2, 4, 3, 4, 3, 1, 4, 0, 2, 3, 4, 4, 4, 3, 3, 3, 4, 4, 4, 3, 4, 1, 3, 4, 3, 2, 1, 2, 1, 3, 3, 3, 4, 4, 3, 3, 5, 0, 4, 0, 3, 0, 4, 3, 3, 3, 2, 1, 0, 3, 0, 0, 3, 3], [0, 4, 0, 3, 0, 3, 0, 3, 0, 3, 5, 5, 3, 3, 3, 3, 4, 3, 4, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 4, 3, 5, 3, 3, 1, 3, 2, 4, 5, 5, 5, 5, 4, 3, 4, 5, 5, 3, 2, 2, 3, 3, 3, 3, 2, 3, 3, 1, 2, 3, 2, 4, 3, 3, 3, 4, 0, 4, 0, 2, 0, 4, 3, 2, 2, 1, 2, 0, 3, 0, 0, 4, 1]];\n\nfunction JapaneseContextAnalysis() {\n  var NUM_OF_CATEGORY = 6;\n  var DONT_KNOW = -1;\n  var ENOUGH_REL_THRESHOLD = 100;\n  var MAX_REL_THRESHOLD = 1000;\n  var MINIMUM_DATA_THRESHOLD = 4;\n  var self = this;\n\n  function init() {\n    self.reset();\n  }\n\n  this.reset = function () {\n    this._mTotalRel = 0; // total sequence received\n\n    this._mRelSample = []; // category counters, each interger counts sequence in its category\n\n    for (var i = 0; i < NUM_OF_CATEGORY; this._mRelSample[i++] = 0) {\n      ;\n    }\n\n    this._mNeedToSkipCharNum = 0; // if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer\n\n    this._mLastCharOrder = -1; // The order of previous char\n\n    this._mDone = false; // If this flag is set to true, detection is done and conclusion has been made\n  };\n\n  this.feed = function (aBuf, aLen) {\n    if (this._mDone) return; // The buffer we got is byte oriented, and a character may span in more than one\n    // buffers. In case the last one or two byte in last buffer is not complete, we\n    // record how many byte needed to complete that character and skip these bytes here.\n    // We can choose to record those bytes as well and analyse the character once it\n    // is complete, but since a character will not make much difference, by simply skipping\n    // this character will simply our logic and improve performance.\n\n    var i = this._mNeedToSkipCharNum;\n\n    while (i < aLen) {\n      var rets = this.getOrder(aBuf.slice(i, i + 2));\n      var order = rets[0];\n      var charLen = rets[1];\n      i += charLen;\n\n      if (i > aLen) {\n        this._mNeedToSkipCharNum = i - aLen;\n        this._mLastCharOrder = -1;\n      } else {\n        if (order != -1 && this._mLastCharOrder != -1) {\n          this._mTotalRel += 1;\n\n          if (this._mTotalRel > MAX_REL_THRESHOLD) {\n            this._mDone = true;\n            break;\n          }\n\n          this._mRelSample[exports.jp2CharContext[this._mLastCharOrder][order]] += 1;\n        }\n\n        this._mLastCharOrder = order;\n      }\n    }\n  };\n\n  this.gotEnoughData = function () {\n    return this._mTotalRel > ENOUGH_REL_THRESHOLD;\n  };\n\n  this.getConfidence = function () {\n    // This is just one way to calculate confidence. It works well for me.\n    if (this._mTotalRel > MINIMUM_DATA_THRESHOLD) {\n      return (this._mTotalRel - this._mRelSample[0]) / this._mTotalRel;\n    } else {\n      return DONT_KNOW;\n    }\n  };\n\n  this.getOrder = function (aStr) {\n    return [-1, 1];\n  };\n\n  init();\n}\n\nfunction SJISContextAnalysis() {\n  this.getOrder = function (aStr) {\n    if (!aStr) return [-1, 1]; // find out current char's byte length\n\n    if (aStr.charCodeAt(0) >= 0x81 && aStr.charCodeAt(0) <= 0x9F || aStr.charCodeAt(0) >= 0xE0 && aStr.charCodeAt(0) <= 0xFC) {\n      var charLen = 2;\n    } else {\n      charLen = 1;\n    } // return its order if it is hiragana\n\n\n    if (aStr.length > 1) {\n      if (aStr.charCodeAt(0) == 0x82 && aStr.charCodeAt(1) >= 0x9F && aStr.charCodeAt(0) <= 0xF1) {\n        return [aStr.charCodeAt(1) - 0x9F, charLen];\n      }\n    }\n\n    return [-1, charLen];\n  };\n}\n\nSJISContextAnalysis.prototype = new JapaneseContextAnalysis();\nexports.SJISContextAnalysis = SJISContextAnalysis;\n\nfunction EUCJPContextAnalysis() {\n  this.getOrder = function (aStr) {\n    if (!aStr) return [-1, 1]; // find out current char's byte length\n\n    if (aStr.charCodeAt(0) >= 0x8E || aStr.charCodeAt(0) >= 0xA1 && aStr.charCodeAt(0) <= 0xFE) {\n      var charLen = 2;\n    } else if (aStr.charCodeAt(0) == 0x8F) {\n      charLen = 3;\n    } else {\n      charLen = 1;\n    } // return its order if it is hiragana\n\n\n    if (aStr.length > 1) {\n      if (aStr.charCodeAt(0) == 0xA4 && aStr.charCodeAt(1) >= 0xA1 && aStr.charCodeAt(1) <= 0xF3) {\n        return [aStr.charCodeAt(1) - 0xA1, charLen];\n      }\n    }\n\n    return [-1, charLen];\n  };\n}\n\nEUCJPContextAnalysis.prototype = new JapaneseContextAnalysis();\nexports.EUCJPContextAnalysis = EUCJPContextAnalysis;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.fetchJsonp = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  var defaultOptions = {\n    timeout: 5000,\n    jsonpCallback: 'callback',\n    jsonpCallbackFunction: null\n  };\n\n  function generateCallbackFunction() {\n    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n  }\n\n  function clearFunction(functionName) {\n    // IE8 throws an exception when you try to delete a property on window\n    // http://stackoverflow.com/a/1824228/751089\n    try {\n      delete window[functionName];\n    } catch (e) {\n      window[functionName] = undefined;\n    }\n  }\n\n  function removeScript(scriptId) {\n    var script = document.getElementById(scriptId);\n\n    if (script) {\n      document.getElementsByTagName('head')[0].removeChild(script);\n    }\n  }\n\n  function fetchJsonp(_url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1]; // to avoid param reassign\n\n    var url = _url;\n    var timeout = options.timeout || defaultOptions.timeout;\n    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\n    var timeoutId = undefined;\n    return new Promise(function (resolve, reject) {\n      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();\n      var scriptId = jsonpCallback + '_' + callbackFunction;\n\n      window[callbackFunction] = function (response) {\n        resolve({\n          ok: true,\n          // keep consistent with fetch API\n          json: function json() {\n            return Promise.resolve(response);\n          }\n        });\n        if (timeoutId) clearTimeout(timeoutId);\n        removeScript(scriptId);\n        clearFunction(callbackFunction);\n      }; // Check if the user set their own params, and if not add a ? to start a list of params\n\n\n      url += url.indexOf('?') === -1 ? '?' : '&';\n      var jsonpScript = document.createElement('script');\n      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);\n\n      if (options.charset) {\n        jsonpScript.setAttribute('charset', options.charset);\n      }\n\n      jsonpScript.id = scriptId;\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\n      timeoutId = setTimeout(function () {\n        reject(new Error('JSONP request to ' + _url + ' timed out'));\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n\n        window[callbackFunction] = function () {\n          clearFunction(callbackFunction);\n        };\n      }, timeout); // Caught if got 404/500\n\n      jsonpScript.onerror = function () {\n        reject(new Error('JSONP request to ' + _url + ' failed'));\n        clearFunction(callbackFunction);\n        removeScript(scriptId);\n        if (timeoutId) clearTimeout(timeoutId);\n      };\n    });\n  } // export as global function\n\n  /*\n  let local;\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n  local.fetchJsonp = fetchJsonp;\n  */\n\n\n  module.exports = fetchJsonp;\n});","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","module.exports = require('./src');","/* @license\nPapa Parse\nv4.6.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\nArray.isArray || (Array.isArray = function (e) {\n  return \"[object Array]\" === Object.prototype.toString.call(e);\n}), function (e, t) {\n  \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof module && \"undefined\" != typeof exports ? module.exports = t() : e.Papa = t();\n}(this, function () {\n  \"use strict\";\n\n  var s,\n      e,\n      f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {},\n      n = !f.document && !!f.postMessage,\n      o = n && /(\\?|&)papaworker(=|&|$)/.test(f.location.search),\n      a = !1,\n      h = {},\n      u = 0,\n      k = {\n    parse: function parse(e, t) {\n      var r = (t = t || {}).dynamicTyping || !1;\n      z(r) && (t.dynamicTypingFunction = r, r = {});\n\n      if (t.dynamicTyping = r, t.transform = !!z(t.transform) && t.transform, t.worker && k.WORKERS_SUPPORTED) {\n        var i = function () {\n          if (!k.WORKERS_SUPPORTED) return !1;\n          if (!a && null === k.SCRIPT_PATH) throw new Error(\"Script path cannot be determined automatically when Papa Parse is loaded asynchronously. You need to set Papa.SCRIPT_PATH manually.\");\n          var e = k.SCRIPT_PATH || s;\n          e += (-1 !== e.indexOf(\"?\") ? \"&\" : \"?\") + \"papaworker\";\n          var t = new f.Worker(e);\n          return t.onmessage = m, t.id = u++, h[t.id] = t;\n        }();\n\n        return i.userStep = t.step, i.userChunk = t.chunk, i.userComplete = t.complete, i.userError = t.error, t.step = z(t.step), t.chunk = z(t.chunk), t.complete = z(t.complete), t.error = z(t.error), delete t.worker, void i.postMessage({\n          input: e,\n          config: t,\n          workerId: i.id\n        });\n      }\n\n      var n = null;\n      k.NODE_STREAM_INPUT, \"string\" == typeof e ? n = t.download ? new c(t) : new _(t) : !0 === e.readable && z(e.read) && z(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new p(t));\n      return n.stream(e);\n    },\n    unparse: function unparse(e, t) {\n      var i = !1,\n          g = !0,\n          m = \",\",\n          y = \"\\r\\n\",\n          n = '\"',\n          r = !1;\n      !function () {\n        if (\"object\" != typeof t) return;\n        \"string\" != typeof t.delimiter || k.BAD_DELIMITERS.filter(function (e) {\n          return -1 !== t.delimiter.indexOf(e);\n        }).length || (m = t.delimiter);\n        (\"boolean\" == typeof t.quotes || Array.isArray(t.quotes)) && (i = t.quotes);\n        \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (r = t.skipEmptyLines);\n        \"string\" == typeof t.newline && (y = t.newline);\n        \"string\" == typeof t.quoteChar && (n = t.quoteChar);\n        \"boolean\" == typeof t.header && (g = t.header);\n      }();\n      var s = new RegExp(M(n), \"g\");\n      \"string\" == typeof e && (e = JSON.parse(e));\n\n      if (Array.isArray(e)) {\n        if (!e.length || Array.isArray(e[0])) return o(null, e, r);\n        if (\"object\" == typeof e[0]) return o(a(e[0]), e, r);\n      } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : a(e.data[0])), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), o(e.fields || [], e.data || [], r);\n\n      throw \"exception: Unable to serialize unrecognized input\";\n\n      function a(e) {\n        if (\"object\" != typeof e) return [];\n        var t = [];\n\n        for (var r in e) {\n          t.push(r);\n        }\n\n        return t;\n      }\n\n      function o(e, t, r) {\n        var i = \"\";\n        \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n        var n = Array.isArray(e) && 0 < e.length,\n            s = !Array.isArray(t[0]);\n\n        if (n && g) {\n          for (var a = 0; a < e.length; a++) {\n            0 < a && (i += m), i += v(e[a], a);\n          }\n\n          0 < t.length && (i += y);\n        }\n\n        for (var o = 0; o < t.length; o++) {\n          var h = n ? e.length : t[o].length,\n              u = !1,\n              f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n\n          if (r && !n && (u = \"greedy\" === r ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === r && n) {\n            for (var d = [], l = 0; l < h; l++) {\n              var c = s ? e[l] : l;\n              d.push(t[o][c]);\n            }\n\n            u = \"\" === d.join(\"\").trim();\n          }\n\n          if (!u) {\n            for (var p = 0; p < h; p++) {\n              0 < p && !f && (i += m);\n\n              var _ = n && s ? e[p] : p;\n\n              i += v(t[o][_], p);\n            }\n\n            o < t.length - 1 && (!r || 0 < h && !f) && (i += y);\n          }\n        }\n\n        return i;\n      }\n\n      function v(e, t) {\n        if (null == e) return \"\";\n        if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n        e = e.toString().replace(s, n + n);\n\n        var r = \"boolean\" == typeof i && i || Array.isArray(i) && i[t] || function (e, t) {\n          for (var r = 0; r < t.length; r++) {\n            if (-1 < e.indexOf(t[r])) return !0;\n          }\n\n          return !1;\n        }(e, k.BAD_DELIMITERS) || -1 < e.indexOf(m) || \" \" === e.charAt(0) || \" \" === e.charAt(e.length - 1);\n\n        return r ? n + e + n : e;\n      }\n    }\n  };\n\n  if (k.RECORD_SEP = String.fromCharCode(30), k.UNIT_SEP = String.fromCharCode(31), k.BYTE_ORDER_MARK = \"\\uFEFF\", k.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', k.BYTE_ORDER_MARK], k.WORKERS_SUPPORTED = !n && !!f.Worker, k.SCRIPT_PATH = null, k.NODE_STREAM_INPUT = 1, k.LocalChunkSize = 10485760, k.RemoteChunkSize = 5242880, k.DefaultDelimiter = \",\", k.Parser = v, k.ParserHandle = r, k.NetworkStreamer = c, k.FileStreamer = p, k.StringStreamer = _, k.ReadableStreamStreamer = g, f.jQuery) {\n    var d = f.jQuery;\n\n    d.fn.parse = function (o) {\n      var r = o.config || {},\n          h = [];\n      return this.each(function (e) {\n        if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n\n        for (var t = 0; t < this.files.length; t++) {\n          h.push({\n            file: this.files[t],\n            inputElem: this,\n            instanceConfig: d.extend({}, r)\n          });\n        }\n      }), e(), this;\n\n      function e() {\n        if (0 !== h.length) {\n          var e,\n              t,\n              r,\n              i,\n              n = h[0];\n\n          if (z(o.before)) {\n            var s = o.before(n.file, n.inputElem);\n\n            if (\"object\" == typeof s) {\n              if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, r = n.inputElem, i = s.reason, void (z(o.error) && o.error({\n                name: e\n              }, t, r, i));\n              if (\"skip\" === s.action) return void u();\n              \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n            } else if (\"skip\" === s) return void u();\n          }\n\n          var a = n.instanceConfig.complete;\n          n.instanceConfig.complete = function (e) {\n            z(a) && a(e, n.file, n.inputElem), u();\n          }, k.parse(n.file, n.instanceConfig);\n        } else z(o.complete) && o.complete();\n      }\n\n      function u() {\n        h.splice(0, 1), e();\n      }\n    };\n  }\n\n  function l(e) {\n    this._handle = null, this._finished = !1, this._completed = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n      data: [],\n      errors: [],\n      meta: {}\n    }, function (e) {\n      var t = E(e);\n      t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n      this._handle = new r(t), (this._handle.streamer = this)._config = t;\n    }.call(this, e), this.parseChunk = function (e, t) {\n      if (this.isFirstChunk && z(this._config.beforeFirstChunk)) {\n        var r = this._config.beforeFirstChunk(e);\n\n        void 0 !== r && (e = r);\n      }\n\n      this.isFirstChunk = !1;\n      var i = this._partialLine + e;\n      this._partialLine = \"\";\n\n      var n = this._handle.parse(i, this._baseIndex, !this._finished);\n\n      if (!this._handle.paused() && !this._handle.aborted()) {\n        var s = n.meta.cursor;\n        this._finished || (this._partialLine = i.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n        var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n        if (o) f.postMessage({\n          results: n,\n          workerId: k.WORKER_ID,\n          finished: a\n        });else if (z(this._config.chunk) && !t) {\n          if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return;\n          n = void 0, this._completeResults = void 0;\n        }\n        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !z(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n      }\n    }, this._sendError = function (e) {\n      z(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n        workerId: k.WORKER_ID,\n        error: e,\n        finished: !1\n      });\n    };\n  }\n\n  function c(e) {\n    var i;\n    (e = e || {}).chunkSize || (e.chunkSize = k.RemoteChunkSize), l.call(this, e), this._nextChunk = n ? function () {\n      this._readChunk(), this._chunkLoaded();\n    } : function () {\n      this._readChunk();\n    }, this.stream = function (e) {\n      this._input = e, this._nextChunk();\n    }, this._readChunk = function () {\n      if (this._finished) this._chunkLoaded();else {\n        if (i = new XMLHttpRequest(), this._config.withCredentials && (i.withCredentials = this._config.withCredentials), n || (i.onload = w(this._chunkLoaded, this), i.onerror = w(this._chunkError, this)), i.open(\"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n          var e = this._config.downloadRequestHeaders;\n\n          for (var t in e) {\n            i.setRequestHeader(t, e[t]);\n          }\n        }\n\n        if (this._config.chunkSize) {\n          var r = this._start + this._config.chunkSize - 1;\n          i.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + r), i.setRequestHeader(\"If-None-Match\", \"webkit-no-cache\");\n        }\n\n        try {\n          i.send();\n        } catch (e) {\n          this._chunkError(e.message);\n        }\n\n        n && 0 === i.status ? this._chunkError() : this._start += this._config.chunkSize;\n      }\n    }, this._chunkLoaded = function () {\n      4 === i.readyState && (i.status < 200 || 400 <= i.status ? this._chunkError() : (this._finished = !this._config.chunkSize || this._start > function (e) {\n        var t = e.getResponseHeader(\"Content-Range\");\n        if (null === t) return -1;\n        return parseInt(t.substr(t.lastIndexOf(\"/\") + 1));\n      }(i), this.parseChunk(i.responseText)));\n    }, this._chunkError = function (e) {\n      var t = i.statusText || e;\n\n      this._sendError(new Error(t));\n    };\n  }\n\n  function p(e) {\n    var i, n;\n    (e = e || {}).chunkSize || (e.chunkSize = k.LocalChunkSize), l.call(this, e);\n    var s = \"undefined\" != typeof FileReader;\n    this.stream = function (e) {\n      this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((i = new FileReader()).onload = w(this._chunkLoaded, this), i.onerror = w(this._chunkError, this)) : i = new FileReaderSync(), this._nextChunk();\n    }, this._nextChunk = function () {\n      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n    }, this._readChunk = function () {\n      var e = this._input;\n\n      if (this._config.chunkSize) {\n        var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n        e = n.call(e, this._start, t);\n      }\n\n      var r = i.readAsText(e, this._config.encoding);\n      s || this._chunkLoaded({\n        target: {\n          result: r\n        }\n      });\n    }, this._chunkLoaded = function (e) {\n      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n    }, this._chunkError = function () {\n      this._sendError(i.error);\n    };\n  }\n\n  function _(e) {\n    var r;\n    l.call(this, e = e || {}), this.stream = function (e) {\n      return r = e, this._nextChunk();\n    }, this._nextChunk = function () {\n      if (!this._finished) {\n        var e = this._config.chunkSize,\n            t = e ? r.substr(0, e) : r;\n        return r = e ? r.substr(e) : \"\", this._finished = !r, this.parseChunk(t);\n      }\n    };\n  }\n\n  function g(e) {\n    l.call(this, e = e || {});\n    var t = [],\n        r = !0,\n        i = !1;\n    this.pause = function () {\n      l.prototype.pause.apply(this, arguments), this._input.pause();\n    }, this.resume = function () {\n      l.prototype.resume.apply(this, arguments), this._input.resume();\n    }, this.stream = function (e) {\n      this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n    }, this._checkIsFinished = function () {\n      i && 1 === t.length && (this._finished = !0);\n    }, this._nextChunk = function () {\n      this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : r = !0;\n    }, this._streamData = w(function (e) {\n      try {\n        t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), r && (r = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n      } catch (e) {\n        this._streamError(e);\n      }\n    }, this), this._streamError = w(function (e) {\n      this._streamCleanUp(), this._sendError(e);\n    }, this), this._streamEnd = w(function () {\n      this._streamCleanUp(), i = !0, this._streamData(\"\");\n    }, this), this._streamCleanUp = w(function () {\n      this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n    }, this);\n  }\n\n  function r(g) {\n    var a,\n        o,\n        h,\n        i = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i,\n        n = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,\n        t = this,\n        r = 0,\n        s = 0,\n        u = !1,\n        e = !1,\n        f = [],\n        d = {\n      data: [],\n      errors: [],\n      meta: {}\n    };\n\n    if (z(g.step)) {\n      var l = g.step;\n\n      g.step = function (e) {\n        if (d = e, p()) c();else {\n          if (c(), 0 === d.data.length) return;\n          r += e.data.length, g.preview && r > g.preview ? o.abort() : l(d, t);\n        }\n      };\n    }\n\n    function m(e) {\n      return \"greedy\" === g.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n    }\n\n    function c() {\n      if (d && h && (y(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + k.DefaultDelimiter + \"'\"), h = !1), g.skipEmptyLines) for (var e = 0; e < d.data.length; e++) {\n        m(d.data[e]) && d.data.splice(e--, 1);\n      }\n      return p() && function () {\n        if (!d) return;\n\n        for (var e = 0; p() && e < d.data.length; e++) {\n          for (var t = 0; t < d.data[e].length; t++) {\n            var r = d.data[e][t];\n            g.trimHeaders && (r = r.trim()), f.push(r);\n          }\n        }\n\n        d.data.splice(0, 1);\n      }(), function () {\n        if (!d || !g.header && !g.dynamicTyping && !g.transform) return d;\n\n        for (var e = 0; e < d.data.length; e++) {\n          var t,\n              r = g.header ? {} : [];\n\n          for (t = 0; t < d.data[e].length; t++) {\n            var i = t,\n                n = d.data[e][t];\n            g.header && (i = t >= f.length ? \"__parsed_extra\" : f[t]), g.transform && (n = g.transform(n, i)), n = _(i, n), \"__parsed_extra\" === i ? (r[i] = r[i] || [], r[i].push(n)) : r[i] = n;\n          }\n\n          d.data[e] = r, g.header && (t > f.length ? y(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + f.length + \" fields but parsed \" + t, s + e) : t < f.length && y(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + f.length + \" fields but parsed \" + t, s + e));\n        }\n\n        g.header && d.meta && (d.meta.fields = f);\n        return s += d.data.length, d;\n      }();\n    }\n\n    function p() {\n      return g.header && 0 === f.length;\n    }\n\n    function _(e, t) {\n      return r = e, g.dynamicTypingFunction && void 0 === g.dynamicTyping[r] && (g.dynamicTyping[r] = g.dynamicTypingFunction(r)), !0 === (g.dynamicTyping[r] || g.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (i.test(t) ? parseFloat(t) : n.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n      var r;\n    }\n\n    function y(e, t, r, i) {\n      d.errors.push({\n        type: e,\n        code: t,\n        message: r,\n        row: i\n      });\n    }\n\n    this.parse = function (e, t, r) {\n      var i = g.quoteChar || '\"';\n      if (g.newline || (g.newline = function (e, t) {\n        e = e.substr(0, 1048576);\n        var r = new RegExp(M(t) + \"([^]*?)\" + M(t), \"gm\"),\n            i = (e = e.replace(r, \"\")).split(\"\\r\"),\n            n = e.split(\"\\n\"),\n            s = 1 < n.length && n[0].length < i[0].length;\n        if (1 === i.length || s) return \"\\n\";\n\n        for (var a = 0, o = 0; o < i.length; o++) {\n          \"\\n\" === i[o][0] && a++;\n        }\n\n        return a >= i.length / 2 ? \"\\r\\n\" : \"\\r\";\n      }(e, i)), h = !1, g.delimiter) z(g.delimiter) && (g.delimiter = g.delimiter(e), d.meta.delimiter = g.delimiter);else {\n        var n = function (e, t, r, i) {\n          for (var n, s, a, o = [\",\", \"\\t\", \"|\", \";\", k.RECORD_SEP, k.UNIT_SEP], h = 0; h < o.length; h++) {\n            var u = o[h],\n                f = 0,\n                d = 0,\n                l = 0;\n            a = void 0;\n\n            for (var c = new v({\n              comments: i,\n              delimiter: u,\n              newline: t,\n              preview: 10\n            }).parse(e), p = 0; p < c.data.length; p++) {\n              if (r && m(c.data[p])) l++;else {\n                var _ = c.data[p].length;\n                d += _, void 0 !== a ? 1 < _ && (f += Math.abs(_ - a), a = _) : a = 0;\n              }\n            }\n\n            0 < c.data.length && (d /= c.data.length - l), (void 0 === s || s < f) && 1.99 < d && (s = f, n = u);\n          }\n\n          return {\n            successful: !!(g.delimiter = n),\n            bestDelimiter: n\n          };\n        }(e, g.newline, g.skipEmptyLines, g.comments);\n\n        n.successful ? g.delimiter = n.bestDelimiter : (h = !0, g.delimiter = k.DefaultDelimiter), d.meta.delimiter = g.delimiter;\n      }\n      var s = E(g);\n      return g.preview && g.header && s.preview++, a = e, o = new v(s), d = o.parse(a, t, r), c(), u ? {\n        meta: {\n          paused: !0\n        }\n      } : d || {\n        meta: {\n          paused: !1\n        }\n      };\n    }, this.paused = function () {\n      return u;\n    }, this.pause = function () {\n      u = !0, o.abort(), a = a.substr(o.getCharIndex());\n    }, this.resume = function () {\n      u = !1, t.streamer.parseChunk(a, !0);\n    }, this.aborted = function () {\n      return e;\n    }, this.abort = function () {\n      e = !0, o.abort(), d.meta.aborted = !0, z(g.complete) && g.complete(d), a = \"\";\n    };\n  }\n\n  function M(e) {\n    return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  function v(e) {\n    var S,\n        O = (e = e || {}).delimiter,\n        x = e.newline,\n        T = e.comments,\n        I = e.step,\n        A = e.preview,\n        D = e.fastMode,\n        L = S = void 0 === e.quoteChar ? '\"' : e.quoteChar;\n    if (void 0 !== e.escapeChar && (L = e.escapeChar), (\"string\" != typeof O || -1 < k.BAD_DELIMITERS.indexOf(O)) && (O = \",\"), T === O) throw \"Comment character same as delimiter\";\n    !0 === T ? T = \"#\" : (\"string\" != typeof T || -1 < k.BAD_DELIMITERS.indexOf(T)) && (T = !1), \"\\n\" !== x && \"\\r\" !== x && \"\\r\\n\" !== x && (x = \"\\n\");\n    var P = 0,\n        F = !1;\n    this.parse = function (i, t, r) {\n      if (\"string\" != typeof i) throw \"Input must be a string\";\n      var n = i.length,\n          e = O.length,\n          s = x.length,\n          a = T.length,\n          o = z(I),\n          h = [],\n          u = [],\n          f = [],\n          d = P = 0;\n      if (!i) return C();\n\n      if (D || !1 !== D && -1 === i.indexOf(S)) {\n        for (var l = i.split(x), c = 0; c < l.length; c++) {\n          if (f = l[c], P += f.length, c !== l.length - 1) P += x.length;else if (r) return C();\n\n          if (!T || f.substr(0, a) !== T) {\n            if (o) {\n              if (h = [], k(f.split(O)), R(), F) return C();\n            } else k(f.split(O));\n\n            if (A && A <= c) return h = h.slice(0, A), C(!0);\n          }\n        }\n\n        return C();\n      }\n\n      for (var p, _ = i.indexOf(O, P), g = i.indexOf(x, P), m = new RegExp(M(L) + M(S), \"g\");;) {\n        if (i[P] !== S) {\n          if (T && 0 === f.length && i.substr(P, a) === T) {\n            if (-1 === g) return C();\n            P = g + s, g = i.indexOf(x, P), _ = i.indexOf(O, P);\n          } else if (-1 !== _ && (_ < g || -1 === g)) f.push(i.substring(P, _)), P = _ + e, _ = i.indexOf(O, P);else {\n            if (-1 === g) break;\n            if (f.push(i.substring(P, g)), w(g + s), o && (R(), F)) return C();\n            if (A && h.length >= A) return C(!0);\n          }\n        } else for (p = P, P++;;) {\n          if (-1 === (p = i.indexOf(S, p + 1))) return r || u.push({\n            type: \"Quotes\",\n            code: \"MissingQuotes\",\n            message: \"Quoted field unterminated\",\n            row: h.length,\n            index: P\n          }), E();\n          if (p === n - 1) return E(i.substring(P, p).replace(m, S));\n\n          if (S !== L || i[p + 1] !== L) {\n            if (S === L || 0 === p || i[p - 1] !== L) {\n              var y = b(-1 === g ? _ : Math.min(_, g));\n\n              if (i[p + 1 + y] === O) {\n                f.push(i.substring(P, p).replace(m, S)), P = p + 1 + y + e, _ = i.indexOf(O, P), g = i.indexOf(x, P);\n                break;\n              }\n\n              var v = b(g);\n\n              if (i.substr(p + 1 + v, s) === x) {\n                if (f.push(i.substring(P, p).replace(m, S)), w(p + 1 + v + s), _ = i.indexOf(O, P), o && (R(), F)) return C();\n                if (A && h.length >= A) return C(!0);\n                break;\n              }\n\n              u.push({\n                type: \"Quotes\",\n                code: \"InvalidQuotes\",\n                message: \"Trailing quote on quoted field is malformed\",\n                row: h.length,\n                index: P\n              }), p++;\n            }\n          } else p++;\n        }\n      }\n\n      return E();\n\n      function k(e) {\n        h.push(e), d = P;\n      }\n\n      function b(e) {\n        var t = 0;\n\n        if (-1 !== e) {\n          var r = i.substring(p + 1, e);\n          r && \"\" === r.trim() && (t = r.length);\n        }\n\n        return t;\n      }\n\n      function E(e) {\n        return r || (void 0 === e && (e = i.substr(P)), f.push(e), P = n, k(f), o && R()), C();\n      }\n\n      function w(e) {\n        P = e, k(f), f = [], g = i.indexOf(x, P);\n      }\n\n      function C(e) {\n        return {\n          data: h,\n          errors: u,\n          meta: {\n            delimiter: O,\n            linebreak: x,\n            aborted: F,\n            truncated: !!e,\n            cursor: d + (t || 0)\n          }\n        };\n      }\n\n      function R() {\n        I(C()), h = [], u = [];\n      }\n    }, this.abort = function () {\n      F = !0;\n    }, this.getCharIndex = function () {\n      return P;\n    };\n  }\n\n  function m(e) {\n    var t = e.data,\n        r = h[t.workerId],\n        i = !1;\n    if (t.error) r.userError(t.error, t.file);else if (t.results && t.results.data) {\n      var n = {\n        abort: function abort() {\n          i = !0, y(t.workerId, {\n            data: [],\n            errors: [],\n            meta: {\n              aborted: !0\n            }\n          });\n        },\n        pause: b,\n        resume: b\n      };\n\n      if (z(r.userStep)) {\n        for (var s = 0; s < t.results.data.length && (r.userStep({\n          data: [t.results.data[s]],\n          errors: t.results.errors,\n          meta: t.results.meta\n        }, n), !i); s++) {\n          ;\n        }\n\n        delete t.results;\n      } else z(r.userChunk) && (r.userChunk(t.results, n, t.file), delete t.results);\n    }\n    t.finished && !i && y(t.workerId, t.results);\n  }\n\n  function y(e, t) {\n    var r = h[e];\n    z(r.userComplete) && r.userComplete(t), r.terminate(), delete h[e];\n  }\n\n  function b() {\n    throw \"Not implemented.\";\n  }\n\n  function E(e) {\n    if (\"object\" != typeof e || null === e) return e;\n    var t = Array.isArray(e) ? [] : {};\n\n    for (var r in e) {\n      t[r] = E(e[r]);\n    }\n\n    return t;\n  }\n\n  function w(e, t) {\n    return function () {\n      e.apply(t, arguments);\n    };\n  }\n\n  function z(e) {\n    return \"function\" == typeof e;\n  }\n\n  return o ? f.onmessage = function (e) {\n    var t = e.data;\n    void 0 === k.WORKER_ID && t && (k.WORKER_ID = t.workerId);\n    if (\"string\" == typeof t.input) f.postMessage({\n      workerId: k.WORKER_ID,\n      results: k.parse(t.input, t.config),\n      finished: !0\n    });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n      var r = k.parse(t.input, t.config);\n      r && f.postMessage({\n        workerId: k.WORKER_ID,\n        results: r,\n        finished: !0\n      });\n    }\n  } : k.WORKERS_SUPPORTED && (e = document.getElementsByTagName(\"script\"), s = e.length ? e[e.length - 1].src : \"\", document.body ? document.addEventListener(\"DOMContentLoaded\", function () {\n    a = !0;\n  }, !0) : a = !0), (c.prototype = Object.create(l.prototype)).constructor = c, (p.prototype = Object.create(l.prototype)).constructor = p, (_.prototype = Object.create(_.prototype)).constructor = _, (g.prototype = Object.create(l.prototype)).constructor = g, k;\n});","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport matchPath from \"./matchPath\";\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n};\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    invariant(router, \"You should not use <Route> or withRouter() outside a <Router>\");\n    var route = router.route;\n    var pathname = (location || route.location).pathname;\n    return matchPath(pathname, {\n      path: path,\n      strict: strict,\n      exact: exact,\n      sensitive: sensitive\n    }, route.match);\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\");\n    warning(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored\");\n    warning(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored\");\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    warning(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n    warning(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n    var location = this.props.location || route.location;\n    var props = {\n      match: match,\n      location: location,\n      history: history,\n      staticContext: staticContext\n    };\n    if (component) return match ? React.createElement(component, props) : null;\n    if (render) return match ? render(props) : null;\n    if (typeof children === \"function\") return children(props);\n    if (children && !isEmptyChildren(children)) return React.Children.only(children);\n    return null;\n  };\n\n  return Route;\n}(React.Component);\n\nRoute.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  sensitive: PropTypes.bool,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  location: PropTypes.object\n};\nRoute.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  })\n};\nRoute.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default Route;","// Written in this round about way for babel-transform-imports\nimport Route from \"react-router/es/Route\";\nexport default Route;","/** @license React v16.8.4\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"307\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.4\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.4\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      a = b.contentDocument.defaultView;\n    } catch (c) {\n      break;\n    }\n\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"307\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.eagerReducer = a;\n        c.eagerState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.eagerReducer = a;\n    c.eagerState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.eagerReducer, null !== d)) try {\n      var l = b.eagerState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: a,\n      eagerState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: og,\n      eagerState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                e = f;\n                p = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(e));\n                l === fe.html ? \"script\" === e ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof p.is ? k = k.createElement(e, {\n                  is: p.is\n                }) : (k = k.createElement(e), \"select\" === e && p.multiple && (k.multiple = !0)) : k = k.createElementNS(l, e);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.4\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.4\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar UniversalDetector = require('./universaldetector');\n\nvar setLogger = require('./logger').setLogger;\n\nexports.detect = function (buffer, options) {\n  var u = new UniversalDetector(options);\n  u.reset();\n\n  if (typeof Buffer == 'function' && buffer instanceof Buffer) {\n    u.feed(buffer.toString('binary'));\n  } else {\n    u.feed(buffer);\n  }\n\n  u.close();\n  return u.result;\n};\n\nexports.UniversalDetector = UniversalDetector;\n\nexports.enableDebug = function () {\n  setLogger(console.log.bind(console));\n};","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n\n/**\n * This is a port from the python port, version \"2.0.1\"\n */\nvar constants = require('./constants');\n\nvar MBCSGroupProber = require('./mbcsgroupprober');\n\nvar SBCSGroupProber = require('./sbcsgroupprober');\n\nvar Latin1Prober = require('./latin1prober');\n\nvar EscCharSetProber = require('./escprober');\n\nvar logger = require('./logger');\n\nfunction UniversalDetector(options) {\n  if (!options) options = {};\n  if (!options.minimumThreshold) options.minimumThreshold = 0.20;\n  var _state = {\n    pureAscii: 0,\n    escAscii: 1,\n    highbyte: 2\n  };\n  var self = this;\n\n  function init() {\n    self._highBitDetector = /[\\x80-\\xFF]/;\n    self._escDetector = /(\\x1B|~\\{)/;\n    self._mEscCharsetProber = null;\n    self._mCharsetProbers = [];\n    self.reset();\n  }\n\n  this.reset = function () {\n    this.result = {\n      \"encoding\": null,\n      \"confidence\": 0.0\n    };\n    this.done = false;\n    this._mStart = true;\n    this._mGotData = false;\n    this._mInputState = _state.pureAscii;\n    this._mLastChar = \"\";\n    this._mBOM = \"\";\n\n    if (this._mEscCharsetProber) {\n      this._mEscCharsetProber.reset();\n    }\n\n    for (var i = 0, prober; prober = this._mCharsetProbers[i]; i++) {\n      prober.reset();\n    }\n  };\n\n  this.feed = function (aBuf) {\n    if (this.done) return;\n    var aLen = aBuf.length;\n    if (!aLen) return;\n\n    if (!this._mGotData) {\n      this._mBOM += aBuf; // If the data starts with BOM, we know it is UTF\n\n      if (this._mBOM.slice(0, 3) == \"\\xEF\\xBB\\xBF\") {\n        // EF BB BF  UTF-8 with BOM\n        this.result = {\n          \"encoding\": \"UTF-8\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 4) == \"\\xFF\\xFE\\x00\\x00\") {\n        // FF FE 00 00  UTF-32, little-endian BOM\n        this.result = {\n          \"encoding\": \"UTF-32LE\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 4) == \"\\x00\\x00\\xFE\\xFF\") {\n        // 00 00 FE FF  UTF-32, big-endian BOM\n        this.result = {\n          \"encoding\": \"UTF-32BE\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 4) == \"\\xFE\\xFF\\x00\\x00\") {\n        // FE FF 00 00  UCS-4, unusual octet order BOM (3412)\n        this.result = {\n          \"encoding\": \"X-ISO-10646-UCS-4-3412\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 4) == \"\\x00\\x00\\xFF\\xFE\") {\n        // 00 00 FF FE  UCS-4, unusual octet order BOM (2143)\n        this.result = {\n          \"encoding\": \"X-ISO-10646-UCS-4-2143\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 2) == \"\\xFF\\xFE\") {\n        // FF FE  UTF-16, little endian BOM\n        this.result = {\n          \"encoding\": \"UTF-16LE\",\n          \"confidence\": 1.0\n        };\n      } else if (this._mBOM.slice(0, 2) == \"\\xFE\\xFF\") {\n        // FE FF  UTF-16, big endian BOM\n        this.result = {\n          \"encoding\": \"UTF-16BE\",\n          \"confidence\": 1.0\n        };\n      } // If we got to 4 chars without being able to detect a BOM we\n      // stop trying.\n\n\n      if (this._mBOM.length > 3) {\n        this._mGotData = true;\n      }\n    }\n\n    if (this.result.encoding && this.result.confidence > 0.0) {\n      this.done = true;\n      return;\n    }\n\n    if (this._mInputState == _state.pureAscii) {\n      if (this._highBitDetector.test(aBuf)) {\n        this._mInputState = _state.highbyte;\n      } else if (this._escDetector.test(this._mLastChar + aBuf)) {\n        this._mInputState = _state.escAscii;\n      }\n    }\n\n    this._mLastChar = aBuf.slice(-1);\n\n    if (this._mInputState == _state.escAscii) {\n      if (!this._mEscCharsetProber) {\n        this._mEscCharsetProber = new EscCharSetProber();\n      }\n\n      if (this._mEscCharsetProber.feed(aBuf) == constants.foundIt) {\n        this.result = {\n          \"encoding\": this._mEscCharsetProber.getCharsetName(),\n          \"confidence\": this._mEscCharsetProber.getConfidence()\n        };\n        this.done = true;\n      }\n    } else if (this._mInputState == _state.highbyte) {\n      if (this._mCharsetProbers.length == 0) {\n        this._mCharsetProbers = [new MBCSGroupProber(), new SBCSGroupProber(), new Latin1Prober()];\n      }\n\n      for (var i = 0, prober; prober = this._mCharsetProbers[i]; i++) {\n        if (prober.feed(aBuf) == constants.foundIt) {\n          this.result = {\n            \"encoding\": prober.getCharsetName(),\n            \"confidence\": prober.getConfidence()\n          };\n          this.done = true;\n          break;\n        }\n      }\n    }\n  };\n\n  this.close = function () {\n    if (this.done) return;\n\n    if (this._mBOM.length === 0) {\n      logger.log(\"no data received!\\n\");\n      return;\n    }\n\n    this.done = true;\n\n    if (this._mInputState == _state.pureAscii) {\n      logger.log(\"pure ascii\");\n      this.result = {\n        \"encoding\": \"ascii\",\n        \"confidence\": 1.0\n      };\n      return this.result;\n    }\n\n    if (this._mInputState == _state.highbyte) {\n      var proberConfidence = null;\n      var maxProberConfidence = 0.0;\n      var maxProber = null;\n\n      for (var i = 0, prober; prober = this._mCharsetProbers[i]; i++) {\n        if (!prober) continue;\n        proberConfidence = prober.getConfidence();\n\n        if (proberConfidence > maxProberConfidence) {\n          maxProberConfidence = proberConfidence;\n          maxProber = prober;\n        }\n\n        logger.log(prober.getCharsetName() + \" confidence \" + prober.getConfidence());\n      }\n\n      if (maxProber && maxProberConfidence > options.minimumThreshold) {\n        this.result = {\n          \"encoding\": maxProber.getCharsetName(),\n          \"confidence\": maxProber.getConfidence()\n        };\n        return this.result;\n      }\n    }\n\n    if (logger.enabled) {\n      logger.log(\"no probers hit minimum threshhold\\n\");\n\n      for (var i = 0, prober; prober = this._mCharsetProbers[i]; i++) {\n        if (!prober) continue;\n        logger.log(prober.getCharsetName() + \" confidence = \" + prober.getConfidence() + \"\\n\");\n      }\n    }\n  };\n\n  init();\n}\n\nmodule.exports = UniversalDetector;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetGroupProber = require('./charsetgroupprober');\n\nvar Big5Prober = require('./big5prober');\n\nvar UTF8Prober = require('./utf8prober');\n\nvar SJISProber = require('./sjisprober');\n\nvar EUCJPProber = require('./eucjpprober');\n\nvar GB2312Prober = require('./gb2312prober');\n\nvar EUCKRProber = require('./euckrprober');\n\nvar EUCTWProber = require('./euctwprober');\n\nfunction MBCSGroupProber() {\n  CharSetGroupProber.apply(this);\n  this._mProbers = [new UTF8Prober(), new SJISProber(), new EUCJPProber(), new GB2312Prober(), new EUCKRProber(), new Big5Prober(), new EUCTWProber()];\n  this.reset();\n}\n\nMBCSGroupProber.prototype = new CharSetGroupProber();\nmodule.exports = MBCSGroupProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar Big5SMModel = require('./mbcssm/big5');\n\nvar Big5DistributionAnalysis = require('./chardistribution').Big5DistributionAnalysis;\n\nfunction Big5Prober() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(Big5SMModel);\n    self._mDistributionAnalyzer = new Big5DistributionAnalysis();\n    self.reset();\n  }\n\n  this.getCharsetName = function () {\n    return \"Big5\";\n  };\n\n  init();\n}\n\nBig5Prober.prototype = new MultiByteCharSetProber();\nmodule.exports = Big5Prober;","var consts = require('../constants');\n\nvar BIG5_cls = [1, 1, 1, 1, 1, 1, 1, 1, // 00 - 07    //allow 0x00 as legal value\n1, 1, 1, 1, 1, 1, 0, 0, // 08 - 0f\n1, 1, 1, 1, 1, 1, 1, 1, // 10 - 17\n1, 1, 1, 0, 1, 1, 1, 1, // 18 - 1f\n1, 1, 1, 1, 1, 1, 1, 1, // 20 - 27\n1, 1, 1, 1, 1, 1, 1, 1, // 28 - 2f\n1, 1, 1, 1, 1, 1, 1, 1, // 30 - 37\n1, 1, 1, 1, 1, 1, 1, 1, // 38 - 3f\n2, 2, 2, 2, 2, 2, 2, 2, // 40 - 47\n2, 2, 2, 2, 2, 2, 2, 2, // 48 - 4f\n2, 2, 2, 2, 2, 2, 2, 2, // 50 - 57\n2, 2, 2, 2, 2, 2, 2, 2, // 58 - 5f\n2, 2, 2, 2, 2, 2, 2, 2, // 60 - 67\n2, 2, 2, 2, 2, 2, 2, 2, // 68 - 6f\n2, 2, 2, 2, 2, 2, 2, 2, // 70 - 77\n2, 2, 2, 2, 2, 2, 2, 1, // 78 - 7f\n4, 4, 4, 4, 4, 4, 4, 4, // 80 - 87\n4, 4, 4, 4, 4, 4, 4, 4, // 88 - 8f\n4, 4, 4, 4, 4, 4, 4, 4, // 90 - 97\n4, 4, 4, 4, 4, 4, 4, 4, // 98 - 9f\n4, 3, 3, 3, 3, 3, 3, 3, // a0 - a7\n3, 3, 3, 3, 3, 3, 3, 3, // a8 - af\n3, 3, 3, 3, 3, 3, 3, 3, // b0 - b7\n3, 3, 3, 3, 3, 3, 3, 3, // b8 - bf\n3, 3, 3, 3, 3, 3, 3, 3, // c0 - c7\n3, 3, 3, 3, 3, 3, 3, 3, // c8 - cf\n3, 3, 3, 3, 3, 3, 3, 3, // d0 - d7\n3, 3, 3, 3, 3, 3, 3, 3, // d8 - df\n3, 3, 3, 3, 3, 3, 3, 3, // e0 - e7\n3, 3, 3, 3, 3, 3, 3, 3, // e8 - ef\n3, 3, 3, 3, 3, 3, 3, 3, // f0 - f7\n3, 3, 3, 3, 3, 3, 3, 0 // f8 - ff\n];\nvar BIG5_st = [consts.error, consts.start, consts.start, 3, consts.error, consts.error, consts.error, consts.error, //00-07\nconsts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.error, //08-0f\nconsts.error, consts.start, consts.start, consts.start, consts.start, consts.start, consts.start, consts.start //10-17\n];\nvar Big5CharLenTable = [0, 1, 1, 2, 0];\nmodule.exports = {\n  \"classTable\": BIG5_cls,\n  \"classFactor\": 5,\n  \"stateTable\": BIG5_st,\n  \"charLenTable\": Big5CharLenTable,\n  \"name\": \"Big5\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// Sampling from about 20M text materials include literature and computer technology\n//\n// Japanese frequency table, applied to both S-JIS and EUC-JP\n// They are sorted in order.\n//\n// 128  --> 0.77094\n// 256  --> 0.85710\n// 512  --> 0.92635\n// 1024 --> 0.97130\n// 2048 --> 0.99431\n//\n// Ideal Distribution Ratio = 0.92635 / (1-0.92635) = 12.58\n// Random Distribution Ration = 512 / (2965+62+83+86-512) = 0.191\n//\n// Typical Distribution Ratio, 25% of IDR\nexports.JIS_TYPICAL_DISTRIBUTION_RATIO = 3.0;\nexports.JIS_TABLE_SIZE = 4368;\nexports.JISCharToFreqOrder = [40, 1, 6, 182, 152, 180, 295, 2127, 285, 381, 3295, 4304, 3068, 4606, 3165, 3510, //   16\n3511, 1822, 2785, 4607, 1193, 2226, 5070, 4608, 171, 2996, 1247, 18, 179, 5071, 856, 1661, //   32\n1262, 5072, 619, 127, 3431, 3512, 3230, 1899, 1700, 232, 228, 1294, 1298, 284, 283, 2041, //   48\n2042, 1061, 1062, 48, 49, 44, 45, 433, 434, 1040, 1041, 996, 787, 2997, 1255, 4305, //   64\n2108, 4609, 1684, 1648, 5073, 5074, 5075, 5076, 5077, 5078, 3687, 5079, 4610, 5080, 3927, 3928, //   80\n5081, 3296, 3432, 290, 2285, 1471, 2187, 5082, 2580, 2825, 1303, 2140, 1739, 1445, 2691, 3375, //   96\n1691, 3297, 4306, 4307, 4611, 452, 3376, 1182, 2713, 3688, 3069, 4308, 5083, 5084, 5085, 5086, //  112\n5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, //  128\n5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 4097, 5113, 5114, 5115, 5116, 5117, //  144\n5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, //  160\n5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, //  176\n5150, 5151, 5152, 4612, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, //  192\n5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 1472, 598, 618, 820, 1205, //  208\n1309, 1412, 1858, 1307, 1692, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 1142, 1452, 1234, 1172, //  224\n1875, 2043, 2149, 1793, 1382, 2973, 925, 2404, 1067, 1241, 960, 1377, 2935, 1491, 919, 1217, //  240\n1865, 2030, 1406, 1499, 2749, 4098, 5183, 5184, 5185, 5186, 5187, 5188, 2561, 4099, 3117, 1804, //  256\n2049, 3689, 4309, 3513, 1663, 5189, 3166, 3118, 3298, 1587, 1561, 3433, 5190, 3119, 1625, 2998, //  272\n3299, 4613, 1766, 3690, 2786, 4614, 5191, 5192, 5193, 5194, 2161, 26, 3377, 2, 3929, 20, //  288\n3691, 47, 4100, 50, 17, 16, 35, 268, 27, 243, 42, 155, 24, 154, 29, 184, //  304\n4, 91, 14, 92, 53, 396, 33, 289, 9, 37, 64, 620, 21, 39, 321, 5, //  320\n12, 11, 52, 13, 3, 208, 138, 0, 7, 60, 526, 141, 151, 1069, 181, 275, //  336\n1591, 83, 132, 1475, 126, 331, 829, 15, 69, 160, 59, 22, 157, 55, 1079, 312, //  352\n109, 38, 23, 25, 10, 19, 79, 5195, 61, 382, 1124, 8, 30, 5196, 5197, 5198, //  368\n5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 89, 62, 74, 34, 2416, 112, 139, 196, //  384\n271, 149, 84, 607, 131, 765, 46, 88, 153, 683, 76, 874, 101, 258, 57, 80, //  400\n32, 364, 121, 1508, 169, 1547, 68, 235, 145, 2999, 41, 360, 3027, 70, 63, 31, //  416\n43, 259, 262, 1383, 99, 533, 194, 66, 93, 846, 217, 192, 56, 106, 58, 565, //  432\n280, 272, 311, 256, 146, 82, 308, 71, 100, 128, 214, 655, 110, 261, 104, 1140, //  448\n54, 51, 36, 87, 67, 3070, 185, 2618, 2936, 2020, 28, 1066, 2390, 2059, 5207, 5208, //  464\n5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 4615, 5217, 5218, 5219, 5220, 5221, 5222, 5223, //  480\n5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 3514, 5237, 5238, //  496\n5239, 5240, 5241, 5242, 5243, 5244, 2297, 2031, 4616, 4310, 3692, 5245, 3071, 5246, 3598, 5247, //  512\n4617, 3231, 3515, 5248, 4101, 4311, 4618, 3808, 4312, 4102, 5249, 4103, 4104, 3599, 5250, 5251, //  528\n5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, //  544\n5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, //  560\n5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, //  576\n5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, //  592\n5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, //  608\n5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, //  624\n5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, //  640\n5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, //  656\n5380, 5381, 363, 642, 2787, 2878, 2788, 2789, 2316, 3232, 2317, 3434, 2011, 165, 1942, 3930, //  672\n3931, 3932, 3933, 5382, 4619, 5383, 4620, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, //  688\n5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, //  704\n5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, //  720\n5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, //  736\n5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, //  752\n5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, //  768\n5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, //  784\n5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, //  800\n5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, //  816\n5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, //  832\n5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, //  848\n5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, //  864\n5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, //  880\n5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, //  896\n5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, //  912\n5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, //  928\n5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, //  944\n5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, //  960\n5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, //  976\n5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, //  992\n5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, // 1008\n5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, // 1024\n5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, // 1040\n5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, // 1056\n5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, // 1072\n5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5790, 5791, 5792, // 1088\n5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, // 1104\n5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, // 1120\n5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, // 1136\n5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, // 1152\n5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, // 1168\n5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5887, 5888, // 1184\n5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, // 1200\n5905, 5906, 5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 5919, 5920, // 1216\n5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, // 1232\n5937, 5938, 5939, 5940, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 5951, 5952, // 1248\n5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, // 1264\n5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, // 1280\n5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, // 1296\n6001, 6002, 6003, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, // 1312\n6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, // 1328\n6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, // 1344\n6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, // 1360\n6065, 6066, 6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, // 1376\n6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, // 1392\n6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, // 1408\n6113, 6114, 2044, 2060, 4621, 997, 1235, 473, 1186, 4622, 920, 3378, 6115, 6116, 379, 1108, // 1424\n4313, 2657, 2735, 3934, 6117, 3809, 636, 3233, 573, 1026, 3693, 3435, 2974, 3300, 2298, 4105, // 1440\n854, 2937, 2463, 393, 2581, 2417, 539, 752, 1280, 2750, 2480, 140, 1161, 440, 708, 1569, // 1456\n665, 2497, 1746, 1291, 1523, 3000, 164, 1603, 847, 1331, 537, 1997, 486, 508, 1693, 2418, // 1472\n1970, 2227, 878, 1220, 299, 1030, 969, 652, 2751, 624, 1137, 3301, 2619, 65, 3302, 2045, // 1488\n1761, 1859, 3120, 1930, 3694, 3516, 663, 1767, 852, 835, 3695, 269, 767, 2826, 2339, 1305, // 1504\n896, 1150, 770, 1616, 6118, 506, 1502, 2075, 1012, 2519, 775, 2520, 2975, 2340, 2938, 4314, // 1520\n3028, 2086, 1224, 1943, 2286, 6119, 3072, 4315, 2240, 1273, 1987, 3935, 1557, 175, 597, 985, // 1536\n3517, 2419, 2521, 1416, 3029, 585, 938, 1931, 1007, 1052, 1932, 1685, 6120, 3379, 4316, 4623, // 1552\n804, 599, 3121, 1333, 2128, 2539, 1159, 1554, 2032, 3810, 687, 2033, 2904, 952, 675, 1467, // 1568\n3436, 6121, 2241, 1096, 1786, 2440, 1543, 1924, 980, 1813, 2228, 781, 2692, 1879, 728, 1918, // 1584\n3696, 4624, 548, 1950, 4625, 1809, 1088, 1356, 3303, 2522, 1944, 502, 972, 373, 513, 2827, // 1600\n586, 2377, 2391, 1003, 1976, 1631, 6122, 2464, 1084, 648, 1776, 4626, 2141, 324, 962, 2012, // 1616\n2177, 2076, 1384, 742, 2178, 1448, 1173, 1810, 222, 102, 301, 445, 125, 2420, 662, 2498, // 1632\n277, 200, 1476, 1165, 1068, 224, 2562, 1378, 1446, 450, 1880, 659, 791, 582, 4627, 2939, // 1648\n3936, 1516, 1274, 555, 2099, 3697, 1020, 1389, 1526, 3380, 1762, 1723, 1787, 2229, 412, 2114, // 1664\n1900, 2392, 3518, 512, 2597, 427, 1925, 2341, 3122, 1653, 1686, 2465, 2499, 697, 330, 273, // 1680\n380, 2162, 951, 832, 780, 991, 1301, 3073, 965, 2270, 3519, 668, 2523, 2636, 1286, 535, // 1696\n1407, 518, 671, 957, 2658, 2378, 267, 611, 2197, 3030, 6123, 248, 2299, 967, 1799, 2356, // 1712\n850, 1418, 3437, 1876, 1256, 1480, 2828, 1718, 6124, 6125, 1755, 1664, 2405, 6126, 4628, 2879, // 1728\n2829, 499, 2179, 676, 4629, 557, 2329, 2214, 2090, 325, 3234, 464, 811, 3001, 992, 2342, // 1744\n2481, 1232, 1469, 303, 2242, 466, 1070, 2163, 603, 1777, 2091, 4630, 2752, 4631, 2714, 322, // 1760\n2659, 1964, 1768, 481, 2188, 1463, 2330, 2857, 3600, 2092, 3031, 2421, 4632, 2318, 2070, 1849, // 1776\n2598, 4633, 1302, 2254, 1668, 1701, 2422, 3811, 2905, 3032, 3123, 2046, 4106, 1763, 1694, 4634, // 1792\n1604, 943, 1724, 1454, 917, 868, 2215, 1169, 2940, 552, 1145, 1800, 1228, 1823, 1955, 316, // 1808\n1080, 2510, 361, 1807, 2830, 4107, 2660, 3381, 1346, 1423, 1134, 4108, 6127, 541, 1263, 1229, // 1824\n1148, 2540, 545, 465, 1833, 2880, 3438, 1901, 3074, 2482, 816, 3937, 713, 1788, 2500, 122, // 1840\n1575, 195, 1451, 2501, 1111, 6128, 859, 374, 1225, 2243, 2483, 4317, 390, 1033, 3439, 3075, // 1856\n2524, 1687, 266, 793, 1440, 2599, 946, 779, 802, 507, 897, 1081, 528, 2189, 1292, 711, // 1872\n1866, 1725, 1167, 1640, 753, 398, 2661, 1053, 246, 348, 4318, 137, 1024, 3440, 1600, 2077, // 1888\n2129, 825, 4319, 698, 238, 521, 187, 2300, 1157, 2423, 1641, 1605, 1464, 1610, 1097, 2541, // 1904\n1260, 1436, 759, 2255, 1814, 2150, 705, 3235, 409, 2563, 3304, 561, 3033, 2005, 2564, 726, // 1920\n1956, 2343, 3698, 4109, 949, 3812, 3813, 3520, 1669, 653, 1379, 2525, 881, 2198, 632, 2256, // 1936\n1027, 778, 1074, 733, 1957, 514, 1481, 2466, 554, 2180, 702, 3938, 1606, 1017, 1398, 6129, // 1952\n1380, 3521, 921, 993, 1313, 594, 449, 1489, 1617, 1166, 768, 1426, 1360, 495, 1794, 3601, // 1968\n1177, 3602, 1170, 4320, 2344, 476, 425, 3167, 4635, 3168, 1424, 401, 2662, 1171, 3382, 1998, // 1984\n1089, 4110, 477, 3169, 474, 6130, 1909, 596, 2831, 1842, 494, 693, 1051, 1028, 1207, 3076, // 2000\n606, 2115, 727, 2790, 1473, 1115, 743, 3522, 630, 805, 1532, 4321, 2021, 366, 1057, 838, // 2016\n684, 1114, 2142, 4322, 2050, 1492, 1892, 1808, 2271, 3814, 2424, 1971, 1447, 1373, 3305, 1090, // 2032\n1536, 3939, 3523, 3306, 1455, 2199, 336, 369, 2331, 1035, 584, 2393, 902, 718, 2600, 6131, // 2048\n2753, 463, 2151, 1149, 1611, 2467, 715, 1308, 3124, 1268, 343, 1413, 3236, 1517, 1347, 2663, // 2064\n2093, 3940, 2022, 1131, 1553, 2100, 2941, 1427, 3441, 2942, 1323, 2484, 6132, 1980, 872, 2368, // 2080\n2441, 2943, 320, 2369, 2116, 1082, 679, 1933, 3941, 2791, 3815, 625, 1143, 2023, 422, 2200, // 2096\n3816, 6133, 730, 1695, 356, 2257, 1626, 2301, 2858, 2637, 1627, 1778, 937, 883, 2906, 2693, // 2112\n3002, 1769, 1086, 400, 1063, 1325, 3307, 2792, 4111, 3077, 456, 2345, 1046, 747, 6134, 1524, // 2128\n884, 1094, 3383, 1474, 2164, 1059, 974, 1688, 2181, 2258, 1047, 345, 1665, 1187, 358, 875, // 2144\n3170, 305, 660, 3524, 2190, 1334, 1135, 3171, 1540, 1649, 2542, 1527, 927, 968, 2793, 885, // 2160\n1972, 1850, 482, 500, 2638, 1218, 1109, 1085, 2543, 1654, 2034, 876, 78, 2287, 1482, 1277, // 2176\n861, 1675, 1083, 1779, 724, 2754, 454, 397, 1132, 1612, 2332, 893, 672, 1237, 257, 2259, // 2192\n2370, 135, 3384, 337, 2244, 547, 352, 340, 709, 2485, 1400, 788, 1138, 2511, 540, 772, // 2208\n1682, 2260, 2272, 2544, 2013, 1843, 1902, 4636, 1999, 1562, 2288, 4637, 2201, 1403, 1533, 407, // 2224\n576, 3308, 1254, 2071, 978, 3385, 170, 136, 1201, 3125, 2664, 3172, 2394, 213, 912, 873, // 2240\n3603, 1713, 2202, 699, 3604, 3699, 813, 3442, 493, 531, 1054, 468, 2907, 1483, 304, 281, // 2256\n4112, 1726, 1252, 2094, 339, 2319, 2130, 2639, 756, 1563, 2944, 748, 571, 2976, 1588, 2425, // 2272\n2715, 1851, 1460, 2426, 1528, 1392, 1973, 3237, 288, 3309, 685, 3386, 296, 892, 2716, 2216, // 2288\n1570, 2245, 722, 1747, 2217, 905, 3238, 1103, 6135, 1893, 1441, 1965, 251, 1805, 2371, 3700, // 2304\n2601, 1919, 1078, 75, 2182, 1509, 1592, 1270, 2640, 4638, 2152, 6136, 3310, 3817, 524, 706, // 2320\n1075, 292, 3818, 1756, 2602, 317, 98, 3173, 3605, 3525, 1844, 2218, 3819, 2502, 814, 567, // 2336\n385, 2908, 1534, 6137, 534, 1642, 3239, 797, 6138, 1670, 1529, 953, 4323, 188, 1071, 538, // 2352\n178, 729, 3240, 2109, 1226, 1374, 2000, 2357, 2977, 731, 2468, 1116, 2014, 2051, 6139, 1261, // 2368\n1593, 803, 2859, 2736, 3443, 556, 682, 823, 1541, 6140, 1369, 2289, 1706, 2794, 845, 462, // 2384\n2603, 2665, 1361, 387, 162, 2358, 1740, 739, 1770, 1720, 1304, 1401, 3241, 1049, 627, 1571, // 2400\n2427, 3526, 1877, 3942, 1852, 1500, 431, 1910, 1503, 677, 297, 2795, 286, 1433, 1038, 1198, // 2416\n2290, 1133, 1596, 4113, 4639, 2469, 1510, 1484, 3943, 6141, 2442, 108, 712, 4640, 2372, 866, // 2432\n3701, 2755, 3242, 1348, 834, 1945, 1408, 3527, 2395, 3243, 1811, 824, 994, 1179, 2110, 1548, // 2448\n1453, 790, 3003, 690, 4324, 4325, 2832, 2909, 3820, 1860, 3821, 225, 1748, 310, 346, 1780, // 2464\n2470, 821, 1993, 2717, 2796, 828, 877, 3528, 2860, 2471, 1702, 2165, 2910, 2486, 1789, 453, // 2480\n359, 2291, 1676, 73, 1164, 1461, 1127, 3311, 421, 604, 314, 1037, 589, 116, 2487, 737, // 2496\n837, 1180, 111, 244, 735, 6142, 2261, 1861, 1362, 986, 523, 418, 581, 2666, 3822, 103, // 2512\n855, 503, 1414, 1867, 2488, 1091, 657, 1597, 979, 605, 1316, 4641, 1021, 2443, 2078, 2001, // 2528\n1209, 96, 587, 2166, 1032, 260, 1072, 2153, 173, 94, 226, 3244, 819, 2006, 4642, 4114, // 2544\n2203, 231, 1744, 782, 97, 2667, 786, 3387, 887, 391, 442, 2219, 4326, 1425, 6143, 2694, // 2560\n633, 1544, 1202, 483, 2015, 592, 2052, 1958, 2472, 1655, 419, 129, 4327, 3444, 3312, 1714, // 2576\n1257, 3078, 4328, 1518, 1098, 865, 1310, 1019, 1885, 1512, 1734, 469, 2444, 148, 773, 436, // 2592\n1815, 1868, 1128, 1055, 4329, 1245, 2756, 3445, 2154, 1934, 1039, 4643, 579, 1238, 932, 2320, // 2608\n353, 205, 801, 115, 2428, 944, 2321, 1881, 399, 2565, 1211, 678, 766, 3944, 335, 2101, // 2624\n1459, 1781, 1402, 3945, 2737, 2131, 1010, 844, 981, 1326, 1013, 550, 1816, 1545, 2620, 1335, // 2640\n1008, 371, 2881, 936, 1419, 1613, 3529, 1456, 1395, 2273, 1834, 2604, 1317, 2738, 2503, 416, // 2656\n1643, 4330, 806, 1126, 229, 591, 3946, 1314, 1981, 1576, 1837, 1666, 347, 1790, 977, 3313, // 2672\n764, 2861, 1853, 688, 2429, 1920, 1462, 77, 595, 415, 2002, 3034, 798, 1192, 4115, 6144, // 2688\n2978, 4331, 3035, 2695, 2582, 2072, 2566, 430, 2430, 1727, 842, 1396, 3947, 3702, 613, 377, // 2704\n278, 236, 1417, 3388, 3314, 3174, 757, 1869, 107, 3530, 6145, 1194, 623, 2262, 207, 1253, // 2720\n2167, 3446, 3948, 492, 1117, 1935, 536, 1838, 2757, 1246, 4332, 696, 2095, 2406, 1393, 1572, // 2736\n3175, 1782, 583, 190, 253, 1390, 2230, 830, 3126, 3389, 934, 3245, 1703, 1749, 2979, 1870, // 2752\n2545, 1656, 2204, 869, 2346, 4116, 3176, 1817, 496, 1764, 4644, 942, 1504, 404, 1903, 1122, // 2768\n1580, 3606, 2945, 1022, 515, 372, 1735, 955, 2431, 3036, 6146, 2797, 1110, 2302, 2798, 617, // 2784\n6147, 441, 762, 1771, 3447, 3607, 3608, 1904, 840, 3037, 86, 939, 1385, 572, 1370, 2445, // 2800\n1336, 114, 3703, 898, 294, 203, 3315, 703, 1583, 2274, 429, 961, 4333, 1854, 1951, 3390, // 2816\n2373, 3704, 4334, 1318, 1381, 966, 1911, 2322, 1006, 1155, 309, 989, 458, 2718, 1795, 1372, // 2832\n1203, 252, 1689, 1363, 3177, 517, 1936, 168, 1490, 562, 193, 3823, 1042, 4117, 1835, 551, // 2848\n470, 4645, 395, 489, 3448, 1871, 1465, 2583, 2641, 417, 1493, 279, 1295, 511, 1236, 1119, // 2864\n72, 1231, 1982, 1812, 3004, 871, 1564, 984, 3449, 1667, 2696, 2096, 4646, 2347, 2833, 1673, // 2880\n3609, 695, 3246, 2668, 807, 1183, 4647, 890, 388, 2333, 1801, 1457, 2911, 1765, 1477, 1031, // 2896\n3316, 3317, 1278, 3391, 2799, 2292, 2526, 163, 3450, 4335, 2669, 1404, 1802, 6148, 2323, 2407, // 2912\n1584, 1728, 1494, 1824, 1269, 298, 909, 3318, 1034, 1632, 375, 776, 1683, 2061, 291, 210, // 2928\n1123, 809, 1249, 1002, 2642, 3038, 206, 1011, 2132, 144, 975, 882, 1565, 342, 667, 754, // 2944\n1442, 2143, 1299, 2303, 2062, 447, 626, 2205, 1221, 2739, 2912, 1144, 1214, 2206, 2584, 760, // 2960\n1715, 614, 950, 1281, 2670, 2621, 810, 577, 1287, 2546, 4648, 242, 2168, 250, 2643, 691, // 2976\n123, 2644, 647, 313, 1029, 689, 1357, 2946, 1650, 216, 771, 1339, 1306, 808, 2063, 549, // 2992\n913, 1371, 2913, 2914, 6149, 1466, 1092, 1174, 1196, 1311, 2605, 2396, 1783, 1796, 3079, 406, // 3008\n2671, 2117, 3949, 4649, 487, 1825, 2220, 6150, 2915, 448, 2348, 1073, 6151, 2397, 1707, 130, // 3024\n900, 1598, 329, 176, 1959, 2527, 1620, 6152, 2275, 4336, 3319, 1983, 2191, 3705, 3610, 2155, // 3040\n3706, 1912, 1513, 1614, 6153, 1988, 646, 392, 2304, 1589, 3320, 3039, 1826, 1239, 1352, 1340, // 3056\n2916, 505, 2567, 1709, 1437, 2408, 2547, 906, 6154, 2672, 384, 1458, 1594, 1100, 1329, 710, // 3072\n423, 3531, 2064, 2231, 2622, 1989, 2673, 1087, 1882, 333, 841, 3005, 1296, 2882, 2379, 580, // 3088\n1937, 1827, 1293, 2585, 601, 574, 249, 1772, 4118, 2079, 1120, 645, 901, 1176, 1690, 795, // 3104\n2207, 478, 1434, 516, 1190, 1530, 761, 2080, 930, 1264, 355, 435, 1552, 644, 1791, 987, // 3120\n220, 1364, 1163, 1121, 1538, 306, 2169, 1327, 1222, 546, 2645, 218, 241, 610, 1704, 3321, // 3136\n1984, 1839, 1966, 2528, 451, 6155, 2586, 3707, 2568, 907, 3178, 254, 2947, 186, 1845, 4650, // 3152\n745, 432, 1757, 428, 1633, 888, 2246, 2221, 2489, 3611, 2118, 1258, 1265, 956, 3127, 1784, // 3168\n4337, 2490, 319, 510, 119, 457, 3612, 274, 2035, 2007, 4651, 1409, 3128, 970, 2758, 590, // 3184\n2800, 661, 2247, 4652, 2008, 3950, 1420, 1549, 3080, 3322, 3951, 1651, 1375, 2111, 485, 2491, // 3200\n1429, 1156, 6156, 2548, 2183, 1495, 831, 1840, 2529, 2446, 501, 1657, 307, 1894, 3247, 1341, // 3216\n666, 899, 2156, 1539, 2549, 1559, 886, 349, 2208, 3081, 2305, 1736, 3824, 2170, 2759, 1014, // 3232\n1913, 1386, 542, 1397, 2948, 490, 368, 716, 362, 159, 282, 2569, 1129, 1658, 1288, 1750, // 3248\n2674, 276, 649, 2016, 751, 1496, 658, 1818, 1284, 1862, 2209, 2087, 2512, 3451, 622, 2834, // 3264\n376, 117, 1060, 2053, 1208, 1721, 1101, 1443, 247, 1250, 3179, 1792, 3952, 2760, 2398, 3953, // 3280\n6157, 2144, 3708, 446, 2432, 1151, 2570, 3452, 2447, 2761, 2835, 1210, 2448, 3082, 424, 2222, // 3296\n1251, 2449, 2119, 2836, 504, 1581, 4338, 602, 817, 857, 3825, 2349, 2306, 357, 3826, 1470, // 3312\n1883, 2883, 255, 958, 929, 2917, 3248, 302, 4653, 1050, 1271, 1751, 2307, 1952, 1430, 2697, // 3328\n2719, 2359, 354, 3180, 777, 158, 2036, 4339, 1659, 4340, 4654, 2308, 2949, 2248, 1146, 2232, // 3344\n3532, 2720, 1696, 2623, 3827, 6158, 3129, 1550, 2698, 1485, 1297, 1428, 637, 931, 2721, 2145, // 3360\n914, 2550, 2587, 81, 2450, 612, 827, 2646, 1242, 4655, 1118, 2884, 472, 1855, 3181, 3533, // 3376\n3534, 569, 1353, 2699, 1244, 1758, 2588, 4119, 2009, 2762, 2171, 3709, 1312, 1531, 6159, 1152, // 3392\n1938, 134, 1830, 471, 3710, 2276, 1112, 1535, 3323, 3453, 3535, 982, 1337, 2950, 488, 826, // 3408\n674, 1058, 1628, 4120, 2017, 522, 2399, 211, 568, 1367, 3454, 350, 293, 1872, 1139, 3249, // 3424\n1399, 1946, 3006, 1300, 2360, 3324, 588, 736, 6160, 2606, 744, 669, 3536, 3828, 6161, 1358, // 3440\n199, 723, 848, 933, 851, 1939, 1505, 1514, 1338, 1618, 1831, 4656, 1634, 3613, 443, 2740, // 3456\n3829, 717, 1947, 491, 1914, 6162, 2551, 1542, 4121, 1025, 6163, 1099, 1223, 198, 3040, 2722, // 3472\n370, 410, 1905, 2589, 998, 1248, 3182, 2380, 519, 1449, 4122, 1710, 947, 928, 1153, 4341, // 3488\n2277, 344, 2624, 1511, 615, 105, 161, 1212, 1076, 1960, 3130, 2054, 1926, 1175, 1906, 2473, // 3504\n414, 1873, 2801, 6164, 2309, 315, 1319, 3325, 318, 2018, 2146, 2157, 963, 631, 223, 4342, // 3520\n4343, 2675, 479, 3711, 1197, 2625, 3712, 2676, 2361, 6165, 4344, 4123, 6166, 2451, 3183, 1886, // 3536\n2184, 1674, 1330, 1711, 1635, 1506, 799, 219, 3250, 3083, 3954, 1677, 3713, 3326, 2081, 3614, // 3552\n1652, 2073, 4657, 1147, 3041, 1752, 643, 1961, 147, 1974, 3955, 6167, 1716, 2037, 918, 3007, // 3568\n1994, 120, 1537, 118, 609, 3184, 4345, 740, 3455, 1219, 332, 1615, 3830, 6168, 1621, 2980, // 3584\n1582, 783, 212, 553, 2350, 3714, 1349, 2433, 2082, 4124, 889, 6169, 2310, 1275, 1410, 973, // 3600\n166, 1320, 3456, 1797, 1215, 3185, 2885, 1846, 2590, 2763, 4658, 629, 822, 3008, 763, 940, // 3616\n1990, 2862, 439, 2409, 1566, 1240, 1622, 926, 1282, 1907, 2764, 654, 2210, 1607, 327, 1130, // 3632\n3956, 1678, 1623, 6170, 2434, 2192, 686, 608, 3831, 3715, 903, 3957, 3042, 6171, 2741, 1522, // 3648\n1915, 1105, 1555, 2552, 1359, 323, 3251, 4346, 3457, 738, 1354, 2553, 2311, 2334, 1828, 2003, // 3664\n3832, 1753, 2351, 1227, 6172, 1887, 4125, 1478, 6173, 2410, 1874, 1712, 1847, 520, 1204, 2607, // 3680\n264, 4659, 836, 2677, 2102, 600, 4660, 3833, 2278, 3084, 6174, 4347, 3615, 1342, 640, 532, // 3696\n543, 2608, 1888, 2400, 2591, 1009, 4348, 1497, 341, 1737, 3616, 2723, 1394, 529, 3252, 1321, // 3712\n983, 4661, 1515, 2120, 971, 2592, 924, 287, 1662, 3186, 4349, 2700, 4350, 1519, 908, 1948, // 3728\n2452, 156, 796, 1629, 1486, 2223, 2055, 694, 4126, 1259, 1036, 3392, 1213, 2249, 2742, 1889, // 3744\n1230, 3958, 1015, 910, 408, 559, 3617, 4662, 746, 725, 935, 4663, 3959, 3009, 1289, 563, // 3760\n867, 4664, 3960, 1567, 2981, 2038, 2626, 988, 2263, 2381, 4351, 143, 2374, 704, 1895, 6175, // 3776\n1188, 3716, 2088, 673, 3085, 2362, 4352, 484, 1608, 1921, 2765, 2918, 215, 904, 3618, 3537, // 3792\n894, 509, 976, 3043, 2701, 3961, 4353, 2837, 2982, 498, 6176, 6177, 1102, 3538, 1332, 3393, // 3808\n1487, 1636, 1637, 233, 245, 3962, 383, 650, 995, 3044, 460, 1520, 1206, 2352, 749, 3327, // 3824\n530, 700, 389, 1438, 1560, 1773, 3963, 2264, 719, 2951, 2724, 3834, 870, 1832, 1644, 1000, // 3840\n839, 2474, 3717, 197, 1630, 3394, 365, 2886, 3964, 1285, 2133, 734, 922, 818, 1106, 732, // 3856\n480, 2083, 1774, 3458, 923, 2279, 1350, 221, 3086, 85, 2233, 2234, 3835, 1585, 3010, 2147, // 3872\n1387, 1705, 2382, 1619, 2475, 133, 239, 2802, 1991, 1016, 2084, 2383, 411, 2838, 1113, 651, // 3888\n1985, 1160, 3328, 990, 1863, 3087, 1048, 1276, 2647, 265, 2627, 1599, 3253, 2056, 150, 638, // 3904\n2019, 656, 853, 326, 1479, 680, 1439, 4354, 1001, 1759, 413, 3459, 3395, 2492, 1431, 459, // 3920\n4355, 1125, 3329, 2265, 1953, 1450, 2065, 2863, 849, 351, 2678, 3131, 3254, 3255, 1104, 1577, // 3936\n227, 1351, 1645, 2453, 2193, 1421, 2887, 812, 2121, 634, 95, 2435, 201, 2312, 4665, 1646, // 3952\n1671, 2743, 1601, 2554, 2702, 2648, 2280, 1315, 1366, 2089, 3132, 1573, 3718, 3965, 1729, 1189, // 3968\n328, 2679, 1077, 1940, 1136, 558, 1283, 964, 1195, 621, 2074, 1199, 1743, 3460, 3619, 1896, // 3984\n1916, 1890, 3836, 2952, 1154, 2112, 1064, 862, 378, 3011, 2066, 2113, 2803, 1568, 2839, 6178, // 4000\n3088, 2919, 1941, 1660, 2004, 1992, 2194, 142, 707, 1590, 1708, 1624, 1922, 1023, 1836, 1233, // 4016\n1004, 2313, 789, 741, 3620, 6179, 1609, 2411, 1200, 4127, 3719, 3720, 4666, 2057, 3721, 593, // 4032\n2840, 367, 2920, 1878, 6180, 3461, 1521, 628, 1168, 692, 2211, 2649, 300, 720, 2067, 2571, // 4048\n2953, 3396, 959, 2504, 3966, 3539, 3462, 1977, 701, 6181, 954, 1043, 800, 681, 183, 3722, // 4064\n1803, 1730, 3540, 4128, 2103, 815, 2314, 174, 467, 230, 2454, 1093, 2134, 755, 3541, 3397, // 4080\n1141, 1162, 6182, 1738, 2039, 270, 3256, 2513, 1005, 1647, 2185, 3837, 858, 1679, 1897, 1719, // 4096\n2954, 2324, 1806, 402, 670, 167, 4129, 1498, 2158, 2104, 750, 6183, 915, 189, 1680, 1551, // 4112\n455, 4356, 1501, 2455, 405, 1095, 2955, 338, 1586, 1266, 1819, 570, 641, 1324, 237, 1556, // 4128\n2650, 1388, 3723, 6184, 1368, 2384, 1343, 1978, 3089, 2436, 879, 3724, 792, 1191, 758, 3012, // 4144\n1411, 2135, 1322, 4357, 240, 4667, 1848, 3725, 1574, 6185, 420, 3045, 1546, 1391, 714, 4358, // 4160\n1967, 941, 1864, 863, 664, 426, 560, 1731, 2680, 1785, 2864, 1949, 2363, 403, 3330, 1415, // 4176\n1279, 2136, 1697, 2335, 204, 721, 2097, 3838, 90, 6186, 2085, 2505, 191, 3967, 124, 2148, // 4192\n1376, 1798, 1178, 1107, 1898, 1405, 860, 4359, 1243, 1272, 2375, 2983, 1558, 2456, 1638, 113, // 4208\n3621, 578, 1923, 2609, 880, 386, 4130, 784, 2186, 2266, 1422, 2956, 2172, 1722, 497, 263, // 4224\n2514, 1267, 2412, 2610, 177, 2703, 3542, 774, 1927, 1344, 616, 1432, 1595, 1018, 172, 4360, // 4240\n2325, 911, 4361, 438, 1468, 3622, 794, 3968, 2024, 2173, 1681, 1829, 2957, 945, 895, 3090, // 4256\n575, 2212, 2476, 475, 2401, 2681, 785, 2744, 1745, 2293, 2555, 1975, 3133, 2865, 394, 4668, // 4272\n3839, 635, 4131, 639, 202, 1507, 2195, 2766, 1345, 1435, 2572, 3726, 1908, 1184, 1181, 2457, // 4288\n3727, 3134, 4362, 843, 2611, 437, 916, 4669, 234, 769, 1884, 3046, 3047, 3623, 833, 6187, // 4304\n1639, 2250, 2402, 1355, 1185, 2010, 2047, 999, 525, 1732, 1290, 1488, 2612, 948, 1578, 3728, // 4320\n2413, 2477, 1216, 2725, 2159, 334, 3840, 1328, 3624, 2921, 1525, 4132, 564, 1056, 891, 4363, // 4336\n1444, 1698, 2385, 2251, 3729, 1365, 2281, 2235, 1717, 6188, 864, 3841, 2515, 444, 527, 2767, // 4352\n2922, 3625, 544, 461, 6189, 566, 209, 2437, 3398, 2098, 1065, 2068, 3331, 3626, 3257, 2137, // 4368  //last 512\n//Everything below is of no interest for detection purpose\n2138, 2122, 3730, 2888, 1995, 1820, 1044, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, // 4384\n6199, 6200, 6201, 6202, 6203, 6204, 6205, 4670, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, // 4400\n6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, // 4416\n6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 3187, 6238, 6239, 3969, 6240, 6241, 6242, 6243, // 4432\n6244, 4671, 6245, 6246, 4672, 6247, 6248, 4133, 6249, 6250, 4364, 6251, 2923, 2556, 2613, 4673, // 4448\n4365, 3970, 6252, 6253, 6254, 6255, 4674, 6256, 6257, 6258, 2768, 2353, 4366, 4675, 4676, 3188, // 4464\n4367, 3463, 6259, 4134, 4677, 4678, 6260, 2267, 6261, 3842, 3332, 4368, 3543, 6262, 6263, 6264, // 4480\n3013, 1954, 1928, 4135, 4679, 6265, 6266, 2478, 3091, 6267, 4680, 4369, 6268, 6269, 1699, 6270, // 4496\n3544, 4136, 4681, 6271, 4137, 6272, 4370, 2804, 6273, 6274, 2593, 3971, 3972, 4682, 6275, 2236, // 4512\n4683, 6276, 6277, 4684, 6278, 6279, 4138, 3973, 4685, 6280, 6281, 3258, 6282, 6283, 6284, 6285, // 4528\n3974, 4686, 2841, 3975, 6286, 6287, 3545, 6288, 6289, 4139, 4687, 4140, 6290, 4141, 6291, 4142, // 4544\n6292, 6293, 3333, 6294, 6295, 6296, 4371, 6297, 3399, 6298, 6299, 4372, 3976, 6300, 6301, 6302, // 4560\n4373, 6303, 6304, 3843, 3731, 6305, 4688, 4374, 6306, 6307, 3259, 2294, 6308, 3732, 2530, 4143, // 4576\n6309, 4689, 6310, 6311, 6312, 3048, 6313, 6314, 4690, 3733, 2237, 6315, 6316, 2282, 3334, 6317, // 4592\n6318, 3844, 6319, 6320, 4691, 6321, 3400, 4692, 6322, 4693, 6323, 3049, 6324, 4375, 6325, 3977, // 4608\n6326, 6327, 6328, 3546, 6329, 4694, 3335, 6330, 4695, 4696, 6331, 6332, 6333, 6334, 4376, 3978, // 4624\n6335, 4697, 3979, 4144, 6336, 3980, 4698, 6337, 6338, 6339, 6340, 6341, 4699, 4700, 4701, 6342, // 4640\n6343, 4702, 6344, 6345, 4703, 6346, 6347, 4704, 6348, 4705, 4706, 3135, 6349, 4707, 6350, 4708, // 4656\n6351, 4377, 6352, 4709, 3734, 4145, 6353, 2506, 4710, 3189, 6354, 3050, 4711, 3981, 6355, 3547, // 4672\n3014, 4146, 4378, 3735, 2651, 3845, 3260, 3136, 2224, 1986, 6356, 3401, 6357, 4712, 2594, 3627, // 4688\n3137, 2573, 3736, 3982, 4713, 3628, 4714, 4715, 2682, 3629, 4716, 6358, 3630, 4379, 3631, 6359, // 4704\n6360, 6361, 3983, 6362, 6363, 6364, 6365, 4147, 3846, 4717, 6366, 6367, 3737, 2842, 6368, 4718, // 4720\n2628, 6369, 3261, 6370, 2386, 6371, 6372, 3738, 3984, 4719, 3464, 4720, 3402, 6373, 2924, 3336, // 4736\n4148, 2866, 6374, 2805, 3262, 4380, 2704, 2069, 2531, 3138, 2806, 2984, 6375, 2769, 6376, 4721, // 4752\n4722, 3403, 6377, 6378, 3548, 6379, 6380, 2705, 3092, 1979, 4149, 2629, 3337, 2889, 6381, 3338, // 4768\n4150, 2557, 3339, 4381, 6382, 3190, 3263, 3739, 6383, 4151, 4723, 4152, 2558, 2574, 3404, 3191, // 4784\n6384, 6385, 4153, 6386, 4724, 4382, 6387, 6388, 4383, 6389, 6390, 4154, 6391, 4725, 3985, 6392, // 4800\n3847, 4155, 6393, 6394, 6395, 6396, 6397, 3465, 6398, 4384, 6399, 6400, 6401, 6402, 6403, 6404, // 4816\n4156, 6405, 6406, 6407, 6408, 2123, 6409, 6410, 2326, 3192, 4726, 6411, 6412, 6413, 6414, 4385, // 4832\n4157, 6415, 6416, 4158, 6417, 3093, 3848, 6418, 3986, 6419, 6420, 3849, 6421, 6422, 6423, 4159, // 4848\n6424, 6425, 4160, 6426, 3740, 6427, 6428, 6429, 6430, 3987, 6431, 4727, 6432, 2238, 6433, 6434, // 4864\n4386, 3988, 6435, 6436, 3632, 6437, 6438, 2843, 6439, 6440, 6441, 6442, 3633, 6443, 2958, 6444, // 4880\n6445, 3466, 6446, 2364, 4387, 3850, 6447, 4388, 2959, 3340, 6448, 3851, 6449, 4728, 6450, 6451, // 4896\n3264, 4729, 6452, 3193, 6453, 4389, 4390, 2706, 3341, 4730, 6454, 3139, 6455, 3194, 6456, 3051, // 4912\n2124, 3852, 1602, 4391, 4161, 3853, 1158, 3854, 4162, 3989, 4392, 3990, 4731, 4732, 4393, 2040, // 4928\n4163, 4394, 3265, 6457, 2807, 3467, 3855, 6458, 6459, 6460, 3991, 3468, 4733, 4734, 6461, 3140, // 4944\n2960, 6462, 4735, 6463, 6464, 6465, 6466, 4736, 4737, 4738, 4739, 6467, 6468, 4164, 2403, 3856, // 4960\n6469, 6470, 2770, 2844, 6471, 4740, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 3195, 6479, 4741, // 4976\n4395, 6480, 2867, 6481, 4742, 2808, 6482, 2493, 4165, 6483, 6484, 6485, 6486, 2295, 4743, 6487, // 4992\n6488, 6489, 3634, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 2985, 4744, 6497, 6498, 4745, 6499, // 5008\n6500, 2925, 3141, 4166, 6501, 6502, 4746, 6503, 6504, 4747, 6505, 6506, 6507, 2890, 6508, 6509, // 5024\n6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 3469, 4167, 6520, 6521, 6522, 4748, // 5040\n4396, 3741, 4397, 4749, 4398, 3342, 2125, 4750, 6523, 4751, 4752, 4753, 3052, 6524, 2961, 4168, // 5056\n6525, 4754, 6526, 4755, 4399, 2926, 4169, 6527, 3857, 6528, 4400, 4170, 6529, 4171, 6530, 6531, // 5072\n2595, 6532, 6533, 6534, 6535, 3635, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 4756, 6543, 6544, // 5088\n6545, 6546, 6547, 6548, 4401, 6549, 6550, 6551, 6552, 4402, 3405, 4757, 4403, 6553, 6554, 6555, // 5104\n4172, 3742, 6556, 6557, 6558, 3992, 3636, 6559, 6560, 3053, 2726, 6561, 3549, 4173, 3054, 4404, // 5120\n6562, 6563, 3993, 4405, 3266, 3550, 2809, 4406, 6564, 6565, 6566, 4758, 4759, 6567, 3743, 6568, // 5136\n4760, 3744, 4761, 3470, 6569, 6570, 6571, 4407, 6572, 3745, 4174, 6573, 4175, 2810, 4176, 3196, // 5152\n4762, 6574, 4177, 6575, 6576, 2494, 2891, 3551, 6577, 6578, 3471, 6579, 4408, 6580, 3015, 3197, // 5168\n6581, 3343, 2532, 3994, 3858, 6582, 3094, 3406, 4409, 6583, 2892, 4178, 4763, 4410, 3016, 4411, // 5184\n6584, 3995, 3142, 3017, 2683, 6585, 4179, 6586, 6587, 4764, 4412, 6588, 6589, 4413, 6590, 2986, // 5200\n6591, 2962, 3552, 6592, 2963, 3472, 6593, 6594, 4180, 4765, 6595, 6596, 2225, 3267, 4414, 6597, // 5216\n3407, 3637, 4766, 6598, 6599, 3198, 6600, 4415, 6601, 3859, 3199, 6602, 3473, 4767, 2811, 4416, // 5232\n1856, 3268, 3200, 2575, 3996, 3997, 3201, 4417, 6603, 3095, 2927, 6604, 3143, 6605, 2268, 6606, // 5248\n3998, 3860, 3096, 2771, 6607, 6608, 3638, 2495, 4768, 6609, 3861, 6610, 3269, 2745, 4769, 4181, // 5264\n3553, 6611, 2845, 3270, 6612, 6613, 6614, 3862, 6615, 6616, 4770, 4771, 6617, 3474, 3999, 4418, // 5280\n4419, 6618, 3639, 3344, 6619, 4772, 4182, 6620, 2126, 6621, 6622, 6623, 4420, 4773, 6624, 3018, // 5296\n6625, 4774, 3554, 6626, 4183, 2025, 3746, 6627, 4184, 2707, 6628, 4421, 4422, 3097, 1775, 4185, // 5312\n3555, 6629, 6630, 2868, 6631, 6632, 4423, 6633, 6634, 4424, 2414, 2533, 2928, 6635, 4186, 2387, // 5328\n6636, 4775, 6637, 4187, 6638, 1891, 4425, 3202, 3203, 6639, 6640, 4776, 6641, 3345, 6642, 6643, // 5344\n3640, 6644, 3475, 3346, 3641, 4000, 6645, 3144, 6646, 3098, 2812, 4188, 3642, 3204, 6647, 3863, // 5360\n3476, 6648, 3864, 6649, 4426, 4001, 6650, 6651, 6652, 2576, 6653, 4189, 4777, 6654, 6655, 6656, // 5376\n2846, 6657, 3477, 3205, 4002, 6658, 4003, 6659, 3347, 2252, 6660, 6661, 6662, 4778, 6663, 6664, // 5392\n6665, 6666, 6667, 6668, 6669, 4779, 4780, 2048, 6670, 3478, 3099, 6671, 3556, 3747, 4004, 6672, // 5408\n6673, 6674, 3145, 4005, 3748, 6675, 6676, 6677, 6678, 6679, 3408, 6680, 6681, 6682, 6683, 3206, // 5424\n3207, 6684, 6685, 4781, 4427, 6686, 4782, 4783, 4784, 6687, 6688, 6689, 4190, 6690, 6691, 3479, // 5440\n6692, 2746, 6693, 4428, 6694, 6695, 6696, 6697, 6698, 6699, 4785, 6700, 6701, 3208, 2727, 6702, // 5456\n3146, 6703, 6704, 3409, 2196, 6705, 4429, 6706, 6707, 6708, 2534, 1996, 6709, 6710, 6711, 2747, // 5472\n6712, 6713, 6714, 4786, 3643, 6715, 4430, 4431, 6716, 3557, 6717, 4432, 4433, 6718, 6719, 6720, // 5488\n6721, 3749, 6722, 4006, 4787, 6723, 6724, 3644, 4788, 4434, 6725, 6726, 4789, 2772, 6727, 6728, // 5504\n6729, 6730, 6731, 2708, 3865, 2813, 4435, 6732, 6733, 4790, 4791, 3480, 6734, 6735, 6736, 6737, // 5520\n4436, 3348, 6738, 3410, 4007, 6739, 6740, 4008, 6741, 6742, 4792, 3411, 4191, 6743, 6744, 6745, // 5536\n6746, 6747, 3866, 6748, 3750, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 3867, 6756, 4009, 6757, // 5552\n4793, 4794, 6758, 2814, 2987, 6759, 6760, 6761, 4437, 6762, 6763, 6764, 6765, 3645, 6766, 6767, // 5568\n3481, 4192, 6768, 3751, 6769, 6770, 2174, 6771, 3868, 3752, 6772, 6773, 6774, 4193, 4795, 4438, // 5584\n3558, 4796, 4439, 6775, 4797, 6776, 6777, 4798, 6778, 4799, 3559, 4800, 6779, 6780, 6781, 3482, // 5600\n6782, 2893, 6783, 6784, 4194, 4801, 4010, 6785, 6786, 4440, 6787, 4011, 6788, 6789, 6790, 6791, // 5616\n6792, 6793, 4802, 6794, 6795, 6796, 4012, 6797, 6798, 6799, 6800, 3349, 4803, 3483, 6801, 4804, // 5632\n4195, 6802, 4013, 6803, 6804, 4196, 6805, 4014, 4015, 6806, 2847, 3271, 2848, 6807, 3484, 6808, // 5648\n6809, 6810, 4441, 6811, 4442, 4197, 4443, 3272, 4805, 6812, 3412, 4016, 1579, 6813, 6814, 4017, // 5664\n6815, 3869, 6816, 2964, 6817, 4806, 6818, 6819, 4018, 3646, 6820, 6821, 4807, 4019, 4020, 6822, // 5680\n6823, 3560, 6824, 6825, 4021, 4444, 6826, 4198, 6827, 6828, 4445, 6829, 6830, 4199, 4808, 6831, // 5696\n6832, 6833, 3870, 3019, 2458, 6834, 3753, 3413, 3350, 6835, 4809, 3871, 4810, 3561, 4446, 6836, // 5712\n6837, 4447, 4811, 4812, 6838, 2459, 4448, 6839, 4449, 6840, 6841, 4022, 3872, 6842, 4813, 4814, // 5728\n6843, 6844, 4815, 4200, 4201, 4202, 6845, 4023, 6846, 6847, 4450, 3562, 3873, 6848, 6849, 4816, // 5744\n4817, 6850, 4451, 4818, 2139, 6851, 3563, 6852, 6853, 3351, 6854, 6855, 3352, 4024, 2709, 3414, // 5760\n4203, 4452, 6856, 4204, 6857, 6858, 3874, 3875, 6859, 6860, 4819, 6861, 6862, 6863, 6864, 4453, // 5776\n3647, 6865, 6866, 4820, 6867, 6868, 6869, 6870, 4454, 6871, 2869, 6872, 6873, 4821, 6874, 3754, // 5792\n6875, 4822, 4205, 6876, 6877, 6878, 3648, 4206, 4455, 6879, 4823, 6880, 4824, 3876, 6881, 3055, // 5808\n4207, 6882, 3415, 6883, 6884, 6885, 4208, 4209, 6886, 4210, 3353, 6887, 3354, 3564, 3209, 3485, // 5824\n2652, 6888, 2728, 6889, 3210, 3755, 6890, 4025, 4456, 6891, 4825, 6892, 6893, 6894, 6895, 4211, // 5840\n6896, 6897, 6898, 4826, 6899, 6900, 4212, 6901, 4827, 6902, 2773, 3565, 6903, 4828, 6904, 6905, // 5856\n6906, 6907, 3649, 3650, 6908, 2849, 3566, 6909, 3567, 3100, 6910, 6911, 6912, 6913, 6914, 6915, // 5872\n4026, 6916, 3355, 4829, 3056, 4457, 3756, 6917, 3651, 6918, 4213, 3652, 2870, 6919, 4458, 6920, // 5888\n2438, 6921, 6922, 3757, 2774, 4830, 6923, 3356, 4831, 4832, 6924, 4833, 4459, 3653, 2507, 6925, // 5904\n4834, 2535, 6926, 6927, 3273, 4027, 3147, 6928, 3568, 6929, 6930, 6931, 4460, 6932, 3877, 4461, // 5920\n2729, 3654, 6933, 6934, 6935, 6936, 2175, 4835, 2630, 4214, 4028, 4462, 4836, 4215, 6937, 3148, // 5936\n4216, 4463, 4837, 4838, 4217, 6938, 6939, 2850, 4839, 6940, 4464, 6941, 6942, 6943, 4840, 6944, // 5952\n4218, 3274, 4465, 6945, 6946, 2710, 6947, 4841, 4466, 6948, 6949, 2894, 6950, 6951, 4842, 6952, // 5968\n4219, 3057, 2871, 6953, 6954, 6955, 6956, 4467, 6957, 2711, 6958, 6959, 6960, 3275, 3101, 4843, // 5984\n6961, 3357, 3569, 6962, 4844, 6963, 6964, 4468, 4845, 3570, 6965, 3102, 4846, 3758, 6966, 4847, // 6000\n3878, 4848, 4849, 4029, 6967, 2929, 3879, 4850, 4851, 6968, 6969, 1733, 6970, 4220, 6971, 6972, // 6016\n6973, 6974, 6975, 6976, 4852, 6977, 6978, 6979, 6980, 6981, 6982, 3759, 6983, 6984, 6985, 3486, // 6032\n3487, 6986, 3488, 3416, 6987, 6988, 6989, 6990, 6991, 6992, 6993, 6994, 6995, 6996, 6997, 4853, // 6048\n6998, 6999, 4030, 7000, 7001, 3211, 7002, 7003, 4221, 7004, 7005, 3571, 4031, 7006, 3572, 7007, // 6064\n2614, 4854, 2577, 7008, 7009, 2965, 3655, 3656, 4855, 2775, 3489, 3880, 4222, 4856, 3881, 4032, // 6080\n3882, 3657, 2730, 3490, 4857, 7010, 3149, 7011, 4469, 4858, 2496, 3491, 4859, 2283, 7012, 7013, // 6096\n7014, 2365, 4860, 4470, 7015, 7016, 3760, 7017, 7018, 4223, 1917, 7019, 7020, 7021, 4471, 7022, // 6112\n2776, 4472, 7023, 7024, 7025, 7026, 4033, 7027, 3573, 4224, 4861, 4034, 4862, 7028, 7029, 1929, // 6128\n3883, 4035, 7030, 4473, 3058, 7031, 2536, 3761, 3884, 7032, 4036, 7033, 2966, 2895, 1968, 4474, // 6144\n3276, 4225, 3417, 3492, 4226, 2105, 7034, 7035, 1754, 2596, 3762, 4227, 4863, 4475, 3763, 4864, // 6160\n3764, 2615, 2777, 3103, 3765, 3658, 3418, 4865, 2296, 3766, 2815, 7036, 7037, 7038, 3574, 2872, // 6176\n3277, 4476, 7039, 4037, 4477, 7040, 7041, 4038, 7042, 7043, 7044, 7045, 7046, 7047, 2537, 7048, // 6192\n7049, 7050, 7051, 7052, 7053, 7054, 4478, 7055, 7056, 3767, 3659, 4228, 3575, 7057, 7058, 4229, // 6208\n7059, 7060, 7061, 3660, 7062, 3212, 7063, 3885, 4039, 2460, 7064, 7065, 7066, 7067, 7068, 7069, // 6224\n7070, 7071, 7072, 7073, 7074, 4866, 3768, 4867, 7075, 7076, 7077, 7078, 4868, 3358, 3278, 2653, // 6240\n7079, 7080, 4479, 3886, 7081, 7082, 4869, 7083, 7084, 7085, 7086, 7087, 7088, 2538, 7089, 7090, // 6256\n7091, 4040, 3150, 3769, 4870, 4041, 2896, 3359, 4230, 2930, 7092, 3279, 7093, 2967, 4480, 3213, // 6272\n4481, 3661, 7094, 7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 2461, 3770, 7103, 7104, 4231, // 6288\n3151, 7105, 7106, 7107, 4042, 3662, 7108, 7109, 4871, 3663, 4872, 4043, 3059, 7110, 7111, 7112, // 6304\n3493, 2988, 7113, 4873, 7114, 7115, 7116, 3771, 4874, 7117, 7118, 4232, 4875, 7119, 3576, 2336, // 6320\n4876, 7120, 4233, 3419, 4044, 4877, 4878, 4482, 4483, 4879, 4484, 4234, 7121, 3772, 4880, 1045, // 6336\n3280, 3664, 4881, 4882, 7122, 7123, 7124, 7125, 4883, 7126, 2778, 7127, 4485, 4486, 7128, 4884, // 6352\n3214, 3887, 7129, 7130, 3215, 7131, 4885, 4045, 7132, 7133, 4046, 7134, 7135, 7136, 7137, 7138, // 6368\n7139, 7140, 7141, 7142, 7143, 4235, 7144, 4886, 7145, 7146, 7147, 4887, 7148, 7149, 7150, 4487, // 6384\n4047, 4488, 7151, 7152, 4888, 4048, 2989, 3888, 7153, 3665, 7154, 4049, 7155, 7156, 7157, 7158, // 6400\n7159, 7160, 2931, 4889, 4890, 4489, 7161, 2631, 3889, 4236, 2779, 7162, 7163, 4891, 7164, 3060, // 6416\n7165, 1672, 4892, 7166, 4893, 4237, 3281, 4894, 7167, 7168, 3666, 7169, 3494, 7170, 7171, 4050, // 6432\n7172, 7173, 3104, 3360, 3420, 4490, 4051, 2684, 4052, 7174, 4053, 7175, 7176, 7177, 2253, 4054, // 6448\n7178, 7179, 4895, 7180, 3152, 3890, 3153, 4491, 3216, 7181, 7182, 7183, 2968, 4238, 4492, 4055, // 6464\n7184, 2990, 7185, 2479, 7186, 7187, 4493, 7188, 7189, 7190, 7191, 7192, 4896, 7193, 4897, 2969, // 6480\n4494, 4898, 7194, 3495, 7195, 7196, 4899, 4495, 7197, 3105, 2731, 7198, 4900, 7199, 7200, 7201, // 6496\n4056, 7202, 3361, 7203, 7204, 4496, 4901, 4902, 7205, 4497, 7206, 7207, 2315, 4903, 7208, 4904, // 6512\n7209, 4905, 2851, 7210, 7211, 3577, 7212, 3578, 4906, 7213, 4057, 3667, 4907, 7214, 4058, 2354, // 6528\n3891, 2376, 3217, 3773, 7215, 7216, 7217, 7218, 7219, 4498, 7220, 4908, 3282, 2685, 7221, 3496, // 6544\n4909, 2632, 3154, 4910, 7222, 2337, 7223, 4911, 7224, 7225, 7226, 4912, 4913, 3283, 4239, 4499, // 6560\n7227, 2816, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 4914, 4500, 4501, 7235, 7236, 7237, 2686, // 6576\n7238, 4915, 7239, 2897, 4502, 7240, 4503, 7241, 2516, 7242, 4504, 3362, 3218, 7243, 7244, 7245, // 6592\n4916, 7246, 7247, 4505, 3363, 7248, 7249, 7250, 7251, 3774, 4506, 7252, 7253, 4917, 7254, 7255, // 6608\n3284, 2991, 4918, 4919, 3219, 3892, 4920, 3106, 3497, 4921, 7256, 7257, 7258, 4922, 7259, 4923, // 6624\n3364, 4507, 4508, 4059, 7260, 4240, 3498, 7261, 7262, 4924, 7263, 2992, 3893, 4060, 3220, 7264, // 6640\n7265, 7266, 7267, 7268, 7269, 4509, 3775, 7270, 2817, 7271, 4061, 4925, 4510, 3776, 7272, 4241, // 6656\n4511, 3285, 7273, 7274, 3499, 7275, 7276, 7277, 4062, 4512, 4926, 7278, 3107, 3894, 7279, 7280, // 6672\n4927, 7281, 4513, 7282, 7283, 3668, 7284, 7285, 4242, 4514, 4243, 7286, 2058, 4515, 4928, 4929, // 6688\n4516, 7287, 3286, 4244, 7288, 4517, 7289, 7290, 7291, 3669, 7292, 7293, 4930, 4931, 4932, 2355, // 6704\n4933, 7294, 2633, 4518, 7295, 4245, 7296, 7297, 4519, 7298, 7299, 4520, 4521, 4934, 7300, 4246, // 6720\n4522, 7301, 7302, 7303, 3579, 7304, 4247, 4935, 7305, 4936, 7306, 7307, 7308, 7309, 3777, 7310, // 6736\n4523, 7311, 7312, 7313, 4248, 3580, 7314, 4524, 3778, 4249, 7315, 3581, 7316, 3287, 7317, 3221, // 6752\n7318, 4937, 7319, 7320, 7321, 7322, 7323, 7324, 4938, 4939, 7325, 4525, 7326, 7327, 7328, 4063, // 6768\n7329, 7330, 4940, 7331, 7332, 4941, 7333, 4526, 7334, 3500, 2780, 1741, 4942, 2026, 1742, 7335, // 6784\n7336, 3582, 4527, 2388, 7337, 7338, 7339, 4528, 7340, 4250, 4943, 7341, 7342, 7343, 4944, 7344, // 6800\n7345, 7346, 3020, 7347, 4945, 7348, 7349, 7350, 7351, 3895, 7352, 3896, 4064, 3897, 7353, 7354, // 6816\n7355, 4251, 7356, 7357, 3898, 7358, 3779, 7359, 3780, 3288, 7360, 7361, 4529, 7362, 4946, 4530, // 6832\n2027, 7363, 3899, 4531, 4947, 3222, 3583, 7364, 4948, 7365, 7366, 7367, 7368, 4949, 3501, 4950, // 6848\n3781, 4951, 4532, 7369, 2517, 4952, 4252, 4953, 3155, 7370, 4954, 4955, 4253, 2518, 4533, 7371, // 6864\n7372, 2712, 4254, 7373, 7374, 7375, 3670, 4956, 3671, 7376, 2389, 3502, 4065, 7377, 2338, 7378, // 6880\n7379, 7380, 7381, 3061, 7382, 4957, 7383, 7384, 7385, 7386, 4958, 4534, 7387, 7388, 2993, 7389, // 6896\n3062, 7390, 4959, 7391, 7392, 7393, 4960, 3108, 4961, 7394, 4535, 7395, 4962, 3421, 4536, 7396, // 6912\n4963, 7397, 4964, 1857, 7398, 4965, 7399, 7400, 2176, 3584, 4966, 7401, 7402, 3422, 4537, 3900, // 6928\n3585, 7403, 3782, 7404, 2852, 7405, 7406, 7407, 4538, 3783, 2654, 3423, 4967, 4539, 7408, 3784, // 6944\n3586, 2853, 4540, 4541, 7409, 3901, 7410, 3902, 7411, 7412, 3785, 3109, 2327, 3903, 7413, 7414, // 6960\n2970, 4066, 2932, 7415, 7416, 7417, 3904, 3672, 3424, 7418, 4542, 4543, 4544, 7419, 4968, 7420, // 6976\n7421, 4255, 7422, 7423, 7424, 7425, 7426, 4067, 7427, 3673, 3365, 4545, 7428, 3110, 2559, 3674, // 6992\n7429, 7430, 3156, 7431, 7432, 3503, 7433, 3425, 4546, 7434, 3063, 2873, 7435, 3223, 4969, 4547, // 7008\n4548, 2898, 4256, 4068, 7436, 4069, 3587, 3786, 2933, 3787, 4257, 4970, 4971, 3788, 7437, 4972, // 7024\n3064, 7438, 4549, 7439, 7440, 7441, 7442, 7443, 4973, 3905, 7444, 2874, 7445, 7446, 7447, 7448, // 7040\n3021, 7449, 4550, 3906, 3588, 4974, 7450, 7451, 3789, 3675, 7452, 2578, 7453, 4070, 7454, 7455, // 7056\n7456, 4258, 3676, 7457, 4975, 7458, 4976, 4259, 3790, 3504, 2634, 4977, 3677, 4551, 4260, 7459, // 7072\n7460, 7461, 7462, 3907, 4261, 4978, 7463, 7464, 7465, 7466, 4979, 4980, 7467, 7468, 2213, 4262, // 7088\n7469, 7470, 7471, 3678, 4981, 7472, 2439, 7473, 4263, 3224, 3289, 7474, 3908, 2415, 4982, 7475, // 7104\n4264, 7476, 4983, 2655, 7477, 7478, 2732, 4552, 2854, 2875, 7479, 7480, 4265, 7481, 4553, 4984, // 7120\n7482, 7483, 4266, 7484, 3679, 3366, 3680, 2818, 2781, 2782, 3367, 3589, 4554, 3065, 7485, 4071, // 7136\n2899, 7486, 7487, 3157, 2462, 4072, 4555, 4073, 4985, 4986, 3111, 4267, 2687, 3368, 4556, 4074, // 7152\n3791, 4268, 7488, 3909, 2783, 7489, 2656, 1962, 3158, 4557, 4987, 1963, 3159, 3160, 7490, 3112, // 7168\n4988, 4989, 3022, 4990, 4991, 3792, 2855, 7491, 7492, 2971, 4558, 7493, 7494, 4992, 7495, 7496, // 7184\n7497, 7498, 4993, 7499, 3426, 4559, 4994, 7500, 3681, 4560, 4269, 4270, 3910, 7501, 4075, 4995, // 7200\n4271, 7502, 7503, 4076, 7504, 4996, 7505, 3225, 4997, 4272, 4077, 2819, 3023, 7506, 7507, 2733, // 7216\n4561, 7508, 4562, 7509, 3369, 3793, 7510, 3590, 2508, 7511, 7512, 4273, 3113, 2994, 2616, 7513, // 7232\n7514, 7515, 7516, 7517, 7518, 2820, 3911, 4078, 2748, 7519, 7520, 4563, 4998, 7521, 7522, 7523, // 7248\n7524, 4999, 4274, 7525, 4564, 3682, 2239, 4079, 4565, 7526, 7527, 7528, 7529, 5000, 7530, 7531, // 7264\n5001, 4275, 3794, 7532, 7533, 7534, 3066, 5002, 4566, 3161, 7535, 7536, 4080, 7537, 3162, 7538, // 7280\n7539, 4567, 7540, 7541, 7542, 7543, 7544, 7545, 5003, 7546, 4568, 7547, 7548, 7549, 7550, 7551, // 7296\n7552, 7553, 7554, 7555, 7556, 5004, 7557, 7558, 7559, 5005, 7560, 3795, 7561, 4569, 7562, 7563, // 7312\n7564, 2821, 3796, 4276, 4277, 4081, 7565, 2876, 7566, 5006, 7567, 7568, 2900, 7569, 3797, 3912, // 7328\n7570, 7571, 7572, 4278, 7573, 7574, 7575, 5007, 7576, 7577, 5008, 7578, 7579, 4279, 2934, 7580, // 7344\n7581, 5009, 7582, 4570, 7583, 4280, 7584, 7585, 7586, 4571, 4572, 3913, 7587, 4573, 3505, 7588, // 7360\n5010, 7589, 7590, 7591, 7592, 3798, 4574, 7593, 7594, 5011, 7595, 4281, 7596, 7597, 7598, 4282, // 7376\n5012, 7599, 7600, 5013, 3163, 7601, 5014, 7602, 3914, 7603, 7604, 2734, 4575, 4576, 4577, 7605, // 7392\n7606, 7607, 7608, 7609, 3506, 5015, 4578, 7610, 4082, 7611, 2822, 2901, 2579, 3683, 3024, 4579, // 7408\n3507, 7612, 4580, 7613, 3226, 3799, 5016, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 2995, 3290, // 7424\n7621, 4083, 7622, 5017, 7623, 7624, 7625, 7626, 7627, 4581, 3915, 7628, 3291, 7629, 5018, 7630, // 7440\n7631, 7632, 7633, 4084, 7634, 7635, 3427, 3800, 7636, 7637, 4582, 7638, 5019, 4583, 5020, 7639, // 7456\n3916, 7640, 3801, 5021, 4584, 4283, 7641, 7642, 3428, 3591, 2269, 7643, 2617, 7644, 4585, 3592, // 7472\n7645, 4586, 2902, 7646, 7647, 3227, 5022, 7648, 4587, 7649, 4284, 7650, 7651, 7652, 4588, 2284, // 7488\n7653, 5023, 7654, 7655, 7656, 4589, 5024, 3802, 7657, 7658, 5025, 3508, 4590, 7659, 7660, 7661, // 7504\n1969, 5026, 7662, 7663, 3684, 1821, 2688, 7664, 2028, 2509, 4285, 7665, 2823, 1841, 7666, 2689, // 7520\n3114, 7667, 3917, 4085, 2160, 5027, 5028, 2972, 7668, 5029, 7669, 7670, 7671, 3593, 4086, 7672, // 7536\n4591, 4087, 5030, 3803, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 4286, 2366, 4592, 4593, 3067, // 7552\n2328, 7680, 7681, 4594, 3594, 3918, 2029, 4287, 7682, 5031, 3919, 3370, 4288, 4595, 2856, 7683, // 7568\n3509, 7684, 7685, 5032, 5033, 7686, 7687, 3804, 2784, 7688, 7689, 7690, 7691, 3371, 7692, 7693, // 7584\n2877, 5034, 7694, 7695, 3920, 4289, 4088, 7696, 7697, 7698, 5035, 7699, 5036, 4290, 5037, 5038, // 7600\n5039, 7700, 7701, 7702, 5040, 5041, 3228, 7703, 1760, 7704, 5042, 3229, 4596, 2106, 4089, 7705, // 7616\n4597, 2824, 5043, 2107, 3372, 7706, 4291, 4090, 5044, 7707, 4091, 7708, 5045, 3025, 3805, 4598, // 7632\n4292, 4293, 4294, 3373, 7709, 4599, 7710, 5046, 7711, 7712, 5047, 5048, 3806, 7713, 7714, 7715, // 7648\n5049, 7716, 7717, 7718, 7719, 4600, 5050, 7720, 7721, 7722, 5051, 7723, 4295, 3429, 7724, 7725, // 7664\n7726, 7727, 3921, 7728, 3292, 5052, 4092, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 5053, 5054, // 7680\n7736, 7737, 7738, 7739, 3922, 3685, 7740, 7741, 7742, 7743, 2635, 5055, 7744, 5056, 4601, 7745, // 7696\n7746, 2560, 7747, 7748, 7749, 7750, 3923, 7751, 7752, 7753, 7754, 7755, 4296, 2903, 7756, 7757, // 7712\n7758, 7759, 7760, 3924, 7761, 5057, 4297, 7762, 7763, 5058, 4298, 7764, 4093, 7765, 7766, 5059, // 7728\n3925, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 3595, 7777, 4299, 5060, 4094, // 7744\n7778, 3293, 5061, 7779, 7780, 4300, 7781, 7782, 4602, 7783, 3596, 7784, 7785, 3430, 2367, 7786, // 7760\n3164, 5062, 5063, 4301, 7787, 7788, 4095, 5064, 5065, 7789, 3374, 3115, 7790, 7791, 7792, 7793, // 7776\n7794, 7795, 7796, 3597, 4603, 7797, 7798, 3686, 3116, 3807, 5066, 7799, 7800, 5067, 7801, 7802, // 7792\n4604, 4302, 5068, 4303, 4096, 7803, 7804, 3294, 7805, 7806, 5069, 4605, 2690, 7807, 3026, 7808, // 7808\n7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, // 7824\n7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, // 7840\n7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, // 7856\n7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, // 7872\n7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, // 7888\n7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, // 7904\n7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, // 7920\n7921, 7922, 7923, 7924, 3926, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, // 7936\n7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, // 7952\n7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 7961, 7962, 7963, 7964, 7965, 7966, 7967, // 7968\n7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, // 7984\n7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, // 8000\n8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, // 8016\n8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, // 8032\n8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, // 8048\n8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, // 8064\n8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, // 8080\n8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, // 8096\n8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, // 8112\n8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, // 8128\n8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, // 8144\n8144, 8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, // 8160\n8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, // 8176\n8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, // 8192\n8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, // 8208\n8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, // 8224\n8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, // 8240\n8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, // 8256\n8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271 // 8272\n];","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// EUCTW frequency table\n// Converted from big5 work\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Idea Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\nexports.EUCTW_TYPICAL_DISTRIBUTION_RATIO = 0.75; // Char to FreqOrder table ,\n\nexports.EUCTW_TABLE_SIZE = 8102;\nexports.EUCTWCharToFreqOrder = [1, 1800, 1506, 255, 1431, 198, 9, 82, 6, 7310, 177, 202, 3615, 1256, 2808, 110, // 2742\n3735, 33, 3241, 261, 76, 44, 2113, 16, 2931, 2184, 1176, 659, 3868, 26, 3404, 2643, // 2758\n1198, 3869, 3313, 4060, 410, 2211, 302, 590, 361, 1963, 8, 204, 58, 4296, 7311, 1931, // 2774\n63, 7312, 7313, 317, 1614, 75, 222, 159, 4061, 2412, 1480, 7314, 3500, 3068, 224, 2809, // 2790\n3616, 3, 10, 3870, 1471, 29, 2774, 1135, 2852, 1939, 873, 130, 3242, 1123, 312, 7315, // 2806\n4297, 2051, 507, 252, 682, 7316, 142, 1914, 124, 206, 2932, 34, 3501, 3173, 64, 604, // 2822\n7317, 2494, 1976, 1977, 155, 1990, 645, 641, 1606, 7318, 3405, 337, 72, 406, 7319, 80, // 2838\n630, 238, 3174, 1509, 263, 939, 1092, 2644, 756, 1440, 1094, 3406, 449, 69, 2969, 591, // 2854\n179, 2095, 471, 115, 2034, 1843, 60, 50, 2970, 134, 806, 1868, 734, 2035, 3407, 180, // 2870\n995, 1607, 156, 537, 2893, 688, 7320, 319, 1305, 779, 2144, 514, 2374, 298, 4298, 359, // 2886\n2495, 90, 2707, 1338, 663, 11, 906, 1099, 2545, 20, 2436, 182, 532, 1716, 7321, 732, // 2902\n1376, 4062, 1311, 1420, 3175, 25, 2312, 1056, 113, 399, 382, 1949, 242, 3408, 2467, 529, // 2918\n3243, 475, 1447, 3617, 7322, 117, 21, 656, 810, 1297, 2295, 2329, 3502, 7323, 126, 4063, // 2934\n706, 456, 150, 613, 4299, 71, 1118, 2036, 4064, 145, 3069, 85, 835, 486, 2114, 1246, // 2950\n1426, 428, 727, 1285, 1015, 800, 106, 623, 303, 1281, 7324, 2127, 2354, 347, 3736, 221, // 2966\n3503, 3110, 7325, 1955, 1153, 4065, 83, 296, 1199, 3070, 192, 624, 93, 7326, 822, 1897, // 2982\n2810, 3111, 795, 2064, 991, 1554, 1542, 1592, 27, 43, 2853, 859, 139, 1456, 860, 4300, // 2998\n437, 712, 3871, 164, 2392, 3112, 695, 211, 3017, 2096, 195, 3872, 1608, 3504, 3505, 3618, // 3014\n3873, 234, 811, 2971, 2097, 3874, 2229, 1441, 3506, 1615, 2375, 668, 2076, 1638, 305, 228, // 3030\n1664, 4301, 467, 415, 7327, 262, 2098, 1593, 239, 108, 300, 200, 1033, 512, 1247, 2077, // 3046\n7328, 7329, 2173, 3176, 3619, 2673, 593, 845, 1062, 3244, 88, 1723, 2037, 3875, 1950, 212, // 3062\n266, 152, 149, 468, 1898, 4066, 4302, 77, 187, 7330, 3018, 37, 5, 2972, 7331, 3876, // 3078\n7332, 7333, 39, 2517, 4303, 2894, 3177, 2078, 55, 148, 74, 4304, 545, 483, 1474, 1029, // 3094\n1665, 217, 1869, 1531, 3113, 1104, 2645, 4067, 24, 172, 3507, 900, 3877, 3508, 3509, 4305, // 3110\n32, 1408, 2811, 1312, 329, 487, 2355, 2247, 2708, 784, 2674, 4, 3019, 3314, 1427, 1788, // 3126\n188, 109, 499, 7334, 3620, 1717, 1789, 888, 1217, 3020, 4306, 7335, 3510, 7336, 3315, 1520, // 3142\n3621, 3878, 196, 1034, 775, 7337, 7338, 929, 1815, 249, 439, 38, 7339, 1063, 7340, 794, // 3158\n3879, 1435, 2296, 46, 178, 3245, 2065, 7341, 2376, 7342, 214, 1709, 4307, 804, 35, 707, // 3174\n324, 3622, 1601, 2546, 140, 459, 4068, 7343, 7344, 1365, 839, 272, 978, 2257, 2572, 3409, // 3190\n2128, 1363, 3623, 1423, 697, 100, 3071, 48, 70, 1231, 495, 3114, 2193, 7345, 1294, 7346, // 3206\n2079, 462, 586, 1042, 3246, 853, 256, 988, 185, 2377, 3410, 1698, 434, 1084, 7347, 3411, // 3222\n314, 2615, 2775, 4308, 2330, 2331, 569, 2280, 637, 1816, 2518, 757, 1162, 1878, 1616, 3412, // 3238\n287, 1577, 2115, 768, 4309, 1671, 2854, 3511, 2519, 1321, 3737, 909, 2413, 7348, 4069, 933, // 3254\n3738, 7349, 2052, 2356, 1222, 4310, 765, 2414, 1322, 786, 4311, 7350, 1919, 1462, 1677, 2895, // 3270\n1699, 7351, 4312, 1424, 2437, 3115, 3624, 2590, 3316, 1774, 1940, 3413, 3880, 4070, 309, 1369, // 3286\n1130, 2812, 364, 2230, 1653, 1299, 3881, 3512, 3882, 3883, 2646, 525, 1085, 3021, 902, 2000, // 3302\n1475, 964, 4313, 421, 1844, 1415, 1057, 2281, 940, 1364, 3116, 376, 4314, 4315, 1381, 7, // 3318\n2520, 983, 2378, 336, 1710, 2675, 1845, 321, 3414, 559, 1131, 3022, 2742, 1808, 1132, 1313, // 3334\n265, 1481, 1857, 7352, 352, 1203, 2813, 3247, 167, 1089, 420, 2814, 776, 792, 1724, 3513, // 3350\n4071, 2438, 3248, 7353, 4072, 7354, 446, 229, 333, 2743, 901, 3739, 1200, 1557, 4316, 2647, // 3366\n1920, 395, 2744, 2676, 3740, 4073, 1835, 125, 916, 3178, 2616, 4317, 7355, 7356, 3741, 7357, // 3382\n7358, 7359, 4318, 3117, 3625, 1133, 2547, 1757, 3415, 1510, 2313, 1409, 3514, 7360, 2145, 438, // 3398\n2591, 2896, 2379, 3317, 1068, 958, 3023, 461, 311, 2855, 2677, 4074, 1915, 3179, 4075, 1978, // 3414\n383, 750, 2745, 2617, 4076, 274, 539, 385, 1278, 1442, 7361, 1154, 1964, 384, 561, 210, // 3430\n98, 1295, 2548, 3515, 7362, 1711, 2415, 1482, 3416, 3884, 2897, 1257, 129, 7363, 3742, 642, // 3446\n523, 2776, 2777, 2648, 7364, 141, 2231, 1333, 68, 176, 441, 876, 907, 4077, 603, 2592, // 3462\n710, 171, 3417, 404, 549, 18, 3118, 2393, 1410, 3626, 1666, 7365, 3516, 4319, 2898, 4320, // 3478\n7366, 2973, 368, 7367, 146, 366, 99, 871, 3627, 1543, 748, 807, 1586, 1185, 22, 2258, // 3494\n379, 3743, 3180, 7368, 3181, 505, 1941, 2618, 1991, 1382, 2314, 7369, 380, 2357, 218, 702, // 3510\n1817, 1248, 3418, 3024, 3517, 3318, 3249, 7370, 2974, 3628, 930, 3250, 3744, 7371, 59, 7372, // 3526\n585, 601, 4078, 497, 3419, 1112, 1314, 4321, 1801, 7373, 1223, 1472, 2174, 7374, 749, 1836, // 3542\n690, 1899, 3745, 1772, 3885, 1476, 429, 1043, 1790, 2232, 2116, 917, 4079, 447, 1086, 1629, // 3558\n7375, 556, 7376, 7377, 2020, 1654, 844, 1090, 105, 550, 966, 1758, 2815, 1008, 1782, 686, // 3574\n1095, 7378, 2282, 793, 1602, 7379, 3518, 2593, 4322, 4080, 2933, 2297, 4323, 3746, 980, 2496, // 3590\n544, 353, 527, 4324, 908, 2678, 2899, 7380, 381, 2619, 1942, 1348, 7381, 1341, 1252, 560, // 3606\n3072, 7382, 3420, 2856, 7383, 2053, 973, 886, 2080, 143, 4325, 7384, 7385, 157, 3886, 496, // 3622\n4081, 57, 840, 540, 2038, 4326, 4327, 3421, 2117, 1445, 970, 2259, 1748, 1965, 2081, 4082, // 3638\n3119, 1234, 1775, 3251, 2816, 3629, 773, 1206, 2129, 1066, 2039, 1326, 3887, 1738, 1725, 4083, // 3654\n279, 3120, 51, 1544, 2594, 423, 1578, 2130, 2066, 173, 4328, 1879, 7386, 7387, 1583, 264, // 3670\n610, 3630, 4329, 2439, 280, 154, 7388, 7389, 7390, 1739, 338, 1282, 3073, 693, 2857, 1411, // 3686\n1074, 3747, 2440, 7391, 4330, 7392, 7393, 1240, 952, 2394, 7394, 2900, 1538, 2679, 685, 1483, // 3702\n4084, 2468, 1436, 953, 4085, 2054, 4331, 671, 2395, 79, 4086, 2441, 3252, 608, 567, 2680, // 3718\n3422, 4087, 4088, 1691, 393, 1261, 1791, 2396, 7395, 4332, 7396, 7397, 7398, 7399, 1383, 1672, // 3734\n3748, 3182, 1464, 522, 1119, 661, 1150, 216, 675, 4333, 3888, 1432, 3519, 609, 4334, 2681, // 3750\n2397, 7400, 7401, 7402, 4089, 3025, 0, 7403, 2469, 315, 231, 2442, 301, 3319, 4335, 2380, // 3766\n7404, 233, 4090, 3631, 1818, 4336, 4337, 7405, 96, 1776, 1315, 2082, 7406, 257, 7407, 1809, // 3782\n3632, 2709, 1139, 1819, 4091, 2021, 1124, 2163, 2778, 1777, 2649, 7408, 3074, 363, 1655, 3183, // 3798\n7409, 2975, 7410, 7411, 7412, 3889, 1567, 3890, 718, 103, 3184, 849, 1443, 341, 3320, 2934, // 3814\n1484, 7413, 1712, 127, 67, 339, 4092, 2398, 679, 1412, 821, 7414, 7415, 834, 738, 351, // 3830\n2976, 2146, 846, 235, 1497, 1880, 418, 1992, 3749, 2710, 186, 1100, 2147, 2746, 3520, 1545, // 3846\n1355, 2935, 2858, 1377, 583, 3891, 4093, 2573, 2977, 7416, 1298, 3633, 1078, 2549, 3634, 2358, // 3862\n78, 3750, 3751, 267, 1289, 2099, 2001, 1594, 4094, 348, 369, 1274, 2194, 2175, 1837, 4338, // 3878\n1820, 2817, 3635, 2747, 2283, 2002, 4339, 2936, 2748, 144, 3321, 882, 4340, 3892, 2749, 3423, // 3894\n4341, 2901, 7417, 4095, 1726, 320, 7418, 3893, 3026, 788, 2978, 7419, 2818, 1773, 1327, 2859, // 3910\n3894, 2819, 7420, 1306, 4342, 2003, 1700, 3752, 3521, 2359, 2650, 787, 2022, 506, 824, 3636, // 3926\n534, 323, 4343, 1044, 3322, 2023, 1900, 946, 3424, 7421, 1778, 1500, 1678, 7422, 1881, 4344, // 3942\n165, 243, 4345, 3637, 2521, 123, 683, 4096, 764, 4346, 36, 3895, 1792, 589, 2902, 816, // 3958\n626, 1667, 3027, 2233, 1639, 1555, 1622, 3753, 3896, 7423, 3897, 2860, 1370, 1228, 1932, 891, // 3974\n2083, 2903, 304, 4097, 7424, 292, 2979, 2711, 3522, 691, 2100, 4098, 1115, 4347, 118, 662, // 3990\n7425, 611, 1156, 854, 2381, 1316, 2861, 2, 386, 515, 2904, 7426, 7427, 3253, 868, 2234, // 4006\n1486, 855, 2651, 785, 2212, 3028, 7428, 1040, 3185, 3523, 7429, 3121, 448, 7430, 1525, 7431, // 4022\n2164, 4348, 7432, 3754, 7433, 4099, 2820, 3524, 3122, 503, 818, 3898, 3123, 1568, 814, 676, // 4038\n1444, 306, 1749, 7434, 3755, 1416, 1030, 197, 1428, 805, 2821, 1501, 4349, 7435, 7436, 7437, // 4054\n1993, 7438, 4350, 7439, 7440, 2195, 13, 2779, 3638, 2980, 3124, 1229, 1916, 7441, 3756, 2131, // 4070\n7442, 4100, 4351, 2399, 3525, 7443, 2213, 1511, 1727, 1120, 7444, 7445, 646, 3757, 2443, 307, // 4086\n7446, 7447, 1595, 3186, 7448, 7449, 7450, 3639, 1113, 1356, 3899, 1465, 2522, 2523, 7451, 519, // 4102\n7452, 128, 2132, 92, 2284, 1979, 7453, 3900, 1512, 342, 3125, 2196, 7454, 2780, 2214, 1980, // 4118\n3323, 7455, 290, 1656, 1317, 789, 827, 2360, 7456, 3758, 4352, 562, 581, 3901, 7457, 401, // 4134\n4353, 2248, 94, 4354, 1399, 2781, 7458, 1463, 2024, 4355, 3187, 1943, 7459, 828, 1105, 4101, // 4150\n1262, 1394, 7460, 4102, 605, 4356, 7461, 1783, 2862, 7462, 2822, 819, 2101, 578, 2197, 2937, // 4166\n7463, 1502, 436, 3254, 4103, 3255, 2823, 3902, 2905, 3425, 3426, 7464, 2712, 2315, 7465, 7466, // 4182\n2332, 2067, 23, 4357, 193, 826, 3759, 2102, 699, 1630, 4104, 3075, 390, 1793, 1064, 3526, // 4198\n7467, 1579, 3076, 3077, 1400, 7468, 4105, 1838, 1640, 2863, 7469, 4358, 4359, 137, 4106, 598, // 4214\n3078, 1966, 780, 104, 974, 2938, 7470, 278, 899, 253, 402, 572, 504, 493, 1339, 7471, // 4230\n3903, 1275, 4360, 2574, 2550, 7472, 3640, 3029, 3079, 2249, 565, 1334, 2713, 863, 41, 7473, // 4246\n7474, 4361, 7475, 1657, 2333, 19, 463, 2750, 4107, 606, 7476, 2981, 3256, 1087, 2084, 1323, // 4262\n2652, 2982, 7477, 1631, 1623, 1750, 4108, 2682, 7478, 2864, 791, 2714, 2653, 2334, 232, 2416, // 4278\n7479, 2983, 1498, 7480, 2654, 2620, 755, 1366, 3641, 3257, 3126, 2025, 1609, 119, 1917, 3427, // 4294\n862, 1026, 4109, 7481, 3904, 3760, 4362, 3905, 4363, 2260, 1951, 2470, 7482, 1125, 817, 4110, // 4310\n4111, 3906, 1513, 1766, 2040, 1487, 4112, 3030, 3258, 2824, 3761, 3127, 7483, 7484, 1507, 7485, // 4326\n2683, 733, 40, 1632, 1106, 2865, 345, 4113, 841, 2524, 230, 4364, 2984, 1846, 3259, 3428, // 4342\n7486, 1263, 986, 3429, 7487, 735, 879, 254, 1137, 857, 622, 1300, 1180, 1388, 1562, 3907, // 4358\n3908, 2939, 967, 2751, 2655, 1349, 592, 2133, 1692, 3324, 2985, 1994, 4114, 1679, 3909, 1901, // 4374\n2185, 7488, 739, 3642, 2715, 1296, 1290, 7489, 4115, 2198, 2199, 1921, 1563, 2595, 2551, 1870, // 4390\n2752, 2986, 7490, 435, 7491, 343, 1108, 596, 17, 1751, 4365, 2235, 3430, 3643, 7492, 4366, // 4406\n294, 3527, 2940, 1693, 477, 979, 281, 2041, 3528, 643, 2042, 3644, 2621, 2782, 2261, 1031, // 4422\n2335, 2134, 2298, 3529, 4367, 367, 1249, 2552, 7493, 3530, 7494, 4368, 1283, 3325, 2004, 240, // 4438\n1762, 3326, 4369, 4370, 836, 1069, 3128, 474, 7495, 2148, 2525, 268, 3531, 7496, 3188, 1521, // 4454\n1284, 7497, 1658, 1546, 4116, 7498, 3532, 3533, 7499, 4117, 3327, 2684, 1685, 4118, 961, 1673, // 4470\n2622, 190, 2005, 2200, 3762, 4371, 4372, 7500, 570, 2497, 3645, 1490, 7501, 4373, 2623, 3260, // 4486\n1956, 4374, 584, 1514, 396, 1045, 1944, 7502, 4375, 1967, 2444, 7503, 7504, 4376, 3910, 619, // 4502\n7505, 3129, 3261, 215, 2006, 2783, 2553, 3189, 4377, 3190, 4378, 763, 4119, 3763, 4379, 7506, // 4518\n7507, 1957, 1767, 2941, 3328, 3646, 1174, 452, 1477, 4380, 3329, 3130, 7508, 2825, 1253, 2382, // 4534\n2186, 1091, 2285, 4120, 492, 7509, 638, 1169, 1824, 2135, 1752, 3911, 648, 926, 1021, 1324, // 4550\n4381, 520, 4382, 997, 847, 1007, 892, 4383, 3764, 2262, 1871, 3647, 7510, 2400, 1784, 4384, // 4566\n1952, 2942, 3080, 3191, 1728, 4121, 2043, 3648, 4385, 2007, 1701, 3131, 1551, 30, 2263, 4122, // 4582\n7511, 2026, 4386, 3534, 7512, 501, 7513, 4123, 594, 3431, 2165, 1821, 3535, 3432, 3536, 3192, // 4598\n829, 2826, 4124, 7514, 1680, 3132, 1225, 4125, 7515, 3262, 4387, 4126, 3133, 2336, 7516, 4388, // 4614\n4127, 7517, 3912, 3913, 7518, 1847, 2383, 2596, 3330, 7519, 4389, 374, 3914, 652, 4128, 4129, // 4630\n375, 1140, 798, 7520, 7521, 7522, 2361, 4390, 2264, 546, 1659, 138, 3031, 2445, 4391, 7523, // 4646\n2250, 612, 1848, 910, 796, 3765, 1740, 1371, 825, 3766, 3767, 7524, 2906, 2554, 7525, 692, // 4662\n444, 3032, 2624, 801, 4392, 4130, 7526, 1491, 244, 1053, 3033, 4131, 4132, 340, 7527, 3915, // 4678\n1041, 2987, 293, 1168, 87, 1357, 7528, 1539, 959, 7529, 2236, 721, 694, 4133, 3768, 219, // 4694\n1478, 644, 1417, 3331, 2656, 1413, 1401, 1335, 1389, 3916, 7530, 7531, 2988, 2362, 3134, 1825, // 4710\n730, 1515, 184, 2827, 66, 4393, 7532, 1660, 2943, 246, 3332, 378, 1457, 226, 3433, 975, // 4726\n3917, 2944, 1264, 3537, 674, 696, 7533, 163, 7534, 1141, 2417, 2166, 713, 3538, 3333, 4394, // 4742\n3918, 7535, 7536, 1186, 15, 7537, 1079, 1070, 7538, 1522, 3193, 3539, 276, 1050, 2716, 758, // 4758\n1126, 653, 2945, 3263, 7539, 2337, 889, 3540, 3919, 3081, 2989, 903, 1250, 4395, 3920, 3434, // 4774\n3541, 1342, 1681, 1718, 766, 3264, 286, 89, 2946, 3649, 7540, 1713, 7541, 2597, 3334, 2990, // 4790\n7542, 2947, 2215, 3194, 2866, 7543, 4396, 2498, 2526, 181, 387, 1075, 3921, 731, 2187, 3335, // 4806\n7544, 3265, 310, 313, 3435, 2299, 770, 4134, 54, 3034, 189, 4397, 3082, 3769, 3922, 7545, // 4822\n1230, 1617, 1849, 355, 3542, 4135, 4398, 3336, 111, 4136, 3650, 1350, 3135, 3436, 3035, 4137, // 4838\n2149, 3266, 3543, 7546, 2784, 3923, 3924, 2991, 722, 2008, 7547, 1071, 247, 1207, 2338, 2471, // 4854\n1378, 4399, 2009, 864, 1437, 1214, 4400, 373, 3770, 1142, 2216, 667, 4401, 442, 2753, 2555, // 4870\n3771, 3925, 1968, 4138, 3267, 1839, 837, 170, 1107, 934, 1336, 1882, 7548, 7549, 2118, 4139, // 4886\n2828, 743, 1569, 7550, 4402, 4140, 582, 2384, 1418, 3437, 7551, 1802, 7552, 357, 1395, 1729, // 4902\n3651, 3268, 2418, 1564, 2237, 7553, 3083, 3772, 1633, 4403, 1114, 2085, 4141, 1532, 7554, 482, // 4918\n2446, 4404, 7555, 7556, 1492, 833, 1466, 7557, 2717, 3544, 1641, 2829, 7558, 1526, 1272, 3652, // 4934\n4142, 1686, 1794, 416, 2556, 1902, 1953, 1803, 7559, 3773, 2785, 3774, 1159, 2316, 7560, 2867, // 4950\n4405, 1610, 1584, 3036, 2419, 2754, 443, 3269, 1163, 3136, 7561, 7562, 3926, 7563, 4143, 2499, // 4966\n3037, 4406, 3927, 3137, 2103, 1647, 3545, 2010, 1872, 4144, 7564, 4145, 431, 3438, 7565, 250, // 4982\n97, 81, 4146, 7566, 1648, 1850, 1558, 160, 848, 7567, 866, 740, 1694, 7568, 2201, 2830, // 4998\n3195, 4147, 4407, 3653, 1687, 950, 2472, 426, 469, 3196, 3654, 3655, 3928, 7569, 7570, 1188, // 5014\n424, 1995, 861, 3546, 4148, 3775, 2202, 2685, 168, 1235, 3547, 4149, 7571, 2086, 1674, 4408, // 5030\n3337, 3270, 220, 2557, 1009, 7572, 3776, 670, 2992, 332, 1208, 717, 7573, 7574, 3548, 2447, // 5046\n3929, 3338, 7575, 513, 7576, 1209, 2868, 3339, 3138, 4409, 1080, 7577, 7578, 7579, 7580, 2527, // 5062\n3656, 3549, 815, 1587, 3930, 3931, 7581, 3550, 3439, 3777, 1254, 4410, 1328, 3038, 1390, 3932, // 5078\n1741, 3933, 3778, 3934, 7582, 236, 3779, 2448, 3271, 7583, 7584, 3657, 3780, 1273, 3781, 4411, // 5094\n7585, 308, 7586, 4412, 245, 4413, 1851, 2473, 1307, 2575, 430, 715, 2136, 2449, 7587, 270, // 5110\n199, 2869, 3935, 7588, 3551, 2718, 1753, 761, 1754, 725, 1661, 1840, 4414, 3440, 3658, 7589, // 5126\n7590, 587, 14, 3272, 227, 2598, 326, 480, 2265, 943, 2755, 3552, 291, 650, 1883, 7591, // 5142\n1702, 1226, 102, 1547, 62, 3441, 904, 4415, 3442, 1164, 4150, 7592, 7593, 1224, 1548, 2756, // 5158\n391, 498, 1493, 7594, 1386, 1419, 7595, 2055, 1177, 4416, 813, 880, 1081, 2363, 566, 1145, // 5174\n4417, 2286, 1001, 1035, 2558, 2599, 2238, 394, 1286, 7596, 7597, 2068, 7598, 86, 1494, 1730, // 5190\n3936, 491, 1588, 745, 897, 2948, 843, 3340, 3937, 2757, 2870, 3273, 1768, 998, 2217, 2069, // 5206\n397, 1826, 1195, 1969, 3659, 2993, 3341, 284, 7599, 3782, 2500, 2137, 2119, 1903, 7600, 3938, // 5222\n2150, 3939, 4151, 1036, 3443, 1904, 114, 2559, 4152, 209, 1527, 7601, 7602, 2949, 2831, 2625, // 5238\n2385, 2719, 3139, 812, 2560, 7603, 3274, 7604, 1559, 737, 1884, 3660, 1210, 885, 28, 2686, // 5254\n3553, 3783, 7605, 4153, 1004, 1779, 4418, 7606, 346, 1981, 2218, 2687, 4419, 3784, 1742, 797, // 5270\n1642, 3940, 1933, 1072, 1384, 2151, 896, 3941, 3275, 3661, 3197, 2871, 3554, 7607, 2561, 1958, // 5286\n4420, 2450, 1785, 7608, 7609, 7610, 3942, 4154, 1005, 1308, 3662, 4155, 2720, 4421, 4422, 1528, // 5302\n2600, 161, 1178, 4156, 1982, 987, 4423, 1101, 4157, 631, 3943, 1157, 3198, 2420, 1343, 1241, // 5318\n1016, 2239, 2562, 372, 877, 2339, 2501, 1160, 555, 1934, 911, 3944, 7611, 466, 1170, 169, // 5334\n1051, 2907, 2688, 3663, 2474, 2994, 1182, 2011, 2563, 1251, 2626, 7612, 992, 2340, 3444, 1540, // 5350\n2721, 1201, 2070, 2401, 1996, 2475, 7613, 4424, 528, 1922, 2188, 1503, 1873, 1570, 2364, 3342, // 5366\n3276, 7614, 557, 1073, 7615, 1827, 3445, 2087, 2266, 3140, 3039, 3084, 767, 3085, 2786, 4425, // 5382\n1006, 4158, 4426, 2341, 1267, 2176, 3664, 3199, 778, 3945, 3200, 2722, 1597, 2657, 7616, 4427, // 5398\n7617, 3446, 7618, 7619, 7620, 3277, 2689, 1433, 3278, 131, 95, 1504, 3946, 723, 4159, 3141, // 5414\n1841, 3555, 2758, 2189, 3947, 2027, 2104, 3665, 7621, 2995, 3948, 1218, 7622, 3343, 3201, 3949, // 5430\n4160, 2576, 248, 1634, 3785, 912, 7623, 2832, 3666, 3040, 3786, 654, 53, 7624, 2996, 7625, // 5446\n1688, 4428, 777, 3447, 1032, 3950, 1425, 7626, 191, 820, 2120, 2833, 971, 4429, 931, 3202, // 5462\n135, 664, 783, 3787, 1997, 772, 2908, 1935, 3951, 3788, 4430, 2909, 3203, 282, 2723, 640, // 5478\n1372, 3448, 1127, 922, 325, 3344, 7627, 7628, 711, 2044, 7629, 7630, 3952, 2219, 2787, 1936, // 5494\n3953, 3345, 2220, 2251, 3789, 2300, 7631, 4431, 3790, 1258, 3279, 3954, 3204, 2138, 2950, 3955, // 5510\n3956, 7632, 2221, 258, 3205, 4432, 101, 1227, 7633, 3280, 1755, 7634, 1391, 3281, 7635, 2910, // 5526\n2056, 893, 7636, 7637, 7638, 1402, 4161, 2342, 7639, 7640, 3206, 3556, 7641, 7642, 878, 1325, // 5542\n1780, 2788, 4433, 259, 1385, 2577, 744, 1183, 2267, 4434, 7643, 3957, 2502, 7644, 684, 1024, // 5558\n4162, 7645, 472, 3557, 3449, 1165, 3282, 3958, 3959, 322, 2152, 881, 455, 1695, 1152, 1340, // 5574\n660, 554, 2153, 4435, 1058, 4436, 4163, 830, 1065, 3346, 3960, 4437, 1923, 7646, 1703, 1918, // 5590\n7647, 932, 2268, 122, 7648, 4438, 947, 677, 7649, 3791, 2627, 297, 1905, 1924, 2269, 4439, // 5606\n2317, 3283, 7650, 7651, 4164, 7652, 4165, 84, 4166, 112, 989, 7653, 547, 1059, 3961, 701, // 5622\n3558, 1019, 7654, 4167, 7655, 3450, 942, 639, 457, 2301, 2451, 993, 2951, 407, 851, 494, // 5638\n4440, 3347, 927, 7656, 1237, 7657, 2421, 3348, 573, 4168, 680, 921, 2911, 1279, 1874, 285, // 5654\n790, 1448, 1983, 719, 2167, 7658, 7659, 4441, 3962, 3963, 1649, 7660, 1541, 563, 7661, 1077, // 5670\n7662, 3349, 3041, 3451, 511, 2997, 3964, 3965, 3667, 3966, 1268, 2564, 3350, 3207, 4442, 4443, // 5686\n7663, 535, 1048, 1276, 1189, 2912, 2028, 3142, 1438, 1373, 2834, 2952, 1134, 2012, 7664, 4169, // 5702\n1238, 2578, 3086, 1259, 7665, 700, 7666, 2953, 3143, 3668, 4170, 7667, 4171, 1146, 1875, 1906, // 5718\n4444, 2601, 3967, 781, 2422, 132, 1589, 203, 147, 273, 2789, 2402, 898, 1786, 2154, 3968, // 5734\n3969, 7668, 3792, 2790, 7669, 7670, 4445, 4446, 7671, 3208, 7672, 1635, 3793, 965, 7673, 1804, // 5750\n2690, 1516, 3559, 1121, 1082, 1329, 3284, 3970, 1449, 3794, 65, 1128, 2835, 2913, 2759, 1590, // 5766\n3795, 7674, 7675, 12, 2658, 45, 976, 2579, 3144, 4447, 517, 2528, 1013, 1037, 3209, 7676, // 5782\n3796, 2836, 7677, 3797, 7678, 3452, 7679, 2602, 614, 1998, 2318, 3798, 3087, 2724, 2628, 7680, // 5798\n2580, 4172, 599, 1269, 7681, 1810, 3669, 7682, 2691, 3088, 759, 1060, 489, 1805, 3351, 3285, // 5814\n1358, 7683, 7684, 2386, 1387, 1215, 2629, 2252, 490, 7685, 7686, 4173, 1759, 2387, 2343, 7687, // 5830\n4448, 3799, 1907, 3971, 2630, 1806, 3210, 4449, 3453, 3286, 2760, 2344, 874, 7688, 7689, 3454, // 5846\n3670, 1858, 91, 2914, 3671, 3042, 3800, 4450, 7690, 3145, 3972, 2659, 7691, 3455, 1202, 1403, // 5862\n3801, 2954, 2529, 1517, 2503, 4451, 3456, 2504, 7692, 4452, 7693, 2692, 1885, 1495, 1731, 3973, // 5878\n2365, 4453, 7694, 2029, 7695, 7696, 3974, 2693, 1216, 237, 2581, 4174, 2319, 3975, 3802, 4454, // 5894\n4455, 2694, 3560, 3457, 445, 4456, 7697, 7698, 7699, 7700, 2761, 61, 3976, 3672, 1822, 3977, // 5910\n7701, 687, 2045, 935, 925, 405, 2660, 703, 1096, 1859, 2725, 4457, 3978, 1876, 1367, 2695, // 5926\n3352, 918, 2105, 1781, 2476, 334, 3287, 1611, 1093, 4458, 564, 3146, 3458, 3673, 3353, 945, // 5942\n2631, 2057, 4459, 7702, 1925, 872, 4175, 7703, 3459, 2696, 3089, 349, 4176, 3674, 3979, 4460, // 5958\n3803, 4177, 3675, 2155, 3980, 4461, 4462, 4178, 4463, 2403, 2046, 782, 3981, 400, 251, 4179, // 5974\n1624, 7704, 7705, 277, 3676, 299, 1265, 476, 1191, 3804, 2121, 4180, 4181, 1109, 205, 7706, // 5990\n2582, 1000, 2156, 3561, 1860, 7707, 7708, 7709, 4464, 7710, 4465, 2565, 107, 2477, 2157, 3982, // 6006\n3460, 3147, 7711, 1533, 541, 1301, 158, 753, 4182, 2872, 3562, 7712, 1696, 370, 1088, 4183, // 6022\n4466, 3563, 579, 327, 440, 162, 2240, 269, 1937, 1374, 3461, 968, 3043, 56, 1396, 3090, // 6038\n2106, 3288, 3354, 7713, 1926, 2158, 4467, 2998, 7714, 3564, 7715, 7716, 3677, 4468, 2478, 7717, // 6054\n2791, 7718, 1650, 4469, 7719, 2603, 7720, 7721, 3983, 2661, 3355, 1149, 3356, 3984, 3805, 3985, // 6070\n7722, 1076, 49, 7723, 951, 3211, 3289, 3290, 450, 2837, 920, 7724, 1811, 2792, 2366, 4184, // 6086\n1908, 1138, 2367, 3806, 3462, 7725, 3212, 4470, 1909, 1147, 1518, 2423, 4471, 3807, 7726, 4472, // 6102\n2388, 2604, 260, 1795, 3213, 7727, 7728, 3808, 3291, 708, 7729, 3565, 1704, 7730, 3566, 1351, // 6118\n1618, 3357, 2999, 1886, 944, 4185, 3358, 4186, 3044, 3359, 4187, 7731, 3678, 422, 413, 1714, // 6134\n3292, 500, 2058, 2345, 4188, 2479, 7732, 1344, 1910, 954, 7733, 1668, 7734, 7735, 3986, 2404, // 6150\n4189, 3567, 3809, 4190, 7736, 2302, 1318, 2505, 3091, 133, 3092, 2873, 4473, 629, 31, 2838, // 6166\n2697, 3810, 4474, 850, 949, 4475, 3987, 2955, 1732, 2088, 4191, 1496, 1852, 7737, 3988, 620, // 6182\n3214, 981, 1242, 3679, 3360, 1619, 3680, 1643, 3293, 2139, 2452, 1970, 1719, 3463, 2168, 7738, // 6198\n3215, 7739, 7740, 3361, 1828, 7741, 1277, 4476, 1565, 2047, 7742, 1636, 3568, 3093, 7743, 869, // 6214\n2839, 655, 3811, 3812, 3094, 3989, 3000, 3813, 1310, 3569, 4477, 7744, 7745, 7746, 1733, 558, // 6230\n4478, 3681, 335, 1549, 3045, 1756, 4192, 3682, 1945, 3464, 1829, 1291, 1192, 470, 2726, 2107, // 6246\n2793, 913, 1054, 3990, 7747, 1027, 7748, 3046, 3991, 4479, 982, 2662, 3362, 3148, 3465, 3216, // 6262\n3217, 1946, 2794, 7749, 571, 4480, 7750, 1830, 7751, 3570, 2583, 1523, 2424, 7752, 2089, 984, // 6278\n4481, 3683, 1959, 7753, 3684, 852, 923, 2795, 3466, 3685, 969, 1519, 999, 2048, 2320, 1705, // 6294\n7754, 3095, 615, 1662, 151, 597, 3992, 2405, 2321, 1049, 275, 4482, 3686, 4193, 568, 3687, // 6310\n3571, 2480, 4194, 3688, 7755, 2425, 2270, 409, 3218, 7756, 1566, 2874, 3467, 1002, 769, 2840, // 6326\n194, 2090, 3149, 3689, 2222, 3294, 4195, 628, 1505, 7757, 7758, 1763, 2177, 3001, 3993, 521, // 6342\n1161, 2584, 1787, 2203, 2406, 4483, 3994, 1625, 4196, 4197, 412, 42, 3096, 464, 7759, 2632, // 6358\n4484, 3363, 1760, 1571, 2875, 3468, 2530, 1219, 2204, 3814, 2633, 2140, 2368, 4485, 4486, 3295, // 6374\n1651, 3364, 3572, 7760, 7761, 3573, 2481, 3469, 7762, 3690, 7763, 7764, 2271, 2091, 460, 7765, // 6390\n4487, 7766, 3002, 962, 588, 3574, 289, 3219, 2634, 1116, 52, 7767, 3047, 1796, 7768, 7769, // 6406\n7770, 1467, 7771, 1598, 1143, 3691, 4198, 1984, 1734, 1067, 4488, 1280, 3365, 465, 4489, 1572, // 6422\n510, 7772, 1927, 2241, 1812, 1644, 3575, 7773, 4490, 3692, 7774, 7775, 2663, 1573, 1534, 7776, // 6438\n7777, 4199, 536, 1807, 1761, 3470, 3815, 3150, 2635, 7778, 7779, 7780, 4491, 3471, 2915, 1911, // 6454\n2796, 7781, 3296, 1122, 377, 3220, 7782, 360, 7783, 7784, 4200, 1529, 551, 7785, 2059, 3693, // 6470\n1769, 2426, 7786, 2916, 4201, 3297, 3097, 2322, 2108, 2030, 4492, 1404, 136, 1468, 1479, 672, // 6486\n1171, 3221, 2303, 271, 3151, 7787, 2762, 7788, 2049, 678, 2727, 865, 1947, 4493, 7789, 2013, // 6502\n3995, 2956, 7790, 2728, 2223, 1397, 3048, 3694, 4494, 4495, 1735, 2917, 3366, 3576, 7791, 3816, // 6518\n509, 2841, 2453, 2876, 3817, 7792, 7793, 3152, 3153, 4496, 4202, 2531, 4497, 2304, 1166, 1010, // 6534\n552, 681, 1887, 7794, 7795, 2957, 2958, 3996, 1287, 1596, 1861, 3154, 358, 453, 736, 175, // 6550\n478, 1117, 905, 1167, 1097, 7796, 1853, 1530, 7797, 1706, 7798, 2178, 3472, 2287, 3695, 3473, // 6566\n3577, 4203, 2092, 4204, 7799, 3367, 1193, 2482, 4205, 1458, 2190, 2205, 1862, 1888, 1421, 3298, // 6582\n2918, 3049, 2179, 3474, 595, 2122, 7800, 3997, 7801, 7802, 4206, 1707, 2636, 223, 3696, 1359, // 6598\n751, 3098, 183, 3475, 7803, 2797, 3003, 419, 2369, 633, 704, 3818, 2389, 241, 7804, 7805, // 6614\n7806, 838, 3004, 3697, 2272, 2763, 2454, 3819, 1938, 2050, 3998, 1309, 3099, 2242, 1181, 7807, // 6630\n1136, 2206, 3820, 2370, 1446, 4207, 2305, 4498, 7808, 7809, 4208, 1055, 2605, 484, 3698, 7810, // 6646\n3999, 625, 4209, 2273, 3368, 1499, 4210, 4000, 7811, 4001, 4211, 3222, 2274, 2275, 3476, 7812, // 6662\n7813, 2764, 808, 2606, 3699, 3369, 4002, 4212, 3100, 2532, 526, 3370, 3821, 4213, 955, 7814, // 6678\n1620, 4214, 2637, 2427, 7815, 1429, 3700, 1669, 1831, 994, 928, 7816, 3578, 1260, 7817, 7818, // 6694\n7819, 1948, 2288, 741, 2919, 1626, 4215, 2729, 2455, 867, 1184, 362, 3371, 1392, 7820, 7821, // 6710\n4003, 4216, 1770, 1736, 3223, 2920, 4499, 4500, 1928, 2698, 1459, 1158, 7822, 3050, 3372, 2877, // 6726\n1292, 1929, 2506, 2842, 3701, 1985, 1187, 2071, 2014, 2607, 4217, 7823, 2566, 2507, 2169, 3702, // 6742\n2483, 3299, 7824, 3703, 4501, 7825, 7826, 666, 1003, 3005, 1022, 3579, 4218, 7827, 4502, 1813, // 6758\n2253, 574, 3822, 1603, 295, 1535, 705, 3823, 4219, 283, 858, 417, 7828, 7829, 3224, 4503, // 6774\n4504, 3051, 1220, 1889, 1046, 2276, 2456, 4004, 1393, 1599, 689, 2567, 388, 4220, 7830, 2484, // 6790\n802, 7831, 2798, 3824, 2060, 1405, 2254, 7832, 4505, 3825, 2109, 1052, 1345, 3225, 1585, 7833, // 6806\n809, 7834, 7835, 7836, 575, 2730, 3477, 956, 1552, 1469, 1144, 2323, 7837, 2324, 1560, 2457, // 6822\n3580, 3226, 4005, 616, 2207, 3155, 2180, 2289, 7838, 1832, 7839, 3478, 4506, 7840, 1319, 3704, // 6838\n3705, 1211, 3581, 1023, 3227, 1293, 2799, 7841, 7842, 7843, 3826, 607, 2306, 3827, 762, 2878, // 6854\n1439, 4221, 1360, 7844, 1485, 3052, 7845, 4507, 1038, 4222, 1450, 2061, 2638, 4223, 1379, 4508, // 6870\n2585, 7846, 7847, 4224, 1352, 1414, 2325, 2921, 1172, 7848, 7849, 3828, 3829, 7850, 1797, 1451, // 6886\n7851, 7852, 7853, 7854, 2922, 4006, 4007, 2485, 2346, 411, 4008, 4009, 3582, 3300, 3101, 4509, // 6902\n1561, 2664, 1452, 4010, 1375, 7855, 7856, 47, 2959, 316, 7857, 1406, 1591, 2923, 3156, 7858, // 6918\n1025, 2141, 3102, 3157, 354, 2731, 884, 2224, 4225, 2407, 508, 3706, 726, 3583, 996, 2428, // 6934\n3584, 729, 7859, 392, 2191, 1453, 4011, 4510, 3707, 7860, 7861, 2458, 3585, 2608, 1675, 2800, // 6950\n919, 2347, 2960, 2348, 1270, 4511, 4012, 73, 7862, 7863, 647, 7864, 3228, 2843, 2255, 1550, // 6966\n1346, 3006, 7865, 1332, 883, 3479, 7866, 7867, 7868, 7869, 3301, 2765, 7870, 1212, 831, 1347, // 6982\n4226, 4512, 2326, 3830, 1863, 3053, 720, 3831, 4513, 4514, 3832, 7871, 4227, 7872, 7873, 4515, // 6998\n7874, 7875, 1798, 4516, 3708, 2609, 4517, 3586, 1645, 2371, 7876, 7877, 2924, 669, 2208, 2665, // 7014\n2429, 7878, 2879, 7879, 7880, 1028, 3229, 7881, 4228, 2408, 7882, 2256, 1353, 7883, 7884, 4518, // 7030\n3158, 518, 7885, 4013, 7886, 4229, 1960, 7887, 2142, 4230, 7888, 7889, 3007, 2349, 2350, 3833, // 7046\n516, 1833, 1454, 4014, 2699, 4231, 4519, 2225, 2610, 1971, 1129, 3587, 7890, 2766, 7891, 2961, // 7062\n1422, 577, 1470, 3008, 1524, 3373, 7892, 7893, 432, 4232, 3054, 3480, 7894, 2586, 1455, 2508, // 7078\n2226, 1972, 1175, 7895, 1020, 2732, 4015, 3481, 4520, 7896, 2733, 7897, 1743, 1361, 3055, 3482, // 7094\n2639, 4016, 4233, 4521, 2290, 895, 924, 4234, 2170, 331, 2243, 3056, 166, 1627, 3057, 1098, // 7110\n7898, 1232, 2880, 2227, 3374, 4522, 657, 403, 1196, 2372, 542, 3709, 3375, 1600, 4235, 3483, // 7126\n7899, 4523, 2767, 3230, 576, 530, 1362, 7900, 4524, 2533, 2666, 3710, 4017, 7901, 842, 3834, // 7142\n7902, 2801, 2031, 1014, 4018, 213, 2700, 3376, 665, 621, 4236, 7903, 3711, 2925, 2430, 7904, // 7158\n2431, 3302, 3588, 3377, 7905, 4237, 2534, 4238, 4525, 3589, 1682, 4239, 3484, 1380, 7906, 724, // 7174\n2277, 600, 1670, 7907, 1337, 1233, 4526, 3103, 2244, 7908, 1621, 4527, 7909, 651, 4240, 7910, // 7190\n1612, 4241, 2611, 7911, 2844, 7912, 2734, 2307, 3058, 7913, 716, 2459, 3059, 174, 1255, 2701, // 7206\n4019, 3590, 548, 1320, 1398, 728, 4020, 1574, 7914, 1890, 1197, 3060, 4021, 7915, 3061, 3062, // 7222\n3712, 3591, 3713, 747, 7916, 635, 4242, 4528, 7917, 7918, 7919, 4243, 7920, 7921, 4529, 7922, // 7238\n3378, 4530, 2432, 451, 7923, 3714, 2535, 2072, 4244, 2735, 4245, 4022, 7924, 1764, 4531, 7925, // 7254\n4246, 350, 7926, 2278, 2390, 2486, 7927, 4247, 4023, 2245, 1434, 4024, 488, 4532, 458, 4248, // 7270\n4025, 3715, 771, 1330, 2391, 3835, 2568, 3159, 2159, 2409, 1553, 2667, 3160, 4249, 7928, 2487, // 7286\n2881, 2612, 1720, 2702, 4250, 3379, 4533, 7929, 2536, 4251, 7930, 3231, 4252, 2768, 7931, 2015, // 7302\n2736, 7932, 1155, 1017, 3716, 3836, 7933, 3303, 2308, 201, 1864, 4253, 1430, 7934, 4026, 7935, // 7318\n7936, 7937, 7938, 7939, 4254, 1604, 7940, 414, 1865, 371, 2587, 4534, 4535, 3485, 2016, 3104, // 7334\n4536, 1708, 960, 4255, 887, 389, 2171, 1536, 1663, 1721, 7941, 2228, 4027, 2351, 2926, 1580, // 7350\n7942, 7943, 7944, 1744, 7945, 2537, 4537, 4538, 7946, 4539, 7947, 2073, 7948, 7949, 3592, 3380, // 7366\n2882, 4256, 7950, 4257, 2640, 3381, 2802, 673, 2703, 2460, 709, 3486, 4028, 3593, 4258, 7951, // 7382\n1148, 502, 634, 7952, 7953, 1204, 4540, 3594, 1575, 4541, 2613, 3717, 7954, 3718, 3105, 948, // 7398\n3232, 121, 1745, 3837, 1110, 7955, 4259, 3063, 2509, 3009, 4029, 3719, 1151, 1771, 3838, 1488, // 7414\n4030, 1986, 7956, 2433, 3487, 7957, 7958, 2093, 7959, 4260, 3839, 1213, 1407, 2803, 531, 2737, // 7430\n2538, 3233, 1011, 1537, 7960, 2769, 4261, 3106, 1061, 7961, 3720, 3721, 1866, 2883, 7962, 2017, // 7446\n120, 4262, 4263, 2062, 3595, 3234, 2309, 3840, 2668, 3382, 1954, 4542, 7963, 7964, 3488, 1047, // 7462\n2704, 1266, 7965, 1368, 4543, 2845, 649, 3383, 3841, 2539, 2738, 1102, 2846, 2669, 7966, 7967, // 7478\n1999, 7968, 1111, 3596, 2962, 7969, 2488, 3842, 3597, 2804, 1854, 3384, 3722, 7970, 7971, 3385, // 7494\n2410, 2884, 3304, 3235, 3598, 7972, 2569, 7973, 3599, 2805, 4031, 1460, 856, 7974, 3600, 7975, // 7510\n2885, 2963, 7976, 2886, 3843, 7977, 4264, 632, 2510, 875, 3844, 1697, 3845, 2291, 7978, 7979, // 7526\n4544, 3010, 1239, 580, 4545, 4265, 7980, 914, 936, 2074, 1190, 4032, 1039, 2123, 7981, 7982, // 7542\n7983, 3386, 1473, 7984, 1354, 4266, 3846, 7985, 2172, 3064, 4033, 915, 3305, 4267, 4268, 3306, // 7558\n1605, 1834, 7986, 2739, 398, 3601, 4269, 3847, 4034, 328, 1912, 2847, 4035, 3848, 1331, 4270, // 7574\n3011, 937, 4271, 7987, 3602, 4036, 4037, 3387, 2160, 4546, 3388, 524, 742, 538, 3065, 1012, // 7590\n7988, 7989, 3849, 2461, 7990, 658, 1103, 225, 3850, 7991, 7992, 4547, 7993, 4548, 7994, 3236, // 7606\n1243, 7995, 4038, 963, 2246, 4549, 7996, 2705, 3603, 3161, 7997, 7998, 2588, 2327, 7999, 4550, // 7622\n8000, 8001, 8002, 3489, 3307, 957, 3389, 2540, 2032, 1930, 2927, 2462, 870, 2018, 3604, 1746, // 7638\n2770, 2771, 2434, 2463, 8003, 3851, 8004, 3723, 3107, 3724, 3490, 3390, 3725, 8005, 1179, 3066, // 7654\n8006, 3162, 2373, 4272, 3726, 2541, 3163, 3108, 2740, 4039, 8007, 3391, 1556, 2542, 2292, 977, // 7670\n2887, 2033, 4040, 1205, 3392, 8008, 1765, 3393, 3164, 2124, 1271, 1689, 714, 4551, 3491, 8009, // 7686\n2328, 3852, 533, 4273, 3605, 2181, 617, 8010, 2464, 3308, 3492, 2310, 8011, 8012, 3165, 8013, // 7702\n8014, 3853, 1987, 618, 427, 2641, 3493, 3394, 8015, 8016, 1244, 1690, 8017, 2806, 4274, 4552, // 7718\n8018, 3494, 8019, 8020, 2279, 1576, 473, 3606, 4275, 3395, 972, 8021, 3607, 8022, 3067, 8023, // 7734\n8024, 4553, 4554, 8025, 3727, 4041, 4042, 8026, 153, 4555, 356, 8027, 1891, 2888, 4276, 2143, // 7750\n408, 803, 2352, 8028, 3854, 8029, 4277, 1646, 2570, 2511, 4556, 4557, 3855, 8030, 3856, 4278, // 7766\n8031, 2411, 3396, 752, 8032, 8033, 1961, 2964, 8034, 746, 3012, 2465, 8035, 4279, 3728, 698, // 7782\n4558, 1892, 4280, 3608, 2543, 4559, 3609, 3857, 8036, 3166, 3397, 8037, 1823, 1302, 4043, 2706, // 7798\n3858, 1973, 4281, 8038, 4282, 3167, 823, 1303, 1288, 1236, 2848, 3495, 4044, 3398, 774, 3859, // 7814\n8039, 1581, 4560, 1304, 2849, 3860, 4561, 8040, 2435, 2161, 1083, 3237, 4283, 4045, 4284, 344, // 7830\n1173, 288, 2311, 454, 1683, 8041, 8042, 1461, 4562, 4046, 2589, 8043, 8044, 4563, 985, 894, // 7846\n8045, 3399, 3168, 8046, 1913, 2928, 3729, 1988, 8047, 2110, 1974, 8048, 4047, 8049, 2571, 1194, // 7862\n425, 8050, 4564, 3169, 1245, 3730, 4285, 8051, 8052, 2850, 8053, 636, 4565, 1855, 3861, 760, // 7878\n1799, 8054, 4286, 2209, 1508, 4566, 4048, 1893, 1684, 2293, 8055, 8056, 8057, 4287, 4288, 2210, // 7894\n479, 8058, 8059, 832, 8060, 4049, 2489, 8061, 2965, 2490, 3731, 990, 3109, 627, 1814, 2642, // 7910\n4289, 1582, 4290, 2125, 2111, 3496, 4567, 8062, 799, 4291, 3170, 8063, 4568, 2112, 1737, 3013, // 7926\n1018, 543, 754, 4292, 3309, 1676, 4569, 4570, 4050, 8064, 1489, 8065, 3497, 8066, 2614, 2889, // 7942\n4051, 8067, 8068, 2966, 8069, 8070, 8071, 8072, 3171, 4571, 4572, 2182, 1722, 8073, 3238, 3239, // 7958\n1842, 3610, 1715, 481, 365, 1975, 1856, 8074, 8075, 1962, 2491, 4573, 8076, 2126, 3611, 3240, // 7974\n433, 1894, 2063, 2075, 8077, 602, 2741, 8078, 8079, 8080, 8081, 8082, 3014, 1628, 3400, 8083, // 7990\n3172, 4574, 4052, 2890, 4575, 2512, 8084, 2544, 2772, 8085, 8086, 8087, 3310, 4576, 2891, 8088, // 8006\n4577, 8089, 2851, 4578, 4579, 1221, 2967, 4053, 2513, 8090, 8091, 8092, 1867, 1989, 8093, 8094, // 8022\n8095, 1895, 8096, 8097, 4580, 1896, 4054, 318, 8098, 2094, 4055, 4293, 8099, 8100, 485, 8101, // 8038\n938, 3862, 553, 2670, 116, 8102, 3863, 3612, 8103, 3498, 2671, 2773, 3401, 3311, 2807, 8104, // 8054\n3613, 2929, 4056, 1747, 2930, 2968, 8105, 8106, 207, 8107, 8108, 2672, 4581, 2514, 8109, 3015, // 8070\n890, 3614, 3864, 8110, 1877, 3732, 3402, 8111, 2183, 2353, 3403, 1652, 8112, 8113, 8114, 941, // 8086\n2294, 208, 3499, 4057, 2019, 330, 4294, 3865, 2892, 2492, 3733, 4295, 8115, 8116, 8117, 8118, // 8102\n//Everything below is of no interest for detection purpose\n2515, 1613, 4582, 8119, 3312, 3866, 2516, 8120, 4058, 8121, 1637, 4059, 2466, 4583, 3867, 8122, // 8118\n2493, 3016, 3734, 8123, 8124, 2192, 8125, 8126, 2162, 8127, 8128, 8129, 8130, 8131, 8132, 8133, // 8134\n8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, // 8150\n8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, // 8166\n8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, // 8182\n8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, // 8198\n8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, // 8214\n8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, // 8230\n8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, // 8246\n8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, // 8262\n8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, // 8278\n8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, // 8294\n8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, // 8310\n8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, // 8326\n8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, // 8342\n8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, // 8358\n8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8370, 8371, 8372, 8373, // 8374\n8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 8389, // 8390\n8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402, 8403, 8404, 8405, // 8406\n8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, // 8422\n8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 8435, 8436, 8437, // 8438\n8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, // 8454\n8454, 8455, 8456, 8457, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, // 8470\n8470, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482, 8483, 8484, 8485, // 8486\n8486, 8487, 8488, 8489, 8490, 8491, 8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, // 8502\n8502, 8503, 8504, 8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 8515, 8516, 8517, // 8518\n8518, 8519, 8520, 8521, 8522, 8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, // 8534\n8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, // 8550\n8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, // 8566\n8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 8581, // 8582\n8582, 8583, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, // 8598\n8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, // 8614\n8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, // 8630\n8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, // 8646\n8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, // 8662\n8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 8672, 8673, 8674, 8675, 8676, 8677, // 8678\n8678, 8679, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8687, 8688, 8689, 8690, 8691, 8692, 8693, // 8694\n8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 8705, 8706, 8707, 8708, 8709, // 8710\n8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, // 8726\n8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741]; // 8742","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// Sampling from about 20M text materials include literature and computer technology\n// 128  --> 0.79\n// 256  --> 0.92\n// 512  --> 0.986\n// 1024 --> 0.99944\n// 2048 --> 0.99999\n//\n// Idea Distribution Ratio = 0.98653 / (1-0.98653) = 73.24\n// Random Distribution Ration = 512 / (2350-512) = 0.279.\n//\n// Typical Distribution Ratio\nexports.EUCKR_TYPICAL_DISTRIBUTION_RATIO = 6.0;\nexports.EUCKR_TABLE_SIZE = 2352; // Char to FreqOrder table ,\n\nexports.EUCKRCharToFreqOrder = [13, 130, 120, 1396, 481, 1719, 1720, 328, 609, 212, 1721, 707, 400, 299, 1722, 87, 1397, 1723, 104, 536, 1117, 1203, 1724, 1267, 685, 1268, 508, 1725, 1726, 1727, 1728, 1398, 1399, 1729, 1730, 1731, 141, 621, 326, 1057, 368, 1732, 267, 488, 20, 1733, 1269, 1734, 945, 1400, 1735, 47, 904, 1270, 1736, 1737, 773, 248, 1738, 409, 313, 786, 429, 1739, 116, 987, 813, 1401, 683, 75, 1204, 145, 1740, 1741, 1742, 1743, 16, 847, 667, 622, 708, 1744, 1745, 1746, 966, 787, 304, 129, 1747, 60, 820, 123, 676, 1748, 1749, 1750, 1751, 617, 1752, 626, 1753, 1754, 1755, 1756, 653, 1757, 1758, 1759, 1760, 1761, 1762, 856, 344, 1763, 1764, 1765, 1766, 89, 401, 418, 806, 905, 848, 1767, 1768, 1769, 946, 1205, 709, 1770, 1118, 1771, 241, 1772, 1773, 1774, 1271, 1775, 569, 1776, 999, 1777, 1778, 1779, 1780, 337, 751, 1058, 28, 628, 254, 1781, 177, 906, 270, 349, 891, 1079, 1782, 19, 1783, 379, 1784, 315, 1785, 629, 754, 1402, 559, 1786, 636, 203, 1206, 1787, 710, 567, 1788, 935, 814, 1789, 1790, 1207, 766, 528, 1791, 1792, 1208, 1793, 1794, 1795, 1796, 1797, 1403, 1798, 1799, 533, 1059, 1404, 1405, 1156, 1406, 936, 884, 1080, 1800, 351, 1801, 1802, 1803, 1804, 1805, 801, 1806, 1807, 1808, 1119, 1809, 1157, 714, 474, 1407, 1810, 298, 899, 885, 1811, 1120, 802, 1158, 1812, 892, 1813, 1814, 1408, 659, 1815, 1816, 1121, 1817, 1818, 1819, 1820, 1821, 1822, 319, 1823, 594, 545, 1824, 815, 937, 1209, 1825, 1826, 573, 1409, 1022, 1827, 1210, 1828, 1829, 1830, 1831, 1832, 1833, 556, 722, 807, 1122, 1060, 1834, 697, 1835, 900, 557, 715, 1836, 1410, 540, 1411, 752, 1159, 294, 597, 1211, 976, 803, 770, 1412, 1837, 1838, 39, 794, 1413, 358, 1839, 371, 925, 1840, 453, 661, 788, 531, 723, 544, 1023, 1081, 869, 91, 1841, 392, 430, 790, 602, 1414, 677, 1082, 457, 1415, 1416, 1842, 1843, 475, 327, 1024, 1417, 795, 121, 1844, 733, 403, 1418, 1845, 1846, 1847, 300, 119, 711, 1212, 627, 1848, 1272, 207, 1849, 1850, 796, 1213, 382, 1851, 519, 1852, 1083, 893, 1853, 1854, 1855, 367, 809, 487, 671, 1856, 663, 1857, 1858, 956, 471, 306, 857, 1859, 1860, 1160, 1084, 1861, 1862, 1863, 1864, 1865, 1061, 1866, 1867, 1868, 1869, 1870, 1871, 282, 96, 574, 1872, 502, 1085, 1873, 1214, 1874, 907, 1875, 1876, 827, 977, 1419, 1420, 1421, 268, 1877, 1422, 1878, 1879, 1880, 308, 1881, 2, 537, 1882, 1883, 1215, 1884, 1885, 127, 791, 1886, 1273, 1423, 1887, 34, 336, 404, 643, 1888, 571, 654, 894, 840, 1889, 0, 886, 1274, 122, 575, 260, 908, 938, 1890, 1275, 410, 316, 1891, 1892, 100, 1893, 1894, 1123, 48, 1161, 1124, 1025, 1895, 633, 901, 1276, 1896, 1897, 115, 816, 1898, 317, 1899, 694, 1900, 909, 734, 1424, 572, 866, 1425, 691, 85, 524, 1010, 543, 394, 841, 1901, 1902, 1903, 1026, 1904, 1905, 1906, 1907, 1908, 1909, 30, 451, 651, 988, 310, 1910, 1911, 1426, 810, 1216, 93, 1912, 1913, 1277, 1217, 1914, 858, 759, 45, 58, 181, 610, 269, 1915, 1916, 131, 1062, 551, 443, 1000, 821, 1427, 957, 895, 1086, 1917, 1918, 375, 1919, 359, 1920, 687, 1921, 822, 1922, 293, 1923, 1924, 40, 662, 118, 692, 29, 939, 887, 640, 482, 174, 1925, 69, 1162, 728, 1428, 910, 1926, 1278, 1218, 1279, 386, 870, 217, 854, 1163, 823, 1927, 1928, 1929, 1930, 834, 1931, 78, 1932, 859, 1933, 1063, 1934, 1935, 1936, 1937, 438, 1164, 208, 595, 1938, 1939, 1940, 1941, 1219, 1125, 1942, 280, 888, 1429, 1430, 1220, 1431, 1943, 1944, 1945, 1946, 1947, 1280, 150, 510, 1432, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1011, 1087, 1955, 1433, 1043, 1956, 881, 1957, 614, 958, 1064, 1065, 1221, 1958, 638, 1001, 860, 967, 896, 1434, 989, 492, 553, 1281, 1165, 1959, 1282, 1002, 1283, 1222, 1960, 1961, 1962, 1963, 36, 383, 228, 753, 247, 454, 1964, 876, 678, 1965, 1966, 1284, 126, 464, 490, 835, 136, 672, 529, 940, 1088, 1435, 473, 1967, 1968, 467, 50, 390, 227, 587, 279, 378, 598, 792, 968, 240, 151, 160, 849, 882, 1126, 1285, 639, 1044, 133, 140, 288, 360, 811, 563, 1027, 561, 142, 523, 1969, 1970, 1971, 7, 103, 296, 439, 407, 506, 634, 990, 1972, 1973, 1974, 1975, 645, 1976, 1977, 1978, 1979, 1980, 1981, 236, 1982, 1436, 1983, 1984, 1089, 192, 828, 618, 518, 1166, 333, 1127, 1985, 818, 1223, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 342, 1128, 1286, 746, 842, 1994, 1995, 560, 223, 1287, 98, 8, 189, 650, 978, 1288, 1996, 1437, 1997, 17, 345, 250, 423, 277, 234, 512, 226, 97, 289, 42, 167, 1998, 201, 1999, 2000, 843, 836, 824, 532, 338, 783, 1090, 182, 576, 436, 1438, 1439, 527, 500, 2001, 947, 889, 2002, 2003, 2004, 2005, 262, 600, 314, 447, 2006, 547, 2007, 693, 738, 1129, 2008, 71, 1440, 745, 619, 688, 2009, 829, 2010, 2011, 147, 2012, 33, 948, 2013, 2014, 74, 224, 2015, 61, 191, 918, 399, 637, 2016, 1028, 1130, 257, 902, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 837, 2027, 2028, 2029, 2030, 179, 874, 591, 52, 724, 246, 2031, 2032, 2033, 2034, 1167, 969, 2035, 1289, 630, 605, 911, 1091, 1168, 2036, 2037, 2038, 1441, 912, 2039, 623, 2040, 2041, 253, 1169, 1290, 2042, 1442, 146, 620, 611, 577, 433, 2043, 1224, 719, 1170, 959, 440, 437, 534, 84, 388, 480, 1131, 159, 220, 198, 679, 2044, 1012, 819, 1066, 1443, 113, 1225, 194, 318, 1003, 1029, 2045, 2046, 2047, 2048, 1067, 2049, 2050, 2051, 2052, 2053, 59, 913, 112, 2054, 632, 2055, 455, 144, 739, 1291, 2056, 273, 681, 499, 2057, 448, 2058, 2059, 760, 2060, 2061, 970, 384, 169, 245, 1132, 2062, 2063, 414, 1444, 2064, 2065, 41, 235, 2066, 157, 252, 877, 568, 919, 789, 580, 2067, 725, 2068, 2069, 1292, 2070, 2071, 1445, 2072, 1446, 2073, 2074, 55, 588, 66, 1447, 271, 1092, 2075, 1226, 2076, 960, 1013, 372, 2077, 2078, 2079, 2080, 2081, 1293, 2082, 2083, 2084, 2085, 850, 2086, 2087, 2088, 2089, 2090, 186, 2091, 1068, 180, 2092, 2093, 2094, 109, 1227, 522, 606, 2095, 867, 1448, 1093, 991, 1171, 926, 353, 1133, 2096, 581, 2097, 2098, 2099, 1294, 1449, 1450, 2100, 596, 1172, 1014, 1228, 2101, 1451, 1295, 1173, 1229, 2102, 2103, 1296, 1134, 1452, 949, 1135, 2104, 2105, 1094, 1453, 1454, 1455, 2106, 1095, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 804, 2118, 2119, 1230, 1231, 805, 1456, 405, 1136, 2120, 2121, 2122, 2123, 2124, 720, 701, 1297, 992, 1457, 927, 1004, 2125, 2126, 2127, 2128, 2129, 2130, 22, 417, 2131, 303, 2132, 385, 2133, 971, 520, 513, 2134, 1174, 73, 1096, 231, 274, 962, 1458, 673, 2135, 1459, 2136, 152, 1137, 2137, 2138, 2139, 2140, 1005, 1138, 1460, 1139, 2141, 2142, 2143, 2144, 11, 374, 844, 2145, 154, 1232, 46, 1461, 2146, 838, 830, 721, 1233, 106, 2147, 90, 428, 462, 578, 566, 1175, 352, 2148, 2149, 538, 1234, 124, 1298, 2150, 1462, 761, 565, 2151, 686, 2152, 649, 2153, 72, 173, 2154, 460, 415, 2155, 1463, 2156, 1235, 305, 2157, 2158, 2159, 2160, 2161, 2162, 579, 2163, 2164, 2165, 2166, 2167, 747, 2168, 2169, 2170, 2171, 1464, 669, 2172, 2173, 2174, 2175, 2176, 1465, 2177, 23, 530, 285, 2178, 335, 729, 2179, 397, 2180, 2181, 2182, 1030, 2183, 2184, 698, 2185, 2186, 325, 2187, 2188, 369, 2189, 799, 1097, 1015, 348, 2190, 1069, 680, 2191, 851, 1466, 2192, 2193, 10, 2194, 613, 424, 2195, 979, 108, 449, 589, 27, 172, 81, 1031, 80, 774, 281, 350, 1032, 525, 301, 582, 1176, 2196, 674, 1045, 2197, 2198, 1467, 730, 762, 2199, 2200, 2201, 2202, 1468, 2203, 993, 2204, 2205, 266, 1070, 963, 1140, 2206, 2207, 2208, 664, 1098, 972, 2209, 2210, 2211, 1177, 1469, 1470, 871, 2212, 2213, 2214, 2215, 2216, 1471, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 1472, 1236, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 1299, 2236, 2237, 200, 2238, 477, 373, 2239, 2240, 731, 825, 777, 2241, 2242, 2243, 521, 486, 548, 2244, 2245, 2246, 1473, 1300, 53, 549, 137, 875, 76, 158, 2247, 1301, 1474, 469, 396, 1016, 278, 712, 2248, 321, 442, 503, 767, 744, 941, 1237, 1178, 1475, 2249, 82, 178, 1141, 1179, 973, 2250, 1302, 2251, 297, 2252, 2253, 570, 2254, 2255, 2256, 18, 450, 206, 2257, 290, 292, 1142, 2258, 511, 162, 99, 346, 164, 735, 2259, 1476, 1477, 4, 554, 343, 798, 1099, 2260, 1100, 2261, 43, 171, 1303, 139, 215, 2262, 2263, 717, 775, 2264, 1033, 322, 216, 2265, 831, 2266, 149, 2267, 1304, 2268, 2269, 702, 1238, 135, 845, 347, 309, 2270, 484, 2271, 878, 655, 238, 1006, 1478, 2272, 67, 2273, 295, 2274, 2275, 461, 2276, 478, 942, 412, 2277, 1034, 2278, 2279, 2280, 265, 2281, 541, 2282, 2283, 2284, 2285, 2286, 70, 852, 1071, 2287, 2288, 2289, 2290, 21, 56, 509, 117, 432, 2291, 2292, 331, 980, 552, 1101, 148, 284, 105, 393, 1180, 1239, 755, 2293, 187, 2294, 1046, 1479, 2295, 340, 2296, 63, 1047, 230, 2297, 2298, 1305, 763, 1306, 101, 800, 808, 494, 2299, 2300, 2301, 903, 2302, 37, 1072, 14, 5, 2303, 79, 675, 2304, 312, 2305, 2306, 2307, 2308, 2309, 1480, 6, 1307, 2310, 2311, 2312, 1, 470, 35, 24, 229, 2313, 695, 210, 86, 778, 15, 784, 592, 779, 32, 77, 855, 964, 2314, 259, 2315, 501, 380, 2316, 2317, 83, 981, 153, 689, 1308, 1481, 1482, 1483, 2318, 2319, 716, 1484, 2320, 2321, 2322, 2323, 2324, 2325, 1485, 2326, 2327, 128, 57, 68, 261, 1048, 211, 170, 1240, 31, 2328, 51, 435, 742, 2329, 2330, 2331, 635, 2332, 264, 456, 2333, 2334, 2335, 425, 2336, 1486, 143, 507, 263, 943, 2337, 363, 920, 1487, 256, 1488, 1102, 243, 601, 1489, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 861, 2345, 2346, 2347, 2348, 2349, 2350, 395, 2351, 1490, 1491, 62, 535, 166, 225, 2352, 2353, 668, 419, 1241, 138, 604, 928, 2354, 1181, 2355, 1492, 1493, 2356, 2357, 2358, 1143, 2359, 696, 2360, 387, 307, 1309, 682, 476, 2361, 2362, 332, 12, 222, 156, 2363, 232, 2364, 641, 276, 656, 517, 1494, 1495, 1035, 416, 736, 1496, 2365, 1017, 586, 2366, 2367, 2368, 1497, 2369, 242, 2370, 2371, 2372, 1498, 2373, 965, 713, 2374, 2375, 2376, 2377, 740, 982, 1499, 944, 1500, 1007, 2378, 2379, 1310, 1501, 2380, 2381, 2382, 785, 329, 2383, 2384, 1502, 2385, 2386, 2387, 932, 2388, 1503, 2389, 2390, 2391, 2392, 1242, 2393, 2394, 2395, 2396, 2397, 994, 950, 2398, 2399, 2400, 2401, 1504, 1311, 2402, 2403, 2404, 2405, 1049, 749, 2406, 2407, 853, 718, 1144, 1312, 2408, 1182, 1505, 2409, 2410, 255, 516, 479, 564, 550, 214, 1506, 1507, 1313, 413, 239, 444, 339, 1145, 1036, 1508, 1509, 1314, 1037, 1510, 1315, 2411, 1511, 2412, 2413, 2414, 176, 703, 497, 624, 593, 921, 302, 2415, 341, 165, 1103, 1512, 2416, 1513, 2417, 2418, 2419, 376, 2420, 700, 2421, 2422, 2423, 258, 768, 1316, 2424, 1183, 2425, 995, 608, 2426, 2427, 2428, 2429, 221, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 195, 323, 726, 188, 897, 983, 1317, 377, 644, 1050, 879, 2438, 452, 2439, 2440, 2441, 2442, 2443, 2444, 914, 2445, 2446, 2447, 2448, 915, 489, 2449, 1514, 1184, 2450, 2451, 515, 64, 427, 495, 2452, 583, 2453, 483, 485, 1038, 562, 213, 1515, 748, 666, 2454, 2455, 2456, 2457, 334, 2458, 780, 996, 1008, 705, 1243, 2459, 2460, 2461, 2462, 2463, 114, 2464, 493, 1146, 366, 163, 1516, 961, 1104, 2465, 291, 2466, 1318, 1105, 2467, 1517, 365, 2468, 355, 951, 1244, 2469, 1319, 2470, 631, 2471, 2472, 218, 1320, 364, 320, 756, 1518, 1519, 1321, 1520, 1322, 2473, 2474, 2475, 2476, 997, 2477, 2478, 2479, 2480, 665, 1185, 2481, 916, 1521, 2482, 2483, 2484, 584, 684, 2485, 2486, 797, 2487, 1051, 1186, 2488, 2489, 2490, 1522, 2491, 2492, 370, 2493, 1039, 1187, 65, 2494, 434, 205, 463, 1188, 2495, 125, 812, 391, 402, 826, 699, 286, 398, 155, 781, 771, 585, 2496, 590, 505, 1073, 2497, 599, 244, 219, 917, 1018, 952, 646, 1523, 2498, 1323, 2499, 2500, 49, 984, 354, 741, 2501, 625, 2502, 1324, 2503, 1019, 190, 357, 757, 491, 95, 782, 868, 2504, 2505, 2506, 2507, 2508, 2509, 134, 1524, 1074, 422, 1525, 898, 2510, 161, 2511, 2512, 2513, 2514, 769, 2515, 1526, 2516, 2517, 411, 1325, 2518, 472, 1527, 2519, 2520, 2521, 2522, 2523, 2524, 985, 2525, 2526, 2527, 2528, 2529, 2530, 764, 2531, 1245, 2532, 2533, 25, 204, 311, 2534, 496, 2535, 1052, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 199, 704, 504, 468, 758, 657, 1528, 196, 44, 839, 1246, 272, 750, 2543, 765, 862, 2544, 2545, 1326, 2546, 132, 615, 933, 2547, 732, 2548, 2549, 2550, 1189, 1529, 2551, 283, 1247, 1053, 607, 929, 2552, 2553, 2554, 930, 183, 872, 616, 1040, 1147, 2555, 1148, 1020, 441, 249, 1075, 2556, 2557, 2558, 466, 743, 2559, 2560, 2561, 92, 514, 426, 420, 526, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 185, 2569, 2570, 2571, 2572, 776, 1530, 658, 2573, 362, 2574, 361, 922, 1076, 793, 2575, 2576, 2577, 2578, 2579, 2580, 1531, 251, 2581, 2582, 2583, 2584, 1532, 54, 612, 237, 1327, 2585, 2586, 275, 408, 647, 111, 2587, 1533, 1106, 465, 3, 458, 9, 38, 2588, 107, 110, 890, 209, 26, 737, 498, 2589, 1534, 2590, 431, 202, 88, 1535, 356, 287, 1107, 660, 1149, 2591, 381, 1536, 986, 1150, 445, 1248, 1151, 974, 2592, 2593, 846, 2594, 446, 953, 184, 1249, 1250, 727, 2595, 923, 193, 883, 2596, 2597, 2598, 102, 324, 539, 817, 2599, 421, 1041, 2600, 832, 2601, 94, 175, 197, 406, 2602, 459, 2603, 2604, 2605, 2606, 2607, 330, 555, 2608, 2609, 2610, 706, 1108, 389, 2611, 2612, 2613, 2614, 233, 2615, 833, 558, 931, 954, 1251, 2616, 2617, 1537, 546, 2618, 2619, 1009, 2620, 2621, 2622, 1538, 690, 1328, 2623, 955, 2624, 1539, 2625, 2626, 772, 2627, 2628, 2629, 2630, 2631, 924, 648, 863, 603, 2632, 2633, 934, 1540, 864, 865, 2634, 642, 1042, 670, 1190, 2635, 2636, 2637, 2638, 168, 2639, 652, 873, 542, 1054, 1541, 2640, 2641, 2642, // 512, 256\n//Everything below is of no interest for detection purpose\nn6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 1699, 6303, 6304, 1700, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 1701, 6340, 6341, 6342, 6343, 6344, 1387, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 1702, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 1703, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6431, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 1704, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 1266, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 1705, 1706, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 6622, 6623, 6624, 6625, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 6637, 1388, 6638, 6639, 6640, 6641, 6642, 6643, 6644, 1707, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 1708, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 1201, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 1389, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 1390, 1709, 6737, 6738, 6739, 6740, 6741, 6742, 1710, 6743, 6744, 6745, 6746, 1391, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 1392, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 1202, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 1711, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 1393, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 1712, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 1713, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 1714, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 1394, 6989, 6990, 6991, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 1715, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7028, 1716, 7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7086, 7087, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7156, 7157, 7158, 7159, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7204, 7205, 7206, 7207, 1395, 7208, 7209, 7210, 7211, 7212, 7213, 1717, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7294, 7295, 7296, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7312, 7313, 1718, 7314, 7315, 7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 7672, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8370, 8371, 8372, 8373, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 8435, 8436, 8437, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455, 8456, 8457, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 8470, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482, 8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, 8491, 8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 8581, 8582, 8583, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, 8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 8672, 8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8687, 8688, 8689, 8690, 8691, 8692, 8693, 8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 8705, 8706, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741];","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// GB2312 most frequently used character table\n//\n// Char to FreqOrder table , from hz6763\n// 512  --> 0.79  -- 0.79\n// 1024 --> 0.92  -- 0.13\n// 2048 --> 0.98  -- 0.06\n// 6768 --> 1.00  -- 0.02\n//\n// Ideal Distribution Ratio = 0.79135/(1-0.79135) = 3.79\n// Random Distribution Ration = 512 / (3755 - 512) = 0.157\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher that RDR\nexports.GB2312_TYPICAL_DISTRIBUTION_RATIO = 0.9;\nexports.GB2312_TABLE_SIZE = 3760;\nexports.GB2312CharToFreqOrderlast 512\n//Everything below is of no interest for detection purpose\n5508, 6484, 3900, 3414, 3974, 4441, 4024, 3537, 4037, 5628, 5099, 3633, 6485, 3148, 6486, 3636, 5509, 3257, 5510, 5973, 5445, 5872, 4941, 4403, 3174, 4627, 5873, 6276, 2286, 4230, 5446, 5874, 5122, 6102, 6103, 4162, 5447, 5123, 5323, 4849, 6277, 3980, 3851, 5066, 4246, 5774, 5067, 6278, 3001, 2807, 5695, 3346, 5775, 5974, 5158, 5448, 6487, 5975, 5976, 5776, 3598, 6279, 5696, 4806, 4211, 4154, 6280, 6488, 6489, 6490, 6281, 4212, 5037, 3374, 4171, 6491, 4562, 4807, 4722, 4827, 5977, 6104, 4532, 4079, 5159, 5324, 5160, 4404, 3858, 5359, 5875, 3975, 4288, 4610, 3486, 4512, 5325, 3893, 5360, 6282, 6283, 5560, 2522, 4231, 5978, 5186, 5449, 2569, 3878, 6284, 5401, 3578, 4415, 6285, 4656, 5124, 5979, 2506, 4247, 4449, 3219, 3417, 4334, 4969, 4329, 6492, 4576, 4828, 4172, 4416, 4829, 5402, 6286, 3927, 3852, 5361, 4369, 4830, 4477, 4867, 5876, 4173, 6493, 6105, 4657, 6287, 6106, 5877, 5450, 6494, 4155, 4868, 5451, 3700, 5629, 4384, 6288, 6289, 5878, 3189, 4881, 6107, 6290, 6495, 4513, 6496, 4692, 4515, 4723, 5100, 3356, 6497, 6291, 3810, 4080, 5561, 3570, 4430, 5980, 6498, 4355, 5697, 6499, 4724, 6108, 6109, 3764, 4050, 5038, 5879, 4093, 3226, 6292, 5068, 5217, 4693, 3342, 5630, 3504, 4831, 4377, 4466, 4309, 5698, 4431, 5777, 6293, 5778, 4272, 3706, 6110, 5326, 3752, 4676, 5327, 4273, 5403, 4767, 5631, 6500, 5699, 5880, 3475, 5039, 6294, 5562, 5125, 4348, 4301, 4482, 4068, 5126, 4593, 5700, 3380, 3462, 5981, 5563, 3824, 5404, 4970, 5511, 3825, 4738, 6295, 6501, 5452, 4516, 6111, 5881, 5564, 6502, 6296, 5982, 6503, 4213, 4163, 3454, 6504, 6112, 4009, 4450, 6113, 4658, 6297, 6114, 3035, 6505, 6115, 3995, 4904, 4739, 4563, 4942, 4110, 5040, 3661, 3928, 5362, 3674, 6506, 5292, 3612, 4791, 5565, 4149, 5983, 5328, 5259, 5021, 4725, 4577, 4564, 4517, 4364, 6298, 5405, 4578, 5260, 4594, 4156, 4157, 5453, 3592, 3491, 6507, 5127, 5512, 4709, 4922, 5984, 5701, 4726, 4289, 6508, 4015, 6116, 5128, 4628, 3424, 4241, 5779, 6299, 4905, 6509, 6510, 5454, 5702, 5780, 6300, 4365, 4923, 3971, 6511, 5161, 3270, 3158, 5985, 4100, 867, 5129, 5703, 6117, 5363, 3695, 3301, 5513, 4467, 6118, 6512, 5455, 4232, 4242, 4629, 6513, 3959, 4478, 6514, 5514, 5329, 5986, 4850, 5162, 5566, 3846, 4694, 6119, 5456, 4869, 5781, 3779, 6301, 5704, 5987, 5515, 4710, 6302, 5882, 6120, 4392, 5364, 5705, 6515, 6121, 6516, 6517, 3736, 5988, 5457, 5989, 4695, 2457, 5883, 4551, 5782, 6303, 6304, 6305, 5130, 4971, 6122, 5163, 6123, 4870, 3263, 5365, 3150, 4871, 6518, 6306, 5783, 5069, 5706, 3513, 3498, 4409, 5330, 5632, 5366, 5458, 5459, 3991, 5990, 4502, 3324, 5991, 5784, 3696, 4518, 5633, 4119, 6519, 4630, 5634, 4417, 5707, 4832, 5992, 3418, 6124, 5993, 5567, 4768, 5218, 6520, 4595, 3458, 5367, 6125, 5635, 6126, 4202, 6521, 4740, 4924, 6307, 3981, 4069, 4385, 6308, 3883, 2675, 4051, 3834, 4302, 4483, 5568, 5994, 4972, 4101, 5368, 6309, 5164, 5884, 3922, 6127, 6522, 6523, 5261, 5460, 5187, 4164, 5219, 3538, 5516, 4111, 3524, 5995, 6310, 6311, 5369, 3181, 3386, 2484, 5188, 3464, 5569, 3627, 5708, 6524, 5406, 5165, 4677, 4492, 6312, 4872, 4851, 5885, 4468, 5996, 6313, 5709, 5710, 6128, 2470, 5886, 6314, 5293, 4882, 5785, 3325, 5461, 5101, 6129, 5711, 5786, 6525, 4906, 6526, 6527, 4418, 5887, 5712, 4808, 2907, 3701, 5713, 5888, 6528, 3765, 5636, 5331, 6529, 6530, 3593, 5889, 3637, 4943, 3692, 5714, 5787, 4925, 6315, 6130, 5462, 4405, 6131, 6132, 6316, 5262, 6531, 6532, 5715, 3859, 5716, 5070, 4696, 5102, 3929, 5788, 3987, 4792, 5997, 6533, 6534, 3920, 4809, 5000, 5998, 6535, 2974, 5370, 6317, 5189, 5263, 5717, 3826, 6536, 3953, 5001, 4883, 3190, 5463, 5890, 4973, 5999, 4741, 6133, 6134, 3607, 5570, 6000, 4711, 3362, 3630, 4552, 5041, 6318, 6001, 2950, 2953, 5637, 4646, 5371, 4944, 6002, 2044, 4120, 3429, 6319, 6537, 5103, 4833, 6538, 6539, 4884, 4647, 3884, 6003, 6004, 4758, 3835, 5220, 5789, 4565, 5407, 6540, 6135, 5294, 4697, 4852, 6320, 6321, 3206, 4907, 6541, 6322, 4945, 6542, 6136, 6543, 6323, 6005, 4631, 3519, 6544, 5891, 6545, 5464, 3784, 5221, 6546, 5571, 4659, 6547, 6324, 6137, 5190, 6548, 3853, 6549, 4016, 4834, 3954, 6138, 5332, 3827, 4017, 3210, 3546, 4469, 5408, 5718, 3505, 4648, 5790, 5131, 5638, 5791, 5465, 4727, 4318, 6325, 6326, 5792, 4553, 4010, 4698, 3439, 4974, 3638, 4335, 3085, 6006, 5104, 5042, 5166, 5892, 5572, 6327, 4356, 4519, 5222, 5573, 5333, 5793, 5043, 6550, 5639, 5071, 4503, 6328, 6139, 6551, 6140, 3914, 3901, 5372, 6007, 5640, 4728, 4793, 3976, 3836, 4885, 6552, 4127, 6553, 4451, 4102, 5002, 6554, 3686, 5105, 6555, 5191, 5072, 5295, 4611, 5794, 5296, 6556, 5893, 5264, 5894, 4975, 5466, 5265, 4699, 4976, 4370, 4056, 3492, 5044, 4886, 6557, 5795, 4432, 4769, 4357, 5467, 3940, 4660, 4290, 6141, 4484, 4770, 4661, 3992, 6329, 4025, 4662, 5022, 4632, 4835, 4070, 5297, 4663, 4596, 5574, 5132, 5409, 5895, 6142, 4504, 5192, 4664, 5796, 5896, 3885, 5575, 5797, 5023, 4810, 5798, 3732, 5223, 4712, 5298, 4084, 5334, 5468, 6143, 4052, 4053, 4336, 4977, 4794, 6558, 5335, 4908, 5576, 5224, 4233, 5024, 4128, 5469, 5225, 4873, 6008, 5045, 4729, 4742, 4633, 3675, 4597, 6559, 5897, 5133, 5577, 5003, 5641, 5719, 6330, 6560, 3017, 2382, 3854, 4406, 4811, 6331, 4393, 3964, 4946, 6561, 2420, 3722, 6562, 4926, 4378, 3247, 1736, 4442, 6332, 5134, 6333, 5226, 3996, 2918, 5470, 4319, 4003, 4598, 4743, 4744, 4485, 3785, 3902, 5167, 5004, 5373, 4394, 5898, 6144, 4874, 1793, 3997, 6334, 4085, 4214, 5106, 5642, 4909, 5799, 6009, 4419, 4189, 3330, 5899, 4165, 4420, 5299, 5720, 5227, 3347, 6145, 4081, 6335, 2876, 3930, 6146, 3293, 3786, 3910, 3998, 5900, 5300, 5578, 2840, 6563, 5901, 5579, 6147, 3531, 5374, 6564, 6565, 5580, 4759, 5375, 6566, 6148, 3559, 5643, 6336, 6010, 5517, 6337, 6338, 5721, 5902, 3873, 6011, 6339, 6567, 5518, 3868, 3649, 5722, 6568, 4771, 4947, 6569, 6149, 4812, 6570, 2853, 5471, 6340, 6341, 5644, 4795, 6342, 6012, 5723, 6343, 5724, 6013, 4349, 6344, 3160, 6150, 5193, 4599, 4514, 4493, 5168, 4320, 6345, 4927, 3666, 4745, 5169, 5903, 5005, 4928, 6346, 5725, 6014, 4730, 4203, 5046, 4948, 3395, 5170, 6015, 4150, 6016, 5726, 5519, 6347, 5047, 3550, 6151, 6348, 4197, 4310, 5904, 6571, 5581, 2965, 6152, 4978, 3960, 4291, 5135, 6572, 5301, 5727, 4129, 4026, 5905, 4853, 5728, 5472, 6153, 6349, 4533, 2700, 4505, 5336, 4678, 3583, 5073, 2994, 4486, 3043, 4554, 5520, 6350, 6017, 5800, 4487, 6351, 3931, 4103, 5376, 6352, 4011, 4321, 4311, 4190, 5136, 6018, 3988, 3233, 4350, 5906, 5645, 4198, 6573, 5107, 3432, 4191, 3435, 5582, 6574, 4139, 5410, 6353, 5411, 3944, 5583, 5074, 3198, 6575, 6354, 4358, 6576, 5302, 4600, 5584, 5194, 5412, 6577, 6578, 5585, 5413, 5303, 4248, 5414, 3879, 4433, 6579, 4479, 5025, 4854, 5415, 6355, 4760, 4772, 3683, 2978, 4700, 3797, 4452, 3965, 3932, 3721, 4910, 5801, 6580, 5195, 3551, 5907, 3221, 3471, 3029, 6019, 3999, 5908, 5909, 5266, 5267, 3444, 3023, 3828, 3170, 4796, 5646, 4979, 4259, 6356, 5647, 5337, 3694, 6357, 5648, 5338, 4520, 4322, 5802, 3031, 3759, 4071, 6020, 5586, 4836, 4386, 5048, 6581, 3571, 4679, 4174, 4949, 6154, 4813, 3787, 3402, 3822, 3958, 3215, 3552, 5268, 4387, 3933, 4950, 4359, 6021, 5910, 5075, 3579, 6358, 4234, 4566, 5521, 6359, 3613, 5049, 6022, 5911, 3375, 3702, 3178, 4911, 5339, 4521, 6582, 6583, 4395, 3087, 3811, 5377, 6023, 6360, 6155, 4027, 5171, 5649, 4421, 4249, 2804, 6584, 2270, 6585, 4000, 4235, 3045, 6156, 5137, 5729, 4140, 4312, 3886, 6361, 4330, 6157, 4215, 6158, 3500, 3676, 4929, 4331, 3713, 4930, 5912, 4265, 3776, 3368, 5587, 4470, 4855, 3038, 4980, 3631, 6159, 6160, 4132, 4680, 6161, 6362, 3923, 4379, 5588, 4255, 6586, 4121, 6587, 6363, 4649, 6364, 3288, 4773, 4774, 6162, 6024, 6365, 3543, 6588, 4274, 3107, 3737, 5050, 5803, 4797, 4522, 5589, 5051, 5730, 3714, 4887, 5378, 4001, 4523, 6163, 5026, 5522, 4701, 4175, 2791, 3760, 6589, 5473, 4224, 4133, 3847, 4814, 4815, 4775, 3259, 5416, 6590, 2738, 6164, 6025, 5304, 3733, 5076, 5650, 4816, 5590, 6591, 6165, 6592, 3934, 5269, 6593, 3396, 5340, 6594, 5804, 3445, 3602, 4042, 4488, 5731, 5732, 3525, 5591, 4601, 5196, 6166, 6026, 5172, 3642, 4612, 3202, 4506, 4798, 6366, 3818, 5108, 4303, 5138, 5139, 4776, 3332, 4304, 2915, 3415, 4434, 5077, 5109, 4856, 2879, 5305, 4817, 6595, 5913, 3104, 3144, 3903, 4634, 5341, 3133, 5110, 5651, 5805, 6167, 4057, 5592, 2945, 4371, 5593, 6596, 3474, 4182, 6367, 6597, 6168, 4507, 4279, 6598, 2822, 6599, 4777, 4713, 5594, 3829, 6169, 3887, 5417, 6170, 3653, 5474, 6368, 4216, 2971, 5228, 3790, 4579, 6369, 5733, 6600, 6601, 4951, 4746, 4555, 6602, 5418, 5475, 6027, 3400, 4665, 5806, 6171, 4799, 6028, 5052, 6172, 3343, 4800, 4747, 5006, 6370, 4556, 4217, 5476, 4396, 5229, 5379, 5477, 3839, 5914, 5652, 5807, 4714, 3068, 4635, 5808, 6173, 5342, 4192, 5078, 5419, 5523, 5734, 6174, 4557, 6175, 4602, 6371, 6176, 6603, 5809, 6372, 5735, 4260, 3869, 5111, 5230, 6029, 5112, 6177, 3126, 4681, 5524, 5915, 2706, 3563, 4748, 3130, 6178, 4018, 5525, 6604, 6605, 5478, 4012, 4837, 6606, 4534, 4193, 5810, 4857, 3615, 5479, 6030, 4082, 3697, 3539, 4086, 5270, 3662, 4508, 4931, 5916, 4912, 5811, 5027, 3888, 6607, 4397, 3527, 3302, 3798, 2775, 2921, 2637, 3966, 4122, 4388, 4028, 4054, 1633, 4858, 5079, 3024, 5007, 3982, 3412, 5736, 6608, 3426, 3236, 5595, 3030, 6179, 3427, 3336, 3279, 3110, 6373, 3874, 3039, 5080, 5917, 5140, 4489, 3119, 6374, 5812, 3405, 4494, 6031, 4666, 4141, 6180, 4166, 6032, 5813, 4981, 6609, 5081, 4422, 4982, 4112, 3915, 5653, 3296, 3983, 6375, 4266, 4410, 5654, 6610, 6181, 3436, 5082, 6611, 5380, 6033, 3819, 5596, 4535, 5231, 5306, 5113, 6612, 4952, 5918, 4275, 3113, 6613, 6376, 6182, 6183, 5814, 3073, 4731, 4838, 5008, 3831, 6614, 4888, 3090, 3848, 4280, 5526, 5232, 3014, 5655, 5009, 5737, 5420, 5527, 6615, 5815, 5343, 5173, 5381, 4818, 6616, 3151, 4953, 6617, 5738, 2796, 3204, 4360, 2989, 4281, 5739, 5174, 5421, 5197, 3132, 5141, 3849, 5142, 5528, 5083, 3799, 3904, 4839, 5480, 2880, 4495, 3448, 6377, 6184, 5271, 5919, 3771, 3193, 6034, 6035, 5920, 5010, 6036, 5597, 6037, 6378, 6038, 3106, 5422, 6618, 5423, 5424, 4142, 6619, 4889, 5084, 4890, 4313, 5740, 6620, 3437, 5175, 5307, 5816, 4199, 5198, 5529, 5817, 5199, 5656, 4913, 5028, 5344, 3850, 6185, 2955, 5272, 5011, 5818, 4567, 4580, 5029, 5921, 3616, 5233, 6621, 6622, 6186, 4176, 6039, 6379, 6380, 3352, 5200, 5273, 2908, 5598, 5234, 3837, 5308, 6623, 6624, 5819, 4496, 4323, 5309, 5201, 6625, 6626, 4983, 3194, 3838, 4167, 5530, 5922, 5274, 6381, 6382, 3860, 3861, 5599, 3333, 4292, 4509, 6383, 3553, 5481, 5820, 5531, 4778, 6187, 3955, 3956, 4324, 4389, 4218, 3945, 4325, 3397, 2681, 5923, 4779, 5085, 4019, 5482, 4891, 5382, 5383, 6040, 4682, 3425, 5275, 4094, 6627, 5310, 3015, 5483, 5657, 4398, 5924, 3168, 4819, 6628, 5925, 6629, 5532, 4932, 4613, 6041, 6630, 4636, 6384, 4780, 4204, 5658, 4423, 5821, 3989, 4683, 5822, 6385, 4954, 6631, 5345, 6188, 5425, 5012, 5384, 3894, 6386, 4490, 4104, 6632, 5741, 5053, 6633, 5823, 5926, 5659, 5660, 5927, 6634, 5235, 5742, 5824, 4840, 4933, 4820, 6387, 4859, 5928, 4955, 6388, 4143, 3584, 5825, 5346, 5013, 6635, 5661, 6389, 5014, 5484, 5743, 4337, 5176, 5662, 6390, 2836, 6391, 3268, 6392, 6636, 6042, 5236, 6637, 4158, 6638, 5744, 5663, 4471, 5347, 3663, 4123, 5143, 4293, 3895, 6639, 6640, 5311, 5929, 5826, 3800, 6189, 6393, 6190, 5664, 5348, 3554, 3594, 4749, 4603, 6641, 5385, 4801, 6043, 5827, 4183, 6642, 5312, 5426, 4761, 6394, 5665, 6191, 4715, 2669, 6643, 6644, 5533, 3185, 5427, 5086, 5930, 5931, 5386, 6192, 6044, 6645, 4781, 4013, 5745, 4282, 4435, 5534, 4390, 4267, 6045, 5746, 4984, 6046, 2743, 6193, 3501, 4087, 5485, 5932, 5428, 4184, 4095, 5747, 4061, 5054, 3058, 3862, 5933, 5600, 6646, 5144, 3618, 6395, 3131, 5055, 5313, 6396, 4650, 4956, 3855, 6194, 3896, 5202, 4985, 4029, 4225, 6195, 6647, 5828, 5486, 5829, 3589, 3002, 6648, 6397, 4782, 5276, 6649, 6196, 6650, 4105, 3803, 4043, 5237, 5830, 6398, 4096, 3643, 6399, 3528, 6651, 4453, 3315, 4637, 6652, 3984, 6197, 5535, 3182, 3339, 6653, 3096, 2660, 6400, 6654, 3449, 5934, 4250, 4236, 6047, 6401, 5831, 6655, 5487, 3753, 4062, 5832, 6198, 6199, 6656, 3766, 6657, 3403, 4667, 6048, 6658, 4338, 2897, 5833, 3880, 2797, 3780, 4326, 6659, 5748, 5015, 6660, 5387, 4351, 5601, 4411, 6661, 3654, 4424, 5935, 4339, 4072, 5277, 4568, 5536, 6402, 6662, 5238, 6663, 5349, 5203, 6200, 5204, 6201, 5145, 4536, 5016, 5056, 4762, 5834, 4399, 4957, 6202, 6403, 5666, 5749, 6664, 4340, 6665, 5936, 5177, 5667, 6666, 6667, 3459, 4668, 6404, 6668, 6669, 4543, 6203, 6670, 4276, 6405, 4480, 5537, 6671, 4614, 5205, 5668, 6672, 3348, 2193, 4763, 6406, 6204, 5937, 5602, 4177, 5669, 3419, 6673, 4020, 6205, 4443, 4569, 5388, 3715, 3639, 6407, 6049, 4058, 6206, 6674, 5938, 4544, 6050, 4185, 4294, 4841, 4651, 4615, 5488, 6207, 6408, 6051, 5178, 3241, 3509, 5835, 6208, 4958, 5836, 4341, 5489, 5278, 6209, 2823, 5538, 5350, 5206, 5429, 6675, 4638, 4875, 4073, 3516, 4684, 4914, 4860, 5939, 5603, 5389, 6052, 5057, 3237, 5490, 3791, 6676, 6409, 6677, 4821, 4915, 4106, 5351, 5058, 4243, 5539, 4244, 5604, 4842, 4916, 5239, 3028, 3716, 5837, 5114, 5605, 5390, 5940, 5430, 6210, 4332, 6678, 5540, 4732, 3667, 3840, 6053, 4305, 3408, 5670, 5541, 6410, 2744, 5240, 5750, 6679, 3234, 5606, 6680, 5607, 5671, 3608, 4283, 4159, 4400, 5352, 4783, 6681, 6411, 6682, 4491, 4802, 6211, 6412, 5941, 6413, 6414, 5542, 5751, 6683, 4669, 3734, 5942, 6684, 6415, 5943, 5059, 3328, 4670, 4144, 4268, 6685, 6686, 6687, 6688, 4372, 3603, 6689, 5944, 5491, 4373, 3440, 6416, 5543, 4784, 4822, 5608, 3792, 4616, 5838, 5672, 3514, 5391, 6417, 4892, 6690, 4639, 6691, 6054, 5673, 5839, 6055, 6692, 6056, 5392, 6212, 4038, 5544, 5674, 4497, 6057, 6693, 5840, 4284, 5675, 4021, 4545, 5609, 6418, 4454, 6419, 6213, 4113, 4472, 5314, 3738, 5087, 5279, 4074, 5610, 4959, 4063, 3179, 4750, 6058, 6420, 6214, 3476, 4498, 4716, 5431, 4960, 4685, 6215, 5241, 6694, 6421, 6216, 6695, 5841, 5945, 6422, 3748, 5946, 5179, 3905, 5752, 5545, 5947, 4374, 6217, 4455, 6423, 4412, 6218, 4803, 5353, 6696, 3832, 5280, 6219, 4327, 4702, 6220, 6221, 6059, 4652, 5432, 6424, 3749, 4751, 6425, 5753, 4986, 5393, 4917, 5948, 5030, 5754, 4861, 4733, 6426, 4703, 6697, 6222, 4671, 5949, 4546, 4961, 5180, 6223, 5031, 3316, 5281, 6698, 4862, 4295, 4934, 5207, 3644, 6427, 5842, 5950, 6428, 6429, 4570, 5843, 5282, 6430, 6224, 5088, 3239, 6060, 6699, 5844, 5755, 6061, 6431, 2701, 5546, 6432, 5115, 5676, 4039, 3993, 3327, 4752, 4425, 5315, 6433, 3941, 6434, 5677, 4617, 4604, 3074, 4581, 6225, 5433, 6435, 6226, 6062, 4823, 5756, 5116, 6227, 3717, 5678, 4717, 5845, 6436, 5679, 5846, 6063, 5847, 6064, 3977, 3354, 6437, 3863, 5117, 6228, 5547, 5394, 4499, 4524, 6229, 4605, 6230, 4306, 4500, 6700, 5951, 6065, 3693, 5952, 5089, 4366, 4918, 6701, 6231, 5548, 6232, 6702, 6438, 4704, 5434, 6703, 6704, 5953, 4168, 6705, 5680, 3420, 6706, 5242, 4407, 6066, 3812, 5757, 5090, 5954, 4672, 4525, 3481, 5681, 4618, 5395, 5354, 5316, 5955, 6439, 4962, 6707, 4526, 6440, 3465, 4673, 6067, 6441, 5682, 6708, 5435, 5492, 5758, 5683, 4619, 4571, 4674, 4804, 4893, 4686, 5493, 4753, 6233, 6068, 4269, 6442, 6234, 5032, 4705, 5146, 5243, 5208, 5848, 6235, 6443, 4963, 5033, 4640, 4226, 6236, 5849, 3387, 6444, 6445, 4436, 4437, 5850, 4843, 5494, 4785, 4894, 6709, 4361, 6710, 5091, 5956, 3331, 6237, 4987, 5549, 6069, 6711, 4342, 3517, 4473, 5317, 6070, 6712, 6071, 4706, 6446, 5017, 5355, 6713, 6714, 4988, 5436, 6447, 4734, 5759, 6715, 4735, 4547, 4456, 4754, 6448, 5851, 6449, 6450, 3547, 5852, 5318, 6451, 6452, 5092, 4205, 6716, 6238, 4620, 4219, 5611, 6239, 6072, 4481, 5760, 5957, 5958, 4059, 6240, 6453, 4227, 4537, 6241, 5761, 4030, 4186, 5244, 5209, 3761, 4457, 4876, 3337, 5495, 5181, 6242, 5959, 5319, 5612, 5684, 5853, 3493, 5854, 6073, 4169, 5613, 5147, 4895, 6074, 5210, 6717, 5182, 6718, 3830, 6243, 2798, 3841, 6075, 6244, 5855, 5614, 3604, 4606, 5496, 5685, 5118, 5356, 6719, 6454, 5960, 5357, 5961, 6720, 4145, 3935, 4621, 5119, 5962, 4261, 6721, 6455, 4786, 5963, 4375, 4582, 6245, 6246, 6247, 6076, 5437, 4877, 5856, 3376, 4380, 6248, 4160, 6722, 5148, 6456, 5211, 6457, 6723, 4718, 6458, 6724, 6249, 5358, 4044, 3297, 6459, 6250, 5857, 5615, 5497, 5245, 6460, 5498, 6725, 6251, 6252, 5550, 3793, 5499, 2959, 5396, 6461, 6462, 4572, 5093, 5500, 5964, 3806, 4146, 6463, 4426, 5762, 5858, 6077, 6253, 4755, 3967, 4220, 5965, 6254, 4989, 5501, 6464, 4352, 6726, 6078, 4764, 2290, 5246, 3906, 5438, 5283, 3767, 4964, 2861, 5763, 5094, 6255, 6256, 4622, 5616, 5859, 5860, 4707, 6727, 4285, 4708, 4824, 5617, 6257, 5551, 4787, 5212, 4965, 4935, 4687, 6465, 6728, 6466, 5686, 6079, 3494, 4413, 2995, 5247, 5966, 5618, 6729, 5967, 5764, 5765, 5687, 5502, 6730, 6731, 6080, 5397, 6467, 4990, 6258, 6732, 4538, 5060, 5619, 6733, 4719, 5688, 5439, 5018, 5149, 5284, 5503, 6734, 6081, 4607, 6259, 5120, 3645, 5861, 4583, 6260, 4584, 4675, 5620, 4098, 5440, 6261, 4863, 2379, 3306, 4585, 5552, 5689, 4586, 5285, 6735, 4864, 6736, 5286, 6082, 6737, 4623, 3010, 4788, 4381, 4558, 5621, 4587, 4896, 3698, 3161, 5248, 4353, 4045, 6262, 3754, 5183, 4588, 6738, 6263, 6739, 6740, 5622, 3936, 6741, 6468, 6742, 6264, 5095, 6469, 4991, 5968, 6743, 4992, 6744, 6083, 4897, 6745, 4256, 5766, 4307, 3108, 3968, 4444, 5287, 3889, 4343, 6084, 4510, 6085, 4559, 6086, 4898, 5969, 6746, 5623, 5061, 4919, 5249, 5250, 5504, 5441, 6265, 5320, 4878, 3242, 5862, 5251, 3428, 6087, 6747, 4237, 5624, 5442, 6266, 5553, 4539, 6748, 2585, 3533, 5398, 4262, 6088, 5150, 4736, 4438, 6089, 6267, 5505, 4966, 6749, 6268, 6750, 6269, 5288, 5554, 3650, 6090, 6091, 4624, 6092, 5690, 6751, 5863, 4270, 5691, 4277, 5555, 5864, 6752, 5692, 4720, 4865, 6470, 5151, 4688, 4825, 6753, 3094, 6754, 6471, 3235, 4653, 6755, 5213, 5399, 6756, 3201, 4589, 5865, 4967, 6472, 5866, 6473, 5019, 3016, 6757, 5321, 4756, 3957, 4573, 6093, 4993, 5767, 4721, 6474, 6758, 5625, 6759, 4458, 6475, 6270, 6760, 5556, 4994, 5214, 5252, 6271, 3875, 5768, 6094, 5034, 5506, 4376, 5769, 6761, 2120, 6476, 5253, 5770, 6762, 5771, 5970, 3990, 5971, 5557, 5558, 5772, 6477, 6095, 2787, 4641, 5972, 5121, 6096, 6097, 6272, 6763, 3703, 5867, 5507, 6273, 4206, 6274, 4789, 6098, 6764, 3619, 3646, 3833, 3804, 2394, 3788, 4936, 3978, 4866, 4899, 6099, 6100, 5559, 6478, 6765, 3599, 5868, 6101, 5869, 5870, 6275, 6766, 4527, 6767];","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// Big5 frequency table\n// by Taiwan's Mandarin Promotion Council\n// <http://www.edu.tw:81/mandr/>\n//\n// 128  --> 0.42261\n// 256  --> 0.57851\n// 512  --> 0.74851\n// 1024 --> 0.89384\n// 2048 --> 0.97583\n//\n// Ideal Distribution Ratio = 0.74851/(1-0.74851) =2.98\n// Random Distribution Ration = 512/(5401-512)=0.105\n//\n// Typical Distribution Ratio about 25% of Ideal one, still much higher than RDR\nexports.BIG5_TYPICAL_DISTRIBUTION_RATIO = 0.75; //Char to FreqOrder table\n\nexports.BIG5_TABLE_SIZE = 5376;\nexports.Big5CharToFreqOrder = [1, 1801, 1506, 255, 1431, 198, 9, 82, 6, 5008, 177, 202, 3681, 1256, 2821, 110, //   16\n3814, 33, 3274, 261, 76, 44, 2114, 16, 2946, 2187, 1176, 659, 3971, 26, 3451, 2653, //   32\n1198, 3972, 3350, 4202, 410, 2215, 302, 590, 361, 1964, 8, 204, 58, 4510, 5009, 1932, //   48\n63, 5010, 5011, 317, 1614, 75, 222, 159, 4203, 2417, 1480, 5012, 3555, 3091, 224, 2822, //   64\n3682, 3, 10, 3973, 1471, 29, 2787, 1135, 2866, 1940, 873, 130, 3275, 1123, 312, 5013, //   80\n4511, 2052, 507, 252, 682, 5014, 142, 1915, 124, 206, 2947, 34, 3556, 3204, 64, 604, //   96\n5015, 2501, 1977, 1978, 155, 1991, 645, 641, 1606, 5016, 3452, 337, 72, 406, 5017, 80, //  112\n630, 238, 3205, 1509, 263, 939, 1092, 2654, 756, 1440, 1094, 3453, 449, 69, 2987, 591, //  128\n179, 2096, 471, 115, 2035, 1844, 60, 50, 2988, 134, 806, 1869, 734, 2036, 3454, 180, //  144\n995, 1607, 156, 537, 2907, 688, 5018, 319, 1305, 779, 2145, 514, 2379, 298, 4512, 359, //  160\n2502, 90, 2716, 1338, 663, 11, 906, 1099, 2553, 20, 2441, 182, 532, 1716, 5019, 732, //  176\n1376, 4204, 1311, 1420, 3206, 25, 2317, 1056, 113, 399, 382, 1950, 242, 3455, 2474, 529, //  192\n3276, 475, 1447, 3683, 5020, 117, 21, 656, 810, 1297, 2300, 2334, 3557, 5021, 126, 4205, //  208\n706, 456, 150, 613, 4513, 71, 1118, 2037, 4206, 145, 3092, 85, 835, 486, 2115, 1246, //  224\n1426, 428, 727, 1285, 1015, 800, 106, 623, 303, 1281, 5022, 2128, 2359, 347, 3815, 221, //  240\n3558, 3135, 5023, 1956, 1153, 4207, 83, 296, 1199, 3093, 192, 624, 93, 5024, 822, 1898, //  256\n2823, 3136, 795, 2065, 991, 1554, 1542, 1592, 27, 43, 2867, 859, 139, 1456, 860, 4514, //  272\n437, 712, 3974, 164, 2397, 3137, 695, 211, 3037, 2097, 195, 3975, 1608, 3559, 3560, 3684, //  288\n3976, 234, 811, 2989, 2098, 3977, 2233, 1441, 3561, 1615, 2380, 668, 2077, 1638, 305, 228, //  304\n1664, 4515, 467, 415, 5025, 262, 2099, 1593, 239, 108, 300, 200, 1033, 512, 1247, 2078, //  320\n5026, 5027, 2176, 3207, 3685, 2682, 593, 845, 1062, 3277, 88, 1723, 2038, 3978, 1951, 212, //  336\n266, 152, 149, 468, 1899, 4208, 4516, 77, 187, 5028, 3038, 37, 5, 2990, 5029, 3979, //  352\n5030, 5031, 39, 2524, 4517, 2908, 3208, 2079, 55, 148, 74, 4518, 545, 483, 1474, 1029, //  368\n1665, 217, 1870, 1531, 3138, 1104, 2655, 4209, 24, 172, 3562, 900, 3980, 3563, 3564, 4519, //  384\n32, 1408, 2824, 1312, 329, 487, 2360, 2251, 2717, 784, 2683, 4, 3039, 3351, 1427, 1789, //  400\n188, 109, 499, 5032, 3686, 1717, 1790, 888, 1217, 3040, 4520, 5033, 3565, 5034, 3352, 1520, //  416\n3687, 3981, 196, 1034, 775, 5035, 5036, 929, 1816, 249, 439, 38, 5037, 1063, 5038, 794, //  432\n3982, 1435, 2301, 46, 178, 3278, 2066, 5039, 2381, 5040, 214, 1709, 4521, 804, 35, 707, //  448\n324, 3688, 1601, 2554, 140, 459, 4210, 5041, 5042, 1365, 839, 272, 978, 2262, 2580, 3456, //  464\n2129, 1363, 3689, 1423, 697, 100, 3094, 48, 70, 1231, 495, 3139, 2196, 5043, 1294, 5044, //  480\n2080, 462, 586, 1042, 3279, 853, 256, 988, 185, 2382, 3457, 1698, 434, 1084, 5045, 3458, //  496\n314, 2625, 2788, 4522, 2335, 2336, 569, 2285, 637, 1817, 2525, 757, 1162, 1879, 1616, 3459, //  512\n287, 1577, 2116, 768, 4523, 1671, 2868, 3566, 2526, 1321, 3816, 909, 2418, 5046, 4211, 933, //  528\n3817, 4212, 2053, 2361, 1222, 4524, 765, 2419, 1322, 786, 4525, 5047, 1920, 1462, 1677, 2909, //  544\n1699, 5048, 4526, 1424, 2442, 3140, 3690, 2600, 3353, 1775, 1941, 3460, 3983, 4213, 309, 1369, //  560\n1130, 2825, 364, 2234, 1653, 1299, 3984, 3567, 3985, 3986, 2656, 525, 1085, 3041, 902, 2001, //  576\n1475, 964, 4527, 421, 1845, 1415, 1057, 2286, 940, 1364, 3141, 376, 4528, 4529, 1381, 7, //  592\n2527, 983, 2383, 336, 1710, 2684, 1846, 321, 3461, 559, 1131, 3042, 2752, 1809, 1132, 1313, //  608\n265, 1481, 1858, 5049, 352, 1203, 2826, 3280, 167, 1089, 420, 2827, 776, 792, 1724, 3568, //  624\n4214, 2443, 3281, 5050, 4215, 5051, 446, 229, 333, 2753, 901, 3818, 1200, 1557, 4530, 2657, //  640\n1921, 395, 2754, 2685, 3819, 4216, 1836, 125, 916, 3209, 2626, 4531, 5052, 5053, 3820, 5054, //  656\n5055, 5056, 4532, 3142, 3691, 1133, 2555, 1757, 3462, 1510, 2318, 1409, 3569, 5057, 2146, 438, //  672\n2601, 2910, 2384, 3354, 1068, 958, 3043, 461, 311, 2869, 2686, 4217, 1916, 3210, 4218, 1979, //  688\n383, 750, 2755, 2627, 4219, 274, 539, 385, 1278, 1442, 5058, 1154, 1965, 384, 561, 210, //  704\n98, 1295, 2556, 3570, 5059, 1711, 2420, 1482, 3463, 3987, 2911, 1257, 129, 5060, 3821, 642, //  720\n523, 2789, 2790, 2658, 5061, 141, 2235, 1333, 68, 176, 441, 876, 907, 4220, 603, 2602, //  736\n710, 171, 3464, 404, 549, 18, 3143, 2398, 1410, 3692, 1666, 5062, 3571, 4533, 2912, 4534, //  752\n5063, 2991, 368, 5064, 146, 366, 99, 871, 3693, 1543, 748, 807, 1586, 1185, 22, 2263, //  768\n379, 3822, 3211, 5065, 3212, 505, 1942, 2628, 1992, 1382, 2319, 5066, 380, 2362, 218, 702, //  784\n1818, 1248, 3465, 3044, 3572, 3355, 3282, 5067, 2992, 3694, 930, 3283, 3823, 5068, 59, 5069, //  800\n585, 601, 4221, 497, 3466, 1112, 1314, 4535, 1802, 5070, 1223, 1472, 2177, 5071, 749, 1837, //  816\n690, 1900, 3824, 1773, 3988, 1476, 429, 1043, 1791, 2236, 2117, 917, 4222, 447, 1086, 1629, //  832\n5072, 556, 5073, 5074, 2021, 1654, 844, 1090, 105, 550, 966, 1758, 2828, 1008, 1783, 686, //  848\n1095, 5075, 2287, 793, 1602, 5076, 3573, 2603, 4536, 4223, 2948, 2302, 4537, 3825, 980, 2503, //  864\n544, 353, 527, 4538, 908, 2687, 2913, 5077, 381, 2629, 1943, 1348, 5078, 1341, 1252, 560, //  880\n3095, 5079, 3467, 2870, 5080, 2054, 973, 886, 2081, 143, 4539, 5081, 5082, 157, 3989, 496, //  896\n4224, 57, 840, 540, 2039, 4540, 4541, 3468, 2118, 1445, 970, 2264, 1748, 1966, 2082, 4225, //  912\n3144, 1234, 1776, 3284, 2829, 3695, 773, 1206, 2130, 1066, 2040, 1326, 3990, 1738, 1725, 4226, //  928\n279, 3145, 51, 1544, 2604, 423, 1578, 2131, 2067, 173, 4542, 1880, 5083, 5084, 1583, 264, //  944\n610, 3696, 4543, 2444, 280, 154, 5085, 5086, 5087, 1739, 338, 1282, 3096, 693, 2871, 1411, //  960\n1074, 3826, 2445, 5088, 4544, 5089, 5090, 1240, 952, 2399, 5091, 2914, 1538, 2688, 685, 1483, //  976\n4227, 2475, 1436, 953, 4228, 2055, 4545, 671, 2400, 79, 4229, 2446, 3285, 608, 567, 2689, //  992\n3469, 4230, 4231, 1691, 393, 1261, 1792, 2401, 5092, 4546, 5093, 5094, 5095, 5096, 1383, 1672, // 1008\n3827, 3213, 1464, 522, 1119, 661, 1150, 216, 675, 4547, 3991, 1432, 3574, 609, 4548, 2690, // 1024\n2402, 5097, 5098, 5099, 4232, 3045, 0, 5100, 2476, 315, 231, 2447, 301, 3356, 4549, 2385, // 1040\n5101, 233, 4233, 3697, 1819, 4550, 4551, 5102, 96, 1777, 1315, 2083, 5103, 257, 5104, 1810, // 1056\n3698, 2718, 1139, 1820, 4234, 2022, 1124, 2164, 2791, 1778, 2659, 5105, 3097, 363, 1655, 3214, // 1072\n5106, 2993, 5107, 5108, 5109, 3992, 1567, 3993, 718, 103, 3215, 849, 1443, 341, 3357, 2949, // 1088\n1484, 5110, 1712, 127, 67, 339, 4235, 2403, 679, 1412, 821, 5111, 5112, 834, 738, 351, // 1104\n2994, 2147, 846, 235, 1497, 1881, 418, 1993, 3828, 2719, 186, 1100, 2148, 2756, 3575, 1545, // 1120\n1355, 2950, 2872, 1377, 583, 3994, 4236, 2581, 2995, 5113, 1298, 3699, 1078, 2557, 3700, 2363, // 1136\n78, 3829, 3830, 267, 1289, 2100, 2002, 1594, 4237, 348, 369, 1274, 2197, 2178, 1838, 4552, // 1152\n1821, 2830, 3701, 2757, 2288, 2003, 4553, 2951, 2758, 144, 3358, 882, 4554, 3995, 2759, 3470, // 1168\n4555, 2915, 5114, 4238, 1726, 320, 5115, 3996, 3046, 788, 2996, 5116, 2831, 1774, 1327, 2873, // 1184\n3997, 2832, 5117, 1306, 4556, 2004, 1700, 3831, 3576, 2364, 2660, 787, 2023, 506, 824, 3702, // 1200\n534, 323, 4557, 1044, 3359, 2024, 1901, 946, 3471, 5118, 1779, 1500, 1678, 5119, 1882, 4558, // 1216\n165, 243, 4559, 3703, 2528, 123, 683, 4239, 764, 4560, 36, 3998, 1793, 589, 2916, 816, // 1232\n626, 1667, 3047, 2237, 1639, 1555, 1622, 3832, 3999, 5120, 4000, 2874, 1370, 1228, 1933, 891, // 1248\n2084, 2917, 304, 4240, 5121, 292, 2997, 2720, 3577, 691, 2101, 4241, 1115, 4561, 118, 662, // 1264\n5122, 611, 1156, 854, 2386, 1316, 2875, 2, 386, 515, 2918, 5123, 5124, 3286, 868, 2238, // 1280\n1486, 855, 2661, 785, 2216, 3048, 5125, 1040, 3216, 3578, 5126, 3146, 448, 5127, 1525, 5128, // 1296\n2165, 4562, 5129, 3833, 5130, 4242, 2833, 3579, 3147, 503, 818, 4001, 3148, 1568, 814, 676, // 1312\n1444, 306, 1749, 5131, 3834, 1416, 1030, 197, 1428, 805, 2834, 1501, 4563, 5132, 5133, 5134, // 1328\n1994, 5135, 4564, 5136, 5137, 2198, 13, 2792, 3704, 2998, 3149, 1229, 1917, 5138, 3835, 2132, // 1344\n5139, 4243, 4565, 2404, 3580, 5140, 2217, 1511, 1727, 1120, 5141, 5142, 646, 3836, 2448, 307, // 1360\n5143, 5144, 1595, 3217, 5145, 5146, 5147, 3705, 1113, 1356, 4002, 1465, 2529, 2530, 5148, 519, // 1376\n5149, 128, 2133, 92, 2289, 1980, 5150, 4003, 1512, 342, 3150, 2199, 5151, 2793, 2218, 1981, // 1392\n3360, 4244, 290, 1656, 1317, 789, 827, 2365, 5152, 3837, 4566, 562, 581, 4004, 5153, 401, // 1408\n4567, 2252, 94, 4568, 5154, 1399, 2794, 5155, 1463, 2025, 4569, 3218, 1944, 5156, 828, 1105, // 1424\n4245, 1262, 1394, 5157, 4246, 605, 4570, 5158, 1784, 2876, 5159, 2835, 819, 2102, 578, 2200, // 1440\n2952, 5160, 1502, 436, 3287, 4247, 3288, 2836, 4005, 2919, 3472, 3473, 5161, 2721, 2320, 5162, // 1456\n5163, 2337, 2068, 23, 4571, 193, 826, 3838, 2103, 699, 1630, 4248, 3098, 390, 1794, 1064, // 1472\n3581, 5164, 1579, 3099, 3100, 1400, 5165, 4249, 1839, 1640, 2877, 5166, 4572, 4573, 137, 4250, // 1488\n598, 3101, 1967, 780, 104, 974, 2953, 5167, 278, 899, 253, 402, 572, 504, 493, 1339, // 1504\n5168, 4006, 1275, 4574, 2582, 2558, 5169, 3706, 3049, 3102, 2253, 565, 1334, 2722, 863, 41, // 1520\n5170, 5171, 4575, 5172, 1657, 2338, 19, 463, 2760, 4251, 606, 5173, 2999, 3289, 1087, 2085, // 1536\n1323, 2662, 3000, 5174, 1631, 1623, 1750, 4252, 2691, 5175, 2878, 791, 2723, 2663, 2339, 232, // 1552\n2421, 5176, 3001, 1498, 5177, 2664, 2630, 755, 1366, 3707, 3290, 3151, 2026, 1609, 119, 1918, // 1568\n3474, 862, 1026, 4253, 5178, 4007, 3839, 4576, 4008, 4577, 2265, 1952, 2477, 5179, 1125, 817, // 1584\n4254, 4255, 4009, 1513, 1766, 2041, 1487, 4256, 3050, 3291, 2837, 3840, 3152, 5180, 5181, 1507, // 1600\n5182, 2692, 733, 40, 1632, 1106, 2879, 345, 4257, 841, 2531, 230, 4578, 3002, 1847, 3292, // 1616\n3475, 5183, 1263, 986, 3476, 5184, 735, 879, 254, 1137, 857, 622, 1300, 1180, 1388, 1562, // 1632\n4010, 4011, 2954, 967, 2761, 2665, 1349, 592, 2134, 1692, 3361, 3003, 1995, 4258, 1679, 4012, // 1648\n1902, 2188, 5185, 739, 3708, 2724, 1296, 1290, 5186, 4259, 2201, 2202, 1922, 1563, 2605, 2559, // 1664\n1871, 2762, 3004, 5187, 435, 5188, 343, 1108, 596, 17, 1751, 4579, 2239, 3477, 3709, 5189, // 1680\n4580, 294, 3582, 2955, 1693, 477, 979, 281, 2042, 3583, 643, 2043, 3710, 2631, 2795, 2266, // 1696\n1031, 2340, 2135, 2303, 3584, 4581, 367, 1249, 2560, 5190, 3585, 5191, 4582, 1283, 3362, 2005, // 1712\n240, 1762, 3363, 4583, 4584, 836, 1069, 3153, 474, 5192, 2149, 2532, 268, 3586, 5193, 3219, // 1728\n1521, 1284, 5194, 1658, 1546, 4260, 5195, 3587, 3588, 5196, 4261, 3364, 2693, 1685, 4262, 961, // 1744\n1673, 2632, 190, 2006, 2203, 3841, 4585, 4586, 5197, 570, 2504, 3711, 1490, 5198, 4587, 2633, // 1760\n3293, 1957, 4588, 584, 1514, 396, 1045, 1945, 5199, 4589, 1968, 2449, 5200, 5201, 4590, 4013, // 1776\n619, 5202, 3154, 3294, 215, 2007, 2796, 2561, 3220, 4591, 3221, 4592, 763, 4263, 3842, 4593, // 1792\n5203, 5204, 1958, 1767, 2956, 3365, 3712, 1174, 452, 1477, 4594, 3366, 3155, 5205, 2838, 1253, // 1808\n2387, 2189, 1091, 2290, 4264, 492, 5206, 638, 1169, 1825, 2136, 1752, 4014, 648, 926, 1021, // 1824\n1324, 4595, 520, 4596, 997, 847, 1007, 892, 4597, 3843, 2267, 1872, 3713, 2405, 1785, 4598, // 1840\n1953, 2957, 3103, 3222, 1728, 4265, 2044, 3714, 4599, 2008, 1701, 3156, 1551, 30, 2268, 4266, // 1856\n5207, 2027, 4600, 3589, 5208, 501, 5209, 4267, 594, 3478, 2166, 1822, 3590, 3479, 3591, 3223, // 1872\n829, 2839, 4268, 5210, 1680, 3157, 1225, 4269, 5211, 3295, 4601, 4270, 3158, 2341, 5212, 4602, // 1888\n4271, 5213, 4015, 4016, 5214, 1848, 2388, 2606, 3367, 5215, 4603, 374, 4017, 652, 4272, 4273, // 1904\n375, 1140, 798, 5216, 5217, 5218, 2366, 4604, 2269, 546, 1659, 138, 3051, 2450, 4605, 5219, // 1920\n2254, 612, 1849, 910, 796, 3844, 1740, 1371, 825, 3845, 3846, 5220, 2920, 2562, 5221, 692, // 1936\n444, 3052, 2634, 801, 4606, 4274, 5222, 1491, 244, 1053, 3053, 4275, 4276, 340, 5223, 4018, // 1952\n1041, 3005, 293, 1168, 87, 1357, 5224, 1539, 959, 5225, 2240, 721, 694, 4277, 3847, 219, // 1968\n1478, 644, 1417, 3368, 2666, 1413, 1401, 1335, 1389, 4019, 5226, 5227, 3006, 2367, 3159, 1826, // 1984\n730, 1515, 184, 2840, 66, 4607, 5228, 1660, 2958, 246, 3369, 378, 1457, 226, 3480, 975, // 2000\n4020, 2959, 1264, 3592, 674, 696, 5229, 163, 5230, 1141, 2422, 2167, 713, 3593, 3370, 4608, // 2016\n4021, 5231, 5232, 1186, 15, 5233, 1079, 1070, 5234, 1522, 3224, 3594, 276, 1050, 2725, 758, // 2032\n1126, 653, 2960, 3296, 5235, 2342, 889, 3595, 4022, 3104, 3007, 903, 1250, 4609, 4023, 3481, // 2048\n3596, 1342, 1681, 1718, 766, 3297, 286, 89, 2961, 3715, 5236, 1713, 5237, 2607, 3371, 3008, // 2064\n5238, 2962, 2219, 3225, 2880, 5239, 4610, 2505, 2533, 181, 387, 1075, 4024, 731, 2190, 3372, // 2080\n5240, 3298, 310, 313, 3482, 2304, 770, 4278, 54, 3054, 189, 4611, 3105, 3848, 4025, 5241, // 2096\n1230, 1617, 1850, 355, 3597, 4279, 4612, 3373, 111, 4280, 3716, 1350, 3160, 3483, 3055, 4281, // 2112\n2150, 3299, 3598, 5242, 2797, 4026, 4027, 3009, 722, 2009, 5243, 1071, 247, 1207, 2343, 2478, // 2128\n1378, 4613, 2010, 864, 1437, 1214, 4614, 373, 3849, 1142, 2220, 667, 4615, 442, 2763, 2563, // 2144\n3850, 4028, 1969, 4282, 3300, 1840, 837, 170, 1107, 934, 1336, 1883, 5244, 5245, 2119, 4283, // 2160\n2841, 743, 1569, 5246, 4616, 4284, 582, 2389, 1418, 3484, 5247, 1803, 5248, 357, 1395, 1729, // 2176\n3717, 3301, 2423, 1564, 2241, 5249, 3106, 3851, 1633, 4617, 1114, 2086, 4285, 1532, 5250, 482, // 2192\n2451, 4618, 5251, 5252, 1492, 833, 1466, 5253, 2726, 3599, 1641, 2842, 5254, 1526, 1272, 3718, // 2208\n4286, 1686, 1795, 416, 2564, 1903, 1954, 1804, 5255, 3852, 2798, 3853, 1159, 2321, 5256, 2881, // 2224\n4619, 1610, 1584, 3056, 2424, 2764, 443, 3302, 1163, 3161, 5257, 5258, 4029, 5259, 4287, 2506, // 2240\n3057, 4620, 4030, 3162, 2104, 1647, 3600, 2011, 1873, 4288, 5260, 4289, 431, 3485, 5261, 250, // 2256\n97, 81, 4290, 5262, 1648, 1851, 1558, 160, 848, 5263, 866, 740, 1694, 5264, 2204, 2843, // 2272\n3226, 4291, 4621, 3719, 1687, 950, 2479, 426, 469, 3227, 3720, 3721, 4031, 5265, 5266, 1188, // 2288\n424, 1996, 861, 3601, 4292, 3854, 2205, 2694, 168, 1235, 3602, 4293, 5267, 2087, 1674, 4622, // 2304\n3374, 3303, 220, 2565, 1009, 5268, 3855, 670, 3010, 332, 1208, 717, 5269, 5270, 3603, 2452, // 2320\n4032, 3375, 5271, 513, 5272, 1209, 2882, 3376, 3163, 4623, 1080, 5273, 5274, 5275, 5276, 2534, // 2336\n3722, 3604, 815, 1587, 4033, 4034, 5277, 3605, 3486, 3856, 1254, 4624, 1328, 3058, 1390, 4035, // 2352\n1741, 4036, 3857, 4037, 5278, 236, 3858, 2453, 3304, 5279, 5280, 3723, 3859, 1273, 3860, 4625, // 2368\n5281, 308, 5282, 4626, 245, 4627, 1852, 2480, 1307, 2583, 430, 715, 2137, 2454, 5283, 270, // 2384\n199, 2883, 4038, 5284, 3606, 2727, 1753, 761, 1754, 725, 1661, 1841, 4628, 3487, 3724, 5285, // 2400\n5286, 587, 14, 3305, 227, 2608, 326, 480, 2270, 943, 2765, 3607, 291, 650, 1884, 5287, // 2416\n1702, 1226, 102, 1547, 62, 3488, 904, 4629, 3489, 1164, 4294, 5288, 5289, 1224, 1548, 2766, // 2432\n391, 498, 1493, 5290, 1386, 1419, 5291, 2056, 1177, 4630, 813, 880, 1081, 2368, 566, 1145, // 2448\n4631, 2291, 1001, 1035, 2566, 2609, 2242, 394, 1286, 5292, 5293, 2069, 5294, 86, 1494, 1730, // 2464\n4039, 491, 1588, 745, 897, 2963, 843, 3377, 4040, 2767, 2884, 3306, 1768, 998, 2221, 2070, // 2480\n397, 1827, 1195, 1970, 3725, 3011, 3378, 284, 5295, 3861, 2507, 2138, 2120, 1904, 5296, 4041, // 2496\n2151, 4042, 4295, 1036, 3490, 1905, 114, 2567, 4296, 209, 1527, 5297, 5298, 2964, 2844, 2635, // 2512\n2390, 2728, 3164, 812, 2568, 5299, 3307, 5300, 1559, 737, 1885, 3726, 1210, 885, 28, 2695, // 2528\n3608, 3862, 5301, 4297, 1004, 1780, 4632, 5302, 346, 1982, 2222, 2696, 4633, 3863, 1742, 797, // 2544\n1642, 4043, 1934, 1072, 1384, 2152, 896, 4044, 3308, 3727, 3228, 2885, 3609, 5303, 2569, 1959, // 2560\n4634, 2455, 1786, 5304, 5305, 5306, 4045, 4298, 1005, 1308, 3728, 4299, 2729, 4635, 4636, 1528, // 2576\n2610, 161, 1178, 4300, 1983, 987, 4637, 1101, 4301, 631, 4046, 1157, 3229, 2425, 1343, 1241, // 2592\n1016, 2243, 2570, 372, 877, 2344, 2508, 1160, 555, 1935, 911, 4047, 5307, 466, 1170, 169, // 2608\n1051, 2921, 2697, 3729, 2481, 3012, 1182, 2012, 2571, 1251, 2636, 5308, 992, 2345, 3491, 1540, // 2624\n2730, 1201, 2071, 2406, 1997, 2482, 5309, 4638, 528, 1923, 2191, 1503, 1874, 1570, 2369, 3379, // 2640\n3309, 5310, 557, 1073, 5311, 1828, 3492, 2088, 2271, 3165, 3059, 3107, 767, 3108, 2799, 4639, // 2656\n1006, 4302, 4640, 2346, 1267, 2179, 3730, 3230, 778, 4048, 3231, 2731, 1597, 2667, 5312, 4641, // 2672\n5313, 3493, 5314, 5315, 5316, 3310, 2698, 1433, 3311, 131, 95, 1504, 4049, 723, 4303, 3166, // 2688\n1842, 3610, 2768, 2192, 4050, 2028, 2105, 3731, 5317, 3013, 4051, 1218, 5318, 3380, 3232, 4052, // 2704\n4304, 2584, 248, 1634, 3864, 912, 5319, 2845, 3732, 3060, 3865, 654, 53, 5320, 3014, 5321, // 2720\n1688, 4642, 777, 3494, 1032, 4053, 1425, 5322, 191, 820, 2121, 2846, 971, 4643, 931, 3233, // 2736\n135, 664, 783, 3866, 1998, 772, 2922, 1936, 4054, 3867, 4644, 2923, 3234, 282, 2732, 640, // 2752\n1372, 3495, 1127, 922, 325, 3381, 5323, 5324, 711, 2045, 5325, 5326, 4055, 2223, 2800, 1937, // 2768\n4056, 3382, 2224, 2255, 3868, 2305, 5327, 4645, 3869, 1258, 3312, 4057, 3235, 2139, 2965, 4058, // 2784\n4059, 5328, 2225, 258, 3236, 4646, 101, 1227, 5329, 3313, 1755, 5330, 1391, 3314, 5331, 2924, // 2800\n2057, 893, 5332, 5333, 5334, 1402, 4305, 2347, 5335, 5336, 3237, 3611, 5337, 5338, 878, 1325, // 2816\n1781, 2801, 4647, 259, 1385, 2585, 744, 1183, 2272, 4648, 5339, 4060, 2509, 5340, 684, 1024, // 2832\n4306, 5341, 472, 3612, 3496, 1165, 3315, 4061, 4062, 322, 2153, 881, 455, 1695, 1152, 1340, // 2848\n660, 554, 2154, 4649, 1058, 4650, 4307, 830, 1065, 3383, 4063, 4651, 1924, 5342, 1703, 1919, // 2864\n5343, 932, 2273, 122, 5344, 4652, 947, 677, 5345, 3870, 2637, 297, 1906, 1925, 2274, 4653, // 2880\n2322, 3316, 5346, 5347, 4308, 5348, 4309, 84, 4310, 112, 989, 5349, 547, 1059, 4064, 701, // 2896\n3613, 1019, 5350, 4311, 5351, 3497, 942, 639, 457, 2306, 2456, 993, 2966, 407, 851, 494, // 2912\n4654, 3384, 927, 5352, 1237, 5353, 2426, 3385, 573, 4312, 680, 921, 2925, 1279, 1875, 285, // 2928\n790, 1448, 1984, 719, 2168, 5354, 5355, 4655, 4065, 4066, 1649, 5356, 1541, 563, 5357, 1077, // 2944\n5358, 3386, 3061, 3498, 511, 3015, 4067, 4068, 3733, 4069, 1268, 2572, 3387, 3238, 4656, 4657, // 2960\n5359, 535, 1048, 1276, 1189, 2926, 2029, 3167, 1438, 1373, 2847, 2967, 1134, 2013, 5360, 4313, // 2976\n1238, 2586, 3109, 1259, 5361, 700, 5362, 2968, 3168, 3734, 4314, 5363, 4315, 1146, 1876, 1907, // 2992\n4658, 2611, 4070, 781, 2427, 132, 1589, 203, 147, 273, 2802, 2407, 898, 1787, 2155, 4071, // 3008\n4072, 5364, 3871, 2803, 5365, 5366, 4659, 4660, 5367, 3239, 5368, 1635, 3872, 965, 5369, 1805, // 3024\n2699, 1516, 3614, 1121, 1082, 1329, 3317, 4073, 1449, 3873, 65, 1128, 2848, 2927, 2769, 1590, // 3040\n3874, 5370, 5371, 12, 2668, 45, 976, 2587, 3169, 4661, 517, 2535, 1013, 1037, 3240, 5372, // 3056\n3875, 2849, 5373, 3876, 5374, 3499, 5375, 2612, 614, 1999, 2323, 3877, 3110, 2733, 2638, 5376, // 3072\n2588, 4316, 599, 1269, 5377, 1811, 3735, 5378, 2700, 3111, 759, 1060, 489, 1806, 3388, 3318, // 3088\n1358, 5379, 5380, 2391, 1387, 1215, 2639, 2256, 490, 5381, 5382, 4317, 1759, 2392, 2348, 5383, // 3104\n4662, 3878, 1908, 4074, 2640, 1807, 3241, 4663, 3500, 3319, 2770, 2349, 874, 5384, 5385, 3501, // 3120\n3736, 1859, 91, 2928, 3737, 3062, 3879, 4664, 5386, 3170, 4075, 2669, 5387, 3502, 1202, 1403, // 3136\n3880, 2969, 2536, 1517, 2510, 4665, 3503, 2511, 5388, 4666, 5389, 2701, 1886, 1495, 1731, 4076, // 3152\n2370, 4667, 5390, 2030, 5391, 5392, 4077, 2702, 1216, 237, 2589, 4318, 2324, 4078, 3881, 4668, // 3168\n4669, 2703, 3615, 3504, 445, 4670, 5393, 5394, 5395, 5396, 2771, 61, 4079, 3738, 1823, 4080, // 3184\n5397, 687, 2046, 935, 925, 405, 2670, 703, 1096, 1860, 2734, 4671, 4081, 1877, 1367, 2704, // 3200\n3389, 918, 2106, 1782, 2483, 334, 3320, 1611, 1093, 4672, 564, 3171, 3505, 3739, 3390, 945, // 3216\n2641, 2058, 4673, 5398, 1926, 872, 4319, 5399, 3506, 2705, 3112, 349, 4320, 3740, 4082, 4674, // 3232\n3882, 4321, 3741, 2156, 4083, 4675, 4676, 4322, 4677, 2408, 2047, 782, 4084, 400, 251, 4323, // 3248\n1624, 5400, 5401, 277, 3742, 299, 1265, 476, 1191, 3883, 2122, 4324, 4325, 1109, 205, 5402, // 3264\n2590, 1000, 2157, 3616, 1861, 5403, 5404, 5405, 4678, 5406, 4679, 2573, 107, 2484, 2158, 4085, // 3280\n3507, 3172, 5407, 1533, 541, 1301, 158, 753, 4326, 2886, 3617, 5408, 1696, 370, 1088, 4327, // 3296\n4680, 3618, 579, 327, 440, 162, 2244, 269, 1938, 1374, 3508, 968, 3063, 56, 1396, 3113, // 3312\n2107, 3321, 3391, 5409, 1927, 2159, 4681, 3016, 5410, 3619, 5411, 5412, 3743, 4682, 2485, 5413, // 3328\n2804, 5414, 1650, 4683, 5415, 2613, 5416, 5417, 4086, 2671, 3392, 1149, 3393, 4087, 3884, 4088, // 3344\n5418, 1076, 49, 5419, 951, 3242, 3322, 3323, 450, 2850, 920, 5420, 1812, 2805, 2371, 4328, // 3360\n1909, 1138, 2372, 3885, 3509, 5421, 3243, 4684, 1910, 1147, 1518, 2428, 4685, 3886, 5422, 4686, // 3376\n2393, 2614, 260, 1796, 3244, 5423, 5424, 3887, 3324, 708, 5425, 3620, 1704, 5426, 3621, 1351, // 3392\n1618, 3394, 3017, 1887, 944, 4329, 3395, 4330, 3064, 3396, 4331, 5427, 3744, 422, 413, 1714, // 3408\n3325, 500, 2059, 2350, 4332, 2486, 5428, 1344, 1911, 954, 5429, 1668, 5430, 5431, 4089, 2409, // 3424\n4333, 3622, 3888, 4334, 5432, 2307, 1318, 2512, 3114, 133, 3115, 2887, 4687, 629, 31, 2851, // 3440\n2706, 3889, 4688, 850, 949, 4689, 4090, 2970, 1732, 2089, 4335, 1496, 1853, 5433, 4091, 620, // 3456\n3245, 981, 1242, 3745, 3397, 1619, 3746, 1643, 3326, 2140, 2457, 1971, 1719, 3510, 2169, 5434, // 3472\n3246, 5435, 5436, 3398, 1829, 5437, 1277, 4690, 1565, 2048, 5438, 1636, 3623, 3116, 5439, 869, // 3488\n2852, 655, 3890, 3891, 3117, 4092, 3018, 3892, 1310, 3624, 4691, 5440, 5441, 5442, 1733, 558, // 3504\n4692, 3747, 335, 1549, 3065, 1756, 4336, 3748, 1946, 3511, 1830, 1291, 1192, 470, 2735, 2108, // 3520\n2806, 913, 1054, 4093, 5443, 1027, 5444, 3066, 4094, 4693, 982, 2672, 3399, 3173, 3512, 3247, // 3536\n3248, 1947, 2807, 5445, 571, 4694, 5446, 1831, 5447, 3625, 2591, 1523, 2429, 5448, 2090, 984, // 3552\n4695, 3749, 1960, 5449, 3750, 852, 923, 2808, 3513, 3751, 969, 1519, 999, 2049, 2325, 1705, // 3568\n5450, 3118, 615, 1662, 151, 597, 4095, 2410, 2326, 1049, 275, 4696, 3752, 4337, 568, 3753, // 3584\n3626, 2487, 4338, 3754, 5451, 2430, 2275, 409, 3249, 5452, 1566, 2888, 3514, 1002, 769, 2853, // 3600\n194, 2091, 3174, 3755, 2226, 3327, 4339, 628, 1505, 5453, 5454, 1763, 2180, 3019, 4096, 521, // 3616\n1161, 2592, 1788, 2206, 2411, 4697, 4097, 1625, 4340, 4341, 412, 42, 3119, 464, 5455, 2642, // 3632\n4698, 3400, 1760, 1571, 2889, 3515, 2537, 1219, 2207, 3893, 2643, 2141, 2373, 4699, 4700, 3328, // 3648\n1651, 3401, 3627, 5456, 5457, 3628, 2488, 3516, 5458, 3756, 5459, 5460, 2276, 2092, 460, 5461, // 3664\n4701, 5462, 3020, 962, 588, 3629, 289, 3250, 2644, 1116, 52, 5463, 3067, 1797, 5464, 5465, // 3680\n5466, 1467, 5467, 1598, 1143, 3757, 4342, 1985, 1734, 1067, 4702, 1280, 3402, 465, 4703, 1572, // 3696\n510, 5468, 1928, 2245, 1813, 1644, 3630, 5469, 4704, 3758, 5470, 5471, 2673, 1573, 1534, 5472, // 3712\n5473, 536, 1808, 1761, 3517, 3894, 3175, 2645, 5474, 5475, 5476, 4705, 3518, 2929, 1912, 2809, // 3728\n5477, 3329, 1122, 377, 3251, 5478, 360, 5479, 5480, 4343, 1529, 551, 5481, 2060, 3759, 1769, // 3744\n2431, 5482, 2930, 4344, 3330, 3120, 2327, 2109, 2031, 4706, 1404, 136, 1468, 1479, 672, 1171, // 3760\n3252, 2308, 271, 3176, 5483, 2772, 5484, 2050, 678, 2736, 865, 1948, 4707, 5485, 2014, 4098, // 3776\n2971, 5486, 2737, 2227, 1397, 3068, 3760, 4708, 4709, 1735, 2931, 3403, 3631, 5487, 3895, 509, // 3792\n2854, 2458, 2890, 3896, 5488, 5489, 3177, 3178, 4710, 4345, 2538, 4711, 2309, 1166, 1010, 552, // 3808\n681, 1888, 5490, 5491, 2972, 2973, 4099, 1287, 1596, 1862, 3179, 358, 453, 736, 175, 478, // 3824\n1117, 905, 1167, 1097, 5492, 1854, 1530, 5493, 1706, 5494, 2181, 3519, 2292, 3761, 3520, 3632, // 3840\n4346, 2093, 4347, 5495, 3404, 1193, 2489, 4348, 1458, 2193, 2208, 1863, 1889, 1421, 3331, 2932, // 3856\n3069, 2182, 3521, 595, 2123, 5496, 4100, 5497, 5498, 4349, 1707, 2646, 223, 3762, 1359, 751, // 3872\n3121, 183, 3522, 5499, 2810, 3021, 419, 2374, 633, 704, 3897, 2394, 241, 5500, 5501, 5502, // 3888\n838, 3022, 3763, 2277, 2773, 2459, 3898, 1939, 2051, 4101, 1309, 3122, 2246, 1181, 5503, 1136, // 3904\n2209, 3899, 2375, 1446, 4350, 2310, 4712, 5504, 5505, 4351, 1055, 2615, 484, 3764, 5506, 4102, // 3920\n625, 4352, 2278, 3405, 1499, 4353, 4103, 5507, 4104, 4354, 3253, 2279, 2280, 3523, 5508, 5509, // 3936\n2774, 808, 2616, 3765, 3406, 4105, 4355, 3123, 2539, 526, 3407, 3900, 4356, 955, 5510, 1620, // 3952\n4357, 2647, 2432, 5511, 1429, 3766, 1669, 1832, 994, 928, 5512, 3633, 1260, 5513, 5514, 5515, // 3968\n1949, 2293, 741, 2933, 1626, 4358, 2738, 2460, 867, 1184, 362, 3408, 1392, 5516, 5517, 4106, // 3984\n4359, 1770, 1736, 3254, 2934, 4713, 4714, 1929, 2707, 1459, 1158, 5518, 3070, 3409, 2891, 1292, // 4000\n1930, 2513, 2855, 3767, 1986, 1187, 2072, 2015, 2617, 4360, 5519, 2574, 2514, 2170, 3768, 2490, // 4016\n3332, 5520, 3769, 4715, 5521, 5522, 666, 1003, 3023, 1022, 3634, 4361, 5523, 4716, 1814, 2257, // 4032\n574, 3901, 1603, 295, 1535, 705, 3902, 4362, 283, 858, 417, 5524, 5525, 3255, 4717, 4718, // 4048\n3071, 1220, 1890, 1046, 2281, 2461, 4107, 1393, 1599, 689, 2575, 388, 4363, 5526, 2491, 802, // 4064\n5527, 2811, 3903, 2061, 1405, 2258, 5528, 4719, 3904, 2110, 1052, 1345, 3256, 1585, 5529, 809, // 4080\n5530, 5531, 5532, 575, 2739, 3524, 956, 1552, 1469, 1144, 2328, 5533, 2329, 1560, 2462, 3635, // 4096\n3257, 4108, 616, 2210, 4364, 3180, 2183, 2294, 5534, 1833, 5535, 3525, 4720, 5536, 1319, 3770, // 4112\n3771, 1211, 3636, 1023, 3258, 1293, 2812, 5537, 5538, 5539, 3905, 607, 2311, 3906, 762, 2892, // 4128\n1439, 4365, 1360, 4721, 1485, 3072, 5540, 4722, 1038, 4366, 1450, 2062, 2648, 4367, 1379, 4723, // 4144\n2593, 5541, 5542, 4368, 1352, 1414, 2330, 2935, 1172, 5543, 5544, 3907, 3908, 4724, 1798, 1451, // 4160\n5545, 5546, 5547, 5548, 2936, 4109, 4110, 2492, 2351, 411, 4111, 4112, 3637, 3333, 3124, 4725, // 4176\n1561, 2674, 1452, 4113, 1375, 5549, 5550, 47, 2974, 316, 5551, 1406, 1591, 2937, 3181, 5552, // 4192\n1025, 2142, 3125, 3182, 354, 2740, 884, 2228, 4369, 2412, 508, 3772, 726, 3638, 996, 2433, // 4208\n3639, 729, 5553, 392, 2194, 1453, 4114, 4726, 3773, 5554, 5555, 2463, 3640, 2618, 1675, 2813, // 4224\n919, 2352, 2975, 2353, 1270, 4727, 4115, 73, 5556, 5557, 647, 5558, 3259, 2856, 2259, 1550, // 4240\n1346, 3024, 5559, 1332, 883, 3526, 5560, 5561, 5562, 5563, 3334, 2775, 5564, 1212, 831, 1347, // 4256\n4370, 4728, 2331, 3909, 1864, 3073, 720, 3910, 4729, 4730, 3911, 5565, 4371, 5566, 5567, 4731, // 4272\n5568, 5569, 1799, 4732, 3774, 2619, 4733, 3641, 1645, 2376, 4734, 5570, 2938, 669, 2211, 2675, // 4288\n2434, 5571, 2893, 5572, 5573, 1028, 3260, 5574, 4372, 2413, 5575, 2260, 1353, 5576, 5577, 4735, // 4304\n3183, 518, 5578, 4116, 5579, 4373, 1961, 5580, 2143, 4374, 5581, 5582, 3025, 2354, 2355, 3912, // 4320\n516, 1834, 1454, 4117, 2708, 4375, 4736, 2229, 2620, 1972, 1129, 3642, 5583, 2776, 5584, 2976, // 4336\n1422, 577, 1470, 3026, 1524, 3410, 5585, 5586, 432, 4376, 3074, 3527, 5587, 2594, 1455, 2515, // 4352\n2230, 1973, 1175, 5588, 1020, 2741, 4118, 3528, 4737, 5589, 2742, 5590, 1743, 1361, 3075, 3529, // 4368\n2649, 4119, 4377, 4738, 2295, 895, 924, 4378, 2171, 331, 2247, 3076, 166, 1627, 3077, 1098, // 4384\n5591, 1232, 2894, 2231, 3411, 4739, 657, 403, 1196, 2377, 542, 3775, 3412, 1600, 4379, 3530, // 4400\n5592, 4740, 2777, 3261, 576, 530, 1362, 4741, 4742, 2540, 2676, 3776, 4120, 5593, 842, 3913, // 4416\n5594, 2814, 2032, 1014, 4121, 213, 2709, 3413, 665, 621, 4380, 5595, 3777, 2939, 2435, 5596, // 4432\n2436, 3335, 3643, 3414, 4743, 4381, 2541, 4382, 4744, 3644, 1682, 4383, 3531, 1380, 5597, 724, // 4448\n2282, 600, 1670, 5598, 1337, 1233, 4745, 3126, 2248, 5599, 1621, 4746, 5600, 651, 4384, 5601, // 4464\n1612, 4385, 2621, 5602, 2857, 5603, 2743, 2312, 3078, 5604, 716, 2464, 3079, 174, 1255, 2710, // 4480\n4122, 3645, 548, 1320, 1398, 728, 4123, 1574, 5605, 1891, 1197, 3080, 4124, 5606, 3081, 3082, // 4496\n3778, 3646, 3779, 747, 5607, 635, 4386, 4747, 5608, 5609, 5610, 4387, 5611, 5612, 4748, 5613, // 4512\n3415, 4749, 2437, 451, 5614, 3780, 2542, 2073, 4388, 2744, 4389, 4125, 5615, 1764, 4750, 5616, // 4528\n4390, 350, 4751, 2283, 2395, 2493, 5617, 4391, 4126, 2249, 1434, 4127, 488, 4752, 458, 4392, // 4544\n4128, 3781, 771, 1330, 2396, 3914, 2576, 3184, 2160, 2414, 1553, 2677, 3185, 4393, 5618, 2494, // 4560\n2895, 2622, 1720, 2711, 4394, 3416, 4753, 5619, 2543, 4395, 5620, 3262, 4396, 2778, 5621, 2016, // 4576\n2745, 5622, 1155, 1017, 3782, 3915, 5623, 3336, 2313, 201, 1865, 4397, 1430, 5624, 4129, 5625, // 4592\n5626, 5627, 5628, 5629, 4398, 1604, 5630, 414, 1866, 371, 2595, 4754, 4755, 3532, 2017, 3127, // 4608\n4756, 1708, 960, 4399, 887, 389, 2172, 1536, 1663, 1721, 5631, 2232, 4130, 2356, 2940, 1580, // 4624\n5632, 5633, 1744, 4757, 2544, 4758, 4759, 5634, 4760, 5635, 2074, 5636, 4761, 3647, 3417, 2896, // 4640\n4400, 5637, 4401, 2650, 3418, 2815, 673, 2712, 2465, 709, 3533, 4131, 3648, 4402, 5638, 1148, // 4656\n502, 634, 5639, 5640, 1204, 4762, 3649, 1575, 4763, 2623, 3783, 5641, 3784, 3128, 948, 3263, // 4672\n121, 1745, 3916, 1110, 5642, 4403, 3083, 2516, 3027, 4132, 3785, 1151, 1771, 3917, 1488, 4133, // 4688\n1987, 5643, 2438, 3534, 5644, 5645, 2094, 5646, 4404, 3918, 1213, 1407, 2816, 531, 2746, 2545, // 4704\n3264, 1011, 1537, 4764, 2779, 4405, 3129, 1061, 5647, 3786, 3787, 1867, 2897, 5648, 2018, 120, // 4720\n4406, 4407, 2063, 3650, 3265, 2314, 3919, 2678, 3419, 1955, 4765, 4134, 5649, 3535, 1047, 2713, // 4736\n1266, 5650, 1368, 4766, 2858, 649, 3420, 3920, 2546, 2747, 1102, 2859, 2679, 5651, 5652, 2000, // 4752\n5653, 1111, 3651, 2977, 5654, 2495, 3921, 3652, 2817, 1855, 3421, 3788, 5655, 5656, 3422, 2415, // 4768\n2898, 3337, 3266, 3653, 5657, 2577, 5658, 3654, 2818, 4135, 1460, 856, 5659, 3655, 5660, 2899, // 4784\n2978, 5661, 2900, 3922, 5662, 4408, 632, 2517, 875, 3923, 1697, 3924, 2296, 5663, 5664, 4767, // 4800\n3028, 1239, 580, 4768, 4409, 5665, 914, 936, 2075, 1190, 4136, 1039, 2124, 5666, 5667, 5668, // 4816\n5669, 3423, 1473, 5670, 1354, 4410, 3925, 4769, 2173, 3084, 4137, 915, 3338, 4411, 4412, 3339, // 4832\n1605, 1835, 5671, 2748, 398, 3656, 4413, 3926, 4138, 328, 1913, 2860, 4139, 3927, 1331, 4414, // 4848\n3029, 937, 4415, 5672, 3657, 4140, 4141, 3424, 2161, 4770, 3425, 524, 742, 538, 3085, 1012, // 4864\n5673, 5674, 3928, 2466, 5675, 658, 1103, 225, 3929, 5676, 5677, 4771, 5678, 4772, 5679, 3267, // 4880\n1243, 5680, 4142, 963, 2250, 4773, 5681, 2714, 3658, 3186, 5682, 5683, 2596, 2332, 5684, 4774, // 4896\n5685, 5686, 5687, 3536, 957, 3426, 2547, 2033, 1931, 2941, 2467, 870, 2019, 3659, 1746, 2780, // 4912\n2781, 2439, 2468, 5688, 3930, 5689, 3789, 3130, 3790, 3537, 3427, 3791, 5690, 1179, 3086, 5691, // 4928\n3187, 2378, 4416, 3792, 2548, 3188, 3131, 2749, 4143, 5692, 3428, 1556, 2549, 2297, 977, 2901, // 4944\n2034, 4144, 1205, 3429, 5693, 1765, 3430, 3189, 2125, 1271, 714, 1689, 4775, 3538, 5694, 2333, // 4960\n3931, 533, 4417, 3660, 2184, 617, 5695, 2469, 3340, 3539, 2315, 5696, 5697, 3190, 5698, 5699, // 4976\n3932, 1988, 618, 427, 2651, 3540, 3431, 5700, 5701, 1244, 1690, 5702, 2819, 4418, 4776, 5703, // 4992\n3541, 4777, 5704, 2284, 1576, 473, 3661, 4419, 3432, 972, 5705, 3662, 5706, 3087, 5707, 5708, // 5008\n4778, 4779, 5709, 3793, 4145, 4146, 5710, 153, 4780, 356, 5711, 1892, 2902, 4420, 2144, 408, // 5024\n803, 2357, 5712, 3933, 5713, 4421, 1646, 2578, 2518, 4781, 4782, 3934, 5714, 3935, 4422, 5715, // 5040\n2416, 3433, 752, 5716, 5717, 1962, 3341, 2979, 5718, 746, 3030, 2470, 4783, 4423, 3794, 698, // 5056\n4784, 1893, 4424, 3663, 2550, 4785, 3664, 3936, 5719, 3191, 3434, 5720, 1824, 1302, 4147, 2715, // 5072\n3937, 1974, 4425, 5721, 4426, 3192, 823, 1303, 1288, 1236, 2861, 3542, 4148, 3435, 774, 3938, // 5088\n5722, 1581, 4786, 1304, 2862, 3939, 4787, 5723, 2440, 2162, 1083, 3268, 4427, 4149, 4428, 344, // 5104\n1173, 288, 2316, 454, 1683, 5724, 5725, 1461, 4788, 4150, 2597, 5726, 5727, 4789, 985, 894, // 5120\n5728, 3436, 3193, 5729, 1914, 2942, 3795, 1989, 5730, 2111, 1975, 5731, 4151, 5732, 2579, 1194, // 5136\n425, 5733, 4790, 3194, 1245, 3796, 4429, 5734, 5735, 2863, 5736, 636, 4791, 1856, 3940, 760, // 5152\n1800, 5737, 4430, 2212, 1508, 4792, 4152, 1894, 1684, 2298, 5738, 5739, 4793, 4431, 4432, 2213, // 5168\n479, 5740, 5741, 832, 5742, 4153, 2496, 5743, 2980, 2497, 3797, 990, 3132, 627, 1815, 2652, // 5184\n4433, 1582, 4434, 2126, 2112, 3543, 4794, 5744, 799, 4435, 3195, 5745, 4795, 2113, 1737, 3031, // 5200\n1018, 543, 754, 4436, 3342, 1676, 4796, 4797, 4154, 4798, 1489, 5746, 3544, 5747, 2624, 2903, // 5216\n4155, 5748, 5749, 2981, 5750, 5751, 5752, 5753, 3196, 4799, 4800, 2185, 1722, 5754, 3269, 3270, // 5232\n1843, 3665, 1715, 481, 365, 1976, 1857, 5755, 5756, 1963, 2498, 4801, 5757, 2127, 3666, 3271, // 5248\n433, 1895, 2064, 2076, 5758, 602, 2750, 5759, 5760, 5761, 5762, 5763, 3032, 1628, 3437, 5764, // 5264\n3197, 4802, 4156, 2904, 4803, 2519, 5765, 2551, 2782, 5766, 5767, 5768, 3343, 4804, 2905, 5769, // 5280\n4805, 5770, 2864, 4806, 4807, 1221, 2982, 4157, 2520, 5771, 5772, 5773, 1868, 1990, 5774, 5775, // 5296\n5776, 1896, 5777, 5778, 4808, 1897, 4158, 318, 5779, 2095, 4159, 4437, 5780, 5781, 485, 5782, // 5312\n938, 3941, 553, 2680, 116, 5783, 3942, 3667, 5784, 3545, 2681, 2783, 3438, 3344, 2820, 5785, // 5328\n3668, 2943, 4160, 1747, 2944, 2983, 5786, 5787, 207, 5788, 4809, 5789, 4810, 2521, 5790, 3033, // 5344\n890, 3669, 3943, 5791, 1878, 3798, 3439, 5792, 2186, 2358, 3440, 1652, 5793, 5794, 5795, 941, // 5360\n2299, 208, 3546, 4161, 2020, 330, 4438, 3944, 2906, 2499, 3799, 4439, 4811, 5796, 5797, 5798, // 5376  //last 512\n//Everything below is of no interest for detection purpose\n2522, 1613, 4812, 5799, 3345, 3945, 2523, 5800, 4162, 5801, 1637, 4163, 2471, 4813, 3946, 5802, // 5392\n2500, 3034, 3800, 5803, 5804, 2195, 4814, 5805, 2163, 5806, 5807, 5808, 5809, 5810, 5811, 5812, // 5408\n5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, // 5424\n5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, // 5440\n5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, // 5456\n5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5876, // 5472\n5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5887, 5888, 5889, 5890, 5891, 5892, // 5488\n5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 5908, // 5504\n5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5922, 5923, 5924, // 5520\n5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, // 5536\n5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 5951, 5952, 5953, 5954, 5955, 5956, // 5552\n5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, // 5568\n5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 5985, 5986, 5987, 5988, // 5584\n5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, // 5600\n6005, 6006, 6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, // 5616\n6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, // 5632\n6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, // 5648\n6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, // 5664\n6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, // 5680\n6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, // 5696\n6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, // 5712\n6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, // 5728\n6133, 6134, 6135, 6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, // 5744\n6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, // 5760\n6165, 6166, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, // 5776\n6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, // 5792\n6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, // 5808\n6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 3670, 6224, 6225, 6226, 6227, // 5824\n6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, // 5840\n6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, // 5856\n6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, // 5872\n6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 4815, 6286, 6287, 6288, 6289, 6290, // 5888\n6291, 6292, 4816, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, // 5904\n6306, 6307, 6308, 6309, 6310, 6311, 4817, 4818, 6312, 6313, 6314, 6315, 6316, 6317, 6318, 4819, // 5920\n6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, // 5936\n6335, 6336, 6337, 4820, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, // 5952\n6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, // 5968\n6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, // 5984\n6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 6393, 6394, 6395, 6396, 6397, // 6000\n6398, 6399, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 3441, 6411, 6412, // 6016\n6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 4440, 6426, 6427, // 6032\n6428, 6429, 6430, 6431, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, // 6048\n6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 4821, 6455, 6456, 6457, 6458, // 6064\n6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, // 6080\n6475, 6476, 6477, 3947, 3948, 6478, 6479, 6480, 6481, 3272, 4441, 6482, 6483, 6484, 6485, 4442, // 6096\n6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 4822, 6497, 6498, 6499, 6500, // 6112\n6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, // 6128\n6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, // 6144\n6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, // 6160\n6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 2784, 6557, 4823, 6558, 6559, 6560, 6561, 6562, // 6176\n6563, 6564, 6565, 6566, 6567, 6568, 6569, 3949, 6570, 6571, 6572, 4824, 6573, 6574, 6575, 6576, // 6192\n6577, 6578, 6579, 6580, 6581, 6582, 6583, 4825, 6584, 6585, 6586, 3950, 2785, 6587, 6588, 6589, // 6208\n6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, // 6224\n6606, 6607, 6608, 6609, 6610, 6611, 6612, 4826, 6613, 6614, 6615, 4827, 6616, 6617, 6618, 6619, // 6240\n6620, 6621, 6622, 6623, 6624, 6625, 4164, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, // 6256\n3547, 6635, 4828, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 3951, 2984, 6643, 6644, 6645, 6646, // 6272\n6647, 6648, 6649, 4165, 6650, 4829, 6651, 6652, 4830, 6653, 6654, 6655, 6656, 6657, 6658, 6659, // 6288\n6660, 6661, 6662, 4831, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 4166, 6672, 4832, // 6304\n3952, 6673, 6674, 6675, 6676, 4833, 6677, 6678, 6679, 4167, 6680, 6681, 6682, 3198, 6683, 6684, // 6320\n6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 4834, 6698, 6699, // 6336\n6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, // 6352\n6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, // 6368\n6732, 6733, 6734, 4443, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 4444, // 6384\n6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, // 6400\n6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, // 6416\n6778, 6779, 6780, 6781, 4168, 6782, 6783, 3442, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, // 6432\n4169, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, // 6448\n6807, 6808, 6809, 6810, 6811, 4835, 6812, 6813, 6814, 4445, 6815, 6816, 4446, 6817, 6818, 6819, // 6464\n6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, // 6480\n3548, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 4836, 6847, 6848, 6849, // 6496\n6850, 6851, 6852, 6853, 6854, 3953, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, // 6512\n6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 3199, 6878, 6879, // 6528\n6880, 6881, 6882, 4447, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, // 6544\n6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 4170, 6905, 6906, 6907, 6908, 6909, // 6560\n6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, // 6576\n6926, 6927, 4837, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 3346, 6937, 6938, 4838, // 6592\n6939, 6940, 6941, 4448, 6942, 6943, 6944, 6945, 6946, 4449, 6947, 6948, 6949, 6950, 6951, 6952, // 6608\n6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, // 6624\n6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, // 6640\n6985, 6986, 6987, 6988, 6989, 6990, 6991, 6992, 6993, 6994, 3671, 6995, 6996, 6997, 6998, 4839, // 6656\n6999, 7000, 7001, 7002, 3549, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, // 6672\n7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7028, 7029, // 6688\n7030, 4840, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 4841, 7039, 7040, 7041, 7042, 7043, // 6704\n7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, // 6720\n7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 2985, 7071, 7072, 7073, 7074, // 6736\n7075, 7076, 7077, 7078, 7079, 7080, 4842, 7081, 7082, 7083, 7084, 7085, 7086, 7087, 7088, 7089, // 6752\n7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, // 6768\n7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 4450, 7119, 7120, // 6784\n7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, // 6800\n7137, 7138, 7139, 7140, 7141, 7142, 7143, 4843, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, // 6816\n7152, 7153, 7154, 7155, 7156, 7157, 7158, 7159, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, // 6832\n7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, // 6848\n7184, 7185, 7186, 7187, 7188, 4171, 4172, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, // 6864\n7198, 7199, 7200, 7201, 7202, 7203, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, // 6880\n7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, // 6896\n7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, // 6912\n7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 7260, 7261, // 6928\n7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, // 6944\n7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, // 6960\n7294, 7295, 7296, 4844, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, // 6976\n7309, 7310, 7311, 7312, 7313, 7314, 7315, 7316, 4451, 7317, 7318, 7319, 7320, 7321, 7322, 7323, // 6992\n7324, 7325, 7326, 7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 7337, 7338, 7339, // 7008\n7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 4173, 7354, // 7024\n7355, 4845, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, // 7040\n7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, // 7056\n7386, 7387, 7388, 4846, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, // 7072\n7401, 7402, 7403, 7404, 7405, 3672, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414, 7415, // 7088\n7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, // 7104\n7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, // 7120\n7448, 7449, 7450, 7451, 7452, 7453, 4452, 7454, 3200, 7455, 7456, 7457, 7458, 7459, 7460, 7461, // 7136\n7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 4847, 7475, 7476, // 7152\n7477, 3133, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, // 7168\n7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 3347, 7503, 7504, 7505, 7506, // 7184\n7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 4848, // 7200\n7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, // 7216\n7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 3801, 4849, 7550, 7551, // 7232\n7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, // 7248\n7568, 7569, 3035, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, // 7264\n7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, // 7280\n7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, // 7296\n7615, 7616, 4850, 7617, 7618, 3802, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, // 7312\n7629, 7630, 7631, 7632, 4851, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, // 7328\n7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, // 7344\n7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 4453, 7671, 7672, 7673, 7674, // 7360\n7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, // 7376\n7691, 7692, 7693, 7694, 7695, 7696, 7697, 3443, 7698, 7699, 7700, 7701, 7702, 4454, 7703, 7704, // 7392\n7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 2472, 7714, 7715, 7716, 7717, 7718, 7719, // 7408\n7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 3954, 7732, 7733, 7734, // 7424\n7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, // 7440\n3134, 7751, 7752, 4852, 7753, 7754, 7755, 4853, 7756, 7757, 7758, 7759, 7760, 4174, 7761, 7762, // 7456\n7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, // 7472\n7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, // 7488\n7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 4854, 7806, 7807, 7808, 7809, // 7504\n7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, // 7520\n4855, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, // 7536\n7841, 7842, 7843, 7844, 7845, 7846, 7847, 3955, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, // 7552\n7856, 7857, 7858, 7859, 7860, 3444, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, // 7568\n7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, // 7584\n7887, 7888, 7889, 7890, 7891, 4175, 7892, 7893, 7894, 7895, 7896, 4856, 4857, 7897, 7898, 7899, // 7600\n7900, 2598, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 4455, 7909, 7910, 7911, 7912, 7913, // 7616\n7914, 3201, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 4858, 7922, 7923, 7924, 7925, 7926, 7927, // 7632\n7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, // 7648\n7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, // 7664\n7960, 7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, // 7680\n7976, 7977, 7978, 7979, 7980, 7981, 4859, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, // 7696\n7991, 7992, 7993, 7994, 7995, 7996, 4860, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, // 7712\n8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 4176, 8017, 8018, 8019, 8020, // 7728\n8021, 8022, 8023, 4861, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, // 7744\n8036, 4862, 4456, 8037, 8038, 8039, 8040, 4863, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, // 7760\n8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, // 7776\n8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, // 7792\n8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, // 7808\n8097, 8098, 8099, 4864, 4177, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, // 7824\n8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 4178, 8121, 8122, 8123, 8124, 8125, // 7840\n8126, 8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, // 7856\n8142, 8143, 8144, 8145, 4865, 4866, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, // 7872\n8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, 4179, 8166, 8167, 8168, 8169, 8170, // 7888\n8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 4457, 8182, 8183, 8184, 8185, // 7904\n8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, // 7920\n8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, // 7936\n8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, // 7952\n8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, // 7968\n8250, 8251, 8252, 8253, 8254, 8255, 8256, 3445, 8257, 8258, 8259, 8260, 8261, 8262, 4458, 8263, // 7984\n8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 4459, 8273, 8274, 8275, 8276, 3550, 8277, // 8000\n8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 4460, 8290, 8291, 8292, // 8016\n8293, 8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 4867, // 8032\n8308, 8309, 8310, 8311, 8312, 3551, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, // 8048\n8323, 8324, 8325, 8326, 4868, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, // 8064\n8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, // 8080\n8354, 8355, 8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 4869, 4461, 8364, 8365, 8366, 8367, // 8096\n8368, 8369, 8370, 4870, 8371, 8372, 8373, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, // 8112\n8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, // 8128\n8399, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 4871, 8411, 8412, 8413, // 8144\n8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 4462, 8423, 8424, 8425, 8426, 8427, 8428, // 8160\n8429, 8430, 8431, 8432, 8433, 2986, 8434, 8435, 8436, 8437, 8438, 8439, 8440, 8441, 8442, 8443, // 8176\n8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455, 8456, 8457, 8458, 8459, // 8192\n8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 8470, 8471, 8472, 8473, 8474, 8475, // 8208\n8476, 8477, 8478, 4180, 8479, 8480, 8481, 8482, 8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, // 8224\n8491, 8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8506, // 8240\n8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, // 8256\n8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, // 8272\n8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, // 8288\n8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 4872, 8565, 8566, 8567, 8568, 8569, // 8304\n8570, 8571, 8572, 8573, 4873, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 8581, 8582, 8583, 8584, // 8320\n8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, // 8336\n8601, 8602, 8603, 8604, 8605, 3803, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 4874, 3804, // 8352\n8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 3956, 8622, 8623, 8624, 8625, 8626, 8627, 8628, // 8368\n8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 2865, 8639, 8640, 8641, 8642, 8643, // 8384\n8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 4463, 8657, 8658, // 8400\n8659, 4875, 4876, 8660, 8661, 8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 8672, // 8416\n8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 4464, 8682, 8683, 8684, 8685, 8686, 8687, // 8432\n8688, 8689, 8690, 8691, 8692, 8693, 8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, // 8448\n8704, 8705, 8706, 8707, 8708, 8709, 2261, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, // 8464\n8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 4181, // 8480\n8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741, 8742, 8743, 8744, 8745, 8746, 8747, 8748, 8749, // 8496\n8750, 8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8760, 8761, 8762, 8763, 4877, 8764, // 8512\n8765, 8766, 8767, 8768, 8769, 8770, 8771, 8772, 8773, 8774, 8775, 8776, 8777, 8778, 8779, 8780, // 8528\n8781, 8782, 8783, 8784, 8785, 8786, 8787, 8788, 4878, 8789, 4879, 8790, 8791, 8792, 4880, 8793, // 8544\n8794, 8795, 8796, 8797, 8798, 8799, 8800, 8801, 4881, 8802, 8803, 8804, 8805, 8806, 8807, 8808, // 8560\n8809, 8810, 8811, 8812, 8813, 8814, 8815, 3957, 8816, 8817, 8818, 8819, 8820, 8821, 8822, 8823, // 8576\n8824, 8825, 8826, 8827, 8828, 8829, 8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8838, 8839, // 8592\n8840, 8841, 8842, 8843, 8844, 8845, 8846, 8847, 4882, 8848, 8849, 8850, 8851, 8852, 8853, 8854, // 8608\n8855, 8856, 8857, 8858, 8859, 8860, 8861, 8862, 8863, 8864, 8865, 8866, 8867, 8868, 8869, 8870, // 8624\n8871, 8872, 8873, 8874, 8875, 8876, 8877, 8878, 8879, 8880, 8881, 8882, 8883, 8884, 3202, 8885, // 8640\n8886, 8887, 8888, 8889, 8890, 8891, 8892, 8893, 8894, 8895, 8896, 8897, 8898, 8899, 8900, 8901, // 8656\n8902, 8903, 8904, 8905, 8906, 8907, 8908, 8909, 8910, 8911, 8912, 8913, 8914, 8915, 8916, 8917, // 8672\n8918, 8919, 8920, 8921, 8922, 8923, 8924, 4465, 8925, 8926, 8927, 8928, 8929, 8930, 8931, 8932, // 8688\n4883, 8933, 8934, 8935, 8936, 8937, 8938, 8939, 8940, 8941, 8942, 8943, 2214, 8944, 8945, 8946, // 8704\n8947, 8948, 8949, 8950, 8951, 8952, 8953, 8954, 8955, 8956, 8957, 8958, 8959, 8960, 8961, 8962, // 8720\n8963, 8964, 8965, 4884, 8966, 8967, 8968, 8969, 8970, 8971, 8972, 8973, 8974, 8975, 8976, 8977, // 8736\n8978, 8979, 8980, 8981, 8982, 8983, 8984, 8985, 8986, 8987, 8988, 8989, 8990, 8991, 8992, 4885, // 8752\n8993, 8994, 8995, 8996, 8997, 8998, 8999, 9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, // 8768\n9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 4182, 9022, 9023, // 8784\n9024, 9025, 9026, 9027, 9028, 9029, 9030, 9031, 9032, 9033, 9034, 9035, 9036, 9037, 9038, 9039, // 8800\n9040, 9041, 9042, 9043, 9044, 9045, 9046, 9047, 9048, 9049, 9050, 9051, 9052, 9053, 9054, 9055, // 8816\n9056, 9057, 9058, 9059, 9060, 9061, 9062, 9063, 4886, 9064, 9065, 9066, 9067, 9068, 9069, 4887, // 8832\n9070, 9071, 9072, 9073, 9074, 9075, 9076, 9077, 9078, 9079, 9080, 9081, 9082, 9083, 9084, 9085, // 8848\n9086, 9087, 9088, 9089, 9090, 9091, 9092, 9093, 9094, 9095, 9096, 9097, 9098, 9099, 9100, 9101, // 8864\n9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, // 8880\n9118, 9119, 9120, 9121, 9122, 9123, 9124, 9125, 9126, 9127, 9128, 9129, 9130, 9131, 9132, 9133, // 8896\n9134, 9135, 9136, 9137, 9138, 9139, 9140, 9141, 3958, 9142, 9143, 9144, 9145, 9146, 9147, 9148, // 8912\n9149, 9150, 9151, 4888, 9152, 9153, 9154, 9155, 9156, 9157, 9158, 9159, 9160, 9161, 9162, 9163, // 8928\n9164, 9165, 9166, 9167, 9168, 9169, 9170, 9171, 9172, 9173, 9174, 9175, 4889, 9176, 9177, 9178, // 8944\n9179, 9180, 9181, 9182, 9183, 9184, 9185, 9186, 9187, 9188, 9189, 9190, 9191, 9192, 9193, 9194, // 8960\n9195, 9196, 9197, 9198, 9199, 9200, 9201, 9202, 9203, 4890, 9204, 9205, 9206, 9207, 9208, 9209, // 8976\n9210, 9211, 9212, 9213, 9214, 9215, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 4466, 9223, 9224, // 8992\n9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, // 9008\n9241, 9242, 9243, 9244, 9245, 4891, 9246, 9247, 9248, 9249, 9250, 9251, 9252, 9253, 9254, 9255, // 9024\n9256, 9257, 4892, 9258, 9259, 9260, 9261, 4893, 4894, 9262, 9263, 9264, 9265, 9266, 9267, 9268, // 9040\n9269, 9270, 9271, 9272, 9273, 4467, 9274, 9275, 9276, 9277, 9278, 9279, 9280, 9281, 9282, 9283, // 9056\n9284, 9285, 3673, 9286, 9287, 9288, 9289, 9290, 9291, 9292, 9293, 9294, 9295, 9296, 9297, 9298, // 9072\n9299, 9300, 9301, 9302, 9303, 9304, 9305, 9306, 9307, 9308, 9309, 9310, 9311, 9312, 9313, 9314, // 9088\n9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 4895, 9323, 9324, 9325, 9326, 9327, 9328, 9329, // 9104\n9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, // 9120\n9346, 9347, 4468, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, // 9136\n9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9372, 9373, 4896, 9374, 4469, // 9152\n9375, 9376, 9377, 9378, 9379, 4897, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, // 9168\n9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, // 9184\n9406, 4470, 9407, 2751, 9408, 9409, 3674, 3552, 9410, 9411, 9412, 9413, 9414, 9415, 9416, 9417, // 9200\n9418, 9419, 9420, 9421, 4898, 9422, 9423, 9424, 9425, 9426, 9427, 9428, 9429, 3959, 9430, 9431, // 9216\n9432, 9433, 9434, 9435, 9436, 4471, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, // 9232\n9447, 9448, 9449, 9450, 3348, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, // 9248\n9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 4899, 9473, 9474, 9475, 9476, // 9264\n9477, 4900, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 3349, 9489, 9490, // 9280\n9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, // 9296\n9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 4901, 9521, // 9312\n9522, 9523, 9524, 9525, 9526, 4902, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, // 9328\n9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, // 9344\n9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, // 9360\n9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, // 9376\n3805, 9585, 9586, 9587, 9588, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 9597, 9598, 9599, // 9392\n9600, 9601, 9602, 4903, 9603, 9604, 9605, 9606, 9607, 4904, 9608, 9609, 9610, 9611, 9612, 9613, // 9408\n9614, 4905, 9615, 9616, 9617, 9618, 9619, 9620, 9621, 9622, 9623, 9624, 9625, 9626, 9627, 9628, // 9424\n9629, 9630, 9631, 9632, 4906, 9633, 9634, 9635, 9636, 9637, 9638, 9639, 9640, 9641, 9642, 9643, // 9440\n4907, 9644, 9645, 9646, 9647, 9648, 9649, 9650, 9651, 9652, 9653, 9654, 9655, 9656, 9657, 9658, // 9456\n9659, 9660, 9661, 9662, 9663, 9664, 9665, 9666, 9667, 9668, 9669, 9670, 9671, 9672, 4183, 9673, // 9472\n9674, 9675, 9676, 9677, 4908, 9678, 9679, 9680, 9681, 4909, 9682, 9683, 9684, 9685, 9686, 9687, // 9488\n9688, 9689, 9690, 4910, 9691, 9692, 9693, 3675, 9694, 9695, 9696, 2945, 9697, 9698, 9699, 9700, // 9504\n9701, 9702, 9703, 9704, 9705, 4911, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, // 9520\n9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725, 9726, 9727, 9728, 9729, 9730, 9731, // 9536\n9732, 9733, 9734, 9735, 4912, 9736, 9737, 9738, 9739, 9740, 4913, 9741, 9742, 9743, 9744, 9745, // 9552\n9746, 9747, 9748, 9749, 9750, 9751, 9752, 9753, 9754, 9755, 9756, 9757, 9758, 4914, 9759, 9760, // 9568\n9761, 9762, 9763, 9764, 9765, 9766, 9767, 9768, 9769, 9770, 9771, 9772, 9773, 9774, 9775, 9776, // 9584\n9777, 9778, 9779, 9780, 9781, 9782, 4915, 9783, 9784, 9785, 9786, 9787, 9788, 9789, 9790, 9791, // 9600\n9792, 9793, 4916, 9794, 9795, 9796, 9797, 9798, 9799, 9800, 9801, 9802, 9803, 9804, 9805, 9806, // 9616\n9807, 9808, 9809, 9810, 9811, 9812, 9813, 9814, 9815, 9816, 9817, 9818, 9819, 9820, 9821, 9822, // 9632\n9823, 9824, 9825, 9826, 9827, 9828, 9829, 9830, 9831, 9832, 9833, 9834, 9835, 9836, 9837, 9838, // 9648\n9839, 9840, 9841, 9842, 9843, 9844, 9845, 9846, 9847, 9848, 9849, 9850, 9851, 9852, 9853, 9854, // 9664\n9855, 9856, 9857, 9858, 9859, 9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 4917, 9869, // 9680\n9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 9879, 9880, 9881, 9882, 9883, 9884, 9885, // 9696\n9886, 9887, 9888, 9889, 9890, 9891, 9892, 4472, 9893, 9894, 9895, 9896, 9897, 3806, 9898, 9899, // 9712\n9900, 9901, 9902, 9903, 9904, 9905, 9906, 9907, 9908, 9909, 9910, 9911, 9912, 9913, 9914, 4918, // 9728\n9915, 9916, 9917, 4919, 9918, 9919, 9920, 9921, 4184, 9922, 9923, 9924, 9925, 9926, 9927, 9928, // 9744\n9929, 9930, 9931, 9932, 9933, 9934, 9935, 9936, 9937, 9938, 9939, 9940, 9941, 9942, 9943, 9944, // 9760\n9945, 9946, 4920, 9947, 9948, 9949, 9950, 9951, 9952, 9953, 9954, 9955, 4185, 9956, 9957, 9958, // 9776\n9959, 9960, 9961, 9962, 9963, 9964, 9965, 4921, 9966, 9967, 9968, 4473, 9969, 9970, 9971, 9972, // 9792\n9973, 9974, 9975, 9976, 9977, 4474, 9978, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987, // 9808\n9988, 9989, 9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 9999, 10000, 10001, 10002, 10003, // 9824\n10004, 10005, 10006, 10007, 10008, 10009, 10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017, 10018, 10019, // 9840\n10020, 10021, 4922, 10022, 4923, 10023, 10024, 10025, 10026, 10027, 10028, 10029, 10030, 10031, 10032, 10033, // 9856\n10034, 10035, 10036, 10037, 10038, 10039, 10040, 10041, 10042, 10043, 10044, 10045, 10046, 10047, 10048, 4924, // 9872\n10049, 10050, 10051, 10052, 10053, 10054, 10055, 10056, 10057, 10058, 10059, 10060, 10061, 10062, 10063, 10064, // 9888\n10065, 10066, 10067, 10068, 10069, 10070, 10071, 10072, 10073, 10074, 10075, 10076, 10077, 10078, 10079, 10080, // 9904\n10081, 10082, 10083, 10084, 10085, 10086, 10087, 4475, 10088, 10089, 10090, 10091, 10092, 10093, 10094, 10095, // 9920\n10096, 10097, 4476, 10098, 10099, 10100, 10101, 10102, 10103, 10104, 10105, 10106, 10107, 10108, 10109, 10110, // 9936\n10111, 2174, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 10125, // 9952\n10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133, 10134, 10135, 10136, 10137, 10138, 10139, 10140, 3807, // 9968\n4186, 4925, 10141, 10142, 10143, 10144, 10145, 10146, 10147, 4477, 4187, 10148, 10149, 10150, 10151, 10152, // 9984\n10153, 4188, 10154, 10155, 10156, 10157, 10158, 10159, 10160, 10161, 4926, 10162, 10163, 10164, 10165, 10166, //10000\n10167, 10168, 10169, 10170, 10171, 10172, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181, 10182, //10016\n10183, 10184, 10185, 10186, 10187, 10188, 10189, 10190, 10191, 10192, 3203, 10193, 10194, 10195, 10196, 10197, //10032\n10198, 10199, 10200, 4478, 10201, 10202, 10203, 10204, 4479, 10205, 10206, 10207, 10208, 10209, 10210, 10211, //10048\n10212, 10213, 10214, 10215, 10216, 10217, 10218, 10219, 10220, 10221, 10222, 10223, 10224, 10225, 10226, 10227, //10064\n10228, 10229, 10230, 10231, 10232, 10233, 10234, 4927, 10235, 10236, 10237, 10238, 10239, 10240, 10241, 10242, //10080\n10243, 10244, 10245, 10246, 10247, 10248, 10249, 10250, 10251, 10252, 10253, 10254, 10255, 10256, 10257, 10258, //10096\n10259, 10260, 10261, 10262, 10263, 10264, 10265, 10266, 10267, 10268, 10269, 10270, 10271, 10272, 10273, 4480, //10112\n4928, 4929, 10274, 10275, 10276, 10277, 10278, 10279, 10280, 10281, 10282, 10283, 10284, 10285, 10286, 10287, //10128\n10288, 10289, 10290, 10291, 10292, 10293, 10294, 10295, 10296, 10297, 10298, 10299, 10300, 10301, 10302, 10303, //10144\n10304, 10305, 10306, 10307, 10308, 10309, 10310, 10311, 10312, 10313, 10314, 10315, 10316, 10317, 10318, 10319, //10160\n10320, 10321, 10322, 10323, 10324, 10325, 10326, 10327, 10328, 10329, 10330, 10331, 10332, 10333, 10334, 4930, //10176\n10335, 10336, 10337, 10338, 10339, 10340, 10341, 10342, 4931, 10343, 10344, 10345, 10346, 10347, 10348, 10349, //10192\n10350, 10351, 10352, 10353, 10354, 10355, 3088, 10356, 2786, 10357, 10358, 10359, 10360, 4189, 10361, 10362, //10208\n10363, 10364, 10365, 10366, 10367, 10368, 10369, 10370, 10371, 10372, 10373, 10374, 10375, 4932, 10376, 10377, //10224\n10378, 10379, 10380, 10381, 10382, 10383, 10384, 10385, 10386, 10387, 10388, 10389, 10390, 10391, 10392, 4933, //10240\n10393, 10394, 10395, 4934, 10396, 10397, 10398, 10399, 10400, 10401, 10402, 10403, 10404, 10405, 10406, 10407, //10256\n10408, 10409, 10410, 10411, 10412, 3446, 10413, 10414, 10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, //10272\n10423, 4935, 10424, 10425, 10426, 10427, 10428, 10429, 10430, 4936, 10431, 10432, 10433, 10434, 10435, 10436, //10288\n10437, 10438, 10439, 10440, 10441, 10442, 10443, 4937, 10444, 10445, 10446, 10447, 4481, 10448, 10449, 10450, //10304\n10451, 10452, 10453, 10454, 10455, 10456, 10457, 10458, 10459, 10460, 10461, 10462, 10463, 10464, 10465, 10466, //10320\n10467, 10468, 10469, 10470, 10471, 10472, 10473, 10474, 10475, 10476, 10477, 10478, 10479, 10480, 10481, 10482, //10336\n10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 10491, 10492, 10493, 10494, 10495, 10496, 10497, 10498, //10352\n10499, 10500, 10501, 10502, 10503, 10504, 10505, 4938, 10506, 10507, 10508, 10509, 10510, 2552, 10511, 10512, //10368\n10513, 10514, 10515, 10516, 3447, 10517, 10518, 10519, 10520, 10521, 10522, 10523, 10524, 10525, 10526, 10527, //10384\n10528, 10529, 10530, 10531, 10532, 10533, 10534, 10535, 10536, 10537, 10538, 10539, 10540, 10541, 10542, 10543, //10400\n4482, 10544, 4939, 10545, 10546, 10547, 10548, 10549, 10550, 10551, 10552, 10553, 10554, 10555, 10556, 10557, //10416\n10558, 10559, 10560, 10561, 10562, 10563, 10564, 10565, 10566, 10567, 3676, 4483, 10568, 10569, 10570, 10571, //10432\n10572, 3448, 10573, 10574, 10575, 10576, 10577, 10578, 10579, 10580, 10581, 10582, 10583, 10584, 10585, 10586, //10448\n10587, 10588, 10589, 10590, 10591, 10592, 10593, 10594, 10595, 10596, 10597, 10598, 10599, 10600, 10601, 10602, //10464\n10603, 10604, 10605, 10606, 10607, 10608, 10609, 10610, 10611, 10612, 10613, 10614, 10615, 10616, 10617, 10618, //10480\n10619, 10620, 10621, 10622, 10623, 10624, 10625, 10626, 10627, 4484, 10628, 10629, 10630, 10631, 10632, 4940, //10496\n10633, 10634, 10635, 10636, 10637, 10638, 10639, 10640, 10641, 10642, 10643, 10644, 10645, 10646, 10647, 10648, //10512\n10649, 10650, 10651, 10652, 10653, 10654, 10655, 10656, 4941, 10657, 10658, 10659, 2599, 10660, 10661, 10662, //10528\n10663, 10664, 10665, 10666, 3089, 10667, 10668, 10669, 10670, 10671, 10672, 10673, 10674, 10675, 10676, 10677, //10544\n10678, 10679, 10680, 4942, 10681, 10682, 10683, 10684, 10685, 10686, 10687, 10688, 10689, 10690, 10691, 10692, //10560\n10693, 10694, 10695, 10696, 10697, 4485, 10698, 10699, 10700, 10701, 10702, 10703, 10704, 4943, 10705, 3677, //10576\n10706, 10707, 10708, 10709, 10710, 10711, 10712, 4944, 10713, 10714, 10715, 10716, 10717, 10718, 10719, 10720, //10592\n10721, 10722, 10723, 10724, 10725, 10726, 10727, 10728, 4945, 10729, 10730, 10731, 10732, 10733, 10734, 10735, //10608\n10736, 10737, 10738, 10739, 10740, 10741, 10742, 10743, 10744, 10745, 10746, 10747, 10748, 10749, 10750, 10751, //10624\n10752, 10753, 10754, 10755, 10756, 10757, 10758, 10759, 10760, 10761, 4946, 10762, 10763, 10764, 10765, 10766, //10640\n10767, 4947, 4948, 10768, 10769, 10770, 10771, 10772, 10773, 10774, 10775, 10776, 10777, 10778, 10779, 10780, //10656\n10781, 10782, 10783, 10784, 10785, 10786, 10787, 10788, 10789, 10790, 10791, 10792, 10793, 10794, 10795, 10796, //10672\n10797, 10798, 10799, 10800, 10801, 10802, 10803, 10804, 10805, 10806, 10807, 10808, 10809, 10810, 10811, 10812, //10688\n10813, 10814, 10815, 10816, 10817, 10818, 10819, 10820, 10821, 10822, 10823, 10824, 10825, 10826, 10827, 10828, //10704\n10829, 10830, 10831, 10832, 10833, 10834, 10835, 10836, 10837, 10838, 10839, 10840, 10841, 10842, 10843, 10844, //10720\n10845, 10846, 10847, 10848, 10849, 10850, 10851, 10852, 10853, 10854, 10855, 10856, 10857, 10858, 10859, 10860, //10736\n10861, 10862, 10863, 10864, 10865, 10866, 10867, 10868, 10869, 10870, 10871, 10872, 10873, 10874, 10875, 10876, //10752\n10877, 10878, 4486, 10879, 10880, 10881, 10882, 10883, 10884, 10885, 4949, 10886, 10887, 10888, 10889, 10890, //10768\n10891, 10892, 10893, 10894, 10895, 10896, 10897, 10898, 10899, 10900, 10901, 10902, 10903, 10904, 10905, 10906, //10784\n10907, 10908, 10909, 10910, 10911, 10912, 10913, 10914, 10915, 10916, 10917, 10918, 10919, 4487, 10920, 10921, //10800\n10922, 10923, 10924, 10925, 10926, 10927, 10928, 10929, 10930, 10931, 10932, 4950, 10933, 10934, 10935, 10936, //10816\n10937, 10938, 10939, 10940, 10941, 10942, 10943, 10944, 10945, 10946, 10947, 10948, 10949, 4488, 10950, 10951, //10832\n10952, 10953, 10954, 10955, 10956, 10957, 10958, 10959, 4190, 10960, 10961, 10962, 10963, 10964, 10965, 10966, //10848\n10967, 10968, 10969, 10970, 10971, 10972, 10973, 10974, 10975, 10976, 10977, 10978, 10979, 10980, 10981, 10982, //10864\n10983, 10984, 10985, 10986, 10987, 10988, 10989, 10990, 10991, 10992, 10993, 10994, 10995, 10996, 10997, 10998, //10880\n10999, 11000, 11001, 11002, 11003, 11004, 11005, 11006, 3960, 11007, 11008, 11009, 11010, 11011, 11012, 11013, //10896\n11014, 11015, 11016, 11017, 11018, 11019, 11020, 11021, 11022, 11023, 11024, 11025, 11026, 11027, 11028, 11029, //10912\n11030, 11031, 11032, 4951, 11033, 11034, 11035, 11036, 11037, 11038, 11039, 11040, 11041, 11042, 11043, 11044, //10928\n11045, 11046, 11047, 4489, 11048, 11049, 11050, 11051, 4952, 11052, 11053, 11054, 11055, 11056, 11057, 11058, //10944\n4953, 11059, 11060, 11061, 11062, 11063, 11064, 11065, 11066, 11067, 11068, 11069, 11070, 11071, 4954, 11072, //10960\n11073, 11074, 11075, 11076, 11077, 11078, 11079, 11080, 11081, 11082, 11083, 11084, 11085, 11086, 11087, 11088, //10976\n11089, 11090, 11091, 11092, 11093, 11094, 11095, 11096, 11097, 11098, 11099, 11100, 11101, 11102, 11103, 11104, //10992\n11105, 11106, 11107, 11108, 11109, 11110, 11111, 11112, 11113, 11114, 11115, 3808, 11116, 11117, 11118, 11119, //11008\n11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128, 11129, 11130, 11131, 11132, 11133, 11134, 4955, //11024\n11135, 11136, 11137, 11138, 11139, 11140, 11141, 11142, 11143, 11144, 11145, 11146, 11147, 11148, 11149, 11150, //11040\n11151, 11152, 11153, 11154, 11155, 11156, 11157, 11158, 11159, 11160, 11161, 4956, 11162, 11163, 11164, 11165, //11056\n11166, 11167, 11168, 11169, 11170, 11171, 11172, 11173, 11174, 11175, 11176, 11177, 11178, 11179, 11180, 4957, //11072\n11181, 11182, 11183, 11184, 11185, 11186, 4958, 11187, 11188, 11189, 11190, 11191, 11192, 11193, 11194, 11195, //11088\n11196, 11197, 11198, 11199, 11200, 3678, 11201, 11202, 11203, 11204, 11205, 11206, 4191, 11207, 11208, 11209, //11104\n11210, 11211, 11212, 11213, 11214, 11215, 11216, 11217, 11218, 11219, 11220, 11221, 11222, 11223, 11224, 11225, //11120\n11226, 11227, 11228, 11229, 11230, 11231, 11232, 11233, 11234, 11235, 11236, 11237, 11238, 11239, 11240, 11241, //11136\n11242, 11243, 11244, 11245, 11246, 11247, 11248, 11249, 11250, 11251, 4959, 11252, 11253, 11254, 11255, 11256, //11152\n11257, 11258, 11259, 11260, 11261, 11262, 11263, 11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, //11168\n11273, 11274, 11275, 11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, //11184\n11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, 11303, 11304, //11200\n11305, 11306, 11307, 11308, 11309, 11310, 11311, 11312, 11313, 11314, 3679, 11315, 11316, 11317, 11318, 4490, //11216\n11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327, 11328, 11329, 11330, 11331, 11332, 11333, 11334, //11232\n11335, 11336, 11337, 11338, 11339, 11340, 11341, 11342, 11343, 11344, 11345, 11346, 11347, 4960, 11348, 11349, //11248\n11350, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 11359, 11360, 11361, 11362, 11363, 11364, 11365, //11264\n11366, 11367, 11368, 11369, 11370, 11371, 11372, 11373, 11374, 11375, 11376, 11377, 3961, 4961, 11378, 11379, //11280\n11380, 11381, 11382, 11383, 11384, 11385, 11386, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11394, 11395, //11296\n11396, 11397, 4192, 11398, 11399, 11400, 11401, 11402, 11403, 11404, 11405, 11406, 11407, 11408, 11409, 11410, //11312\n11411, 4962, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421, 11422, 11423, 11424, 11425, //11328\n11426, 11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11437, 11438, 11439, 11440, 11441, //11344\n11442, 11443, 11444, 11445, 11446, 11447, 11448, 11449, 11450, 11451, 11452, 11453, 11454, 11455, 11456, 11457, //11360\n11458, 11459, 11460, 11461, 11462, 11463, 11464, 11465, 11466, 11467, 11468, 11469, 4963, 11470, 11471, 4491, //11376\n11472, 11473, 11474, 11475, 4964, 11476, 11477, 11478, 11479, 11480, 11481, 11482, 11483, 11484, 11485, 11486, //11392\n11487, 11488, 11489, 11490, 11491, 11492, 4965, 11493, 11494, 11495, 11496, 11497, 11498, 11499, 11500, 11501, //11408\n11502, 11503, 11504, 11505, 11506, 11507, 11508, 11509, 11510, 11511, 11512, 11513, 11514, 11515, 11516, 11517, //11424\n11518, 11519, 11520, 11521, 11522, 11523, 11524, 11525, 11526, 11527, 11528, 11529, 3962, 11530, 11531, 11532, //11440\n11533, 11534, 11535, 11536, 11537, 11538, 11539, 11540, 11541, 11542, 11543, 11544, 11545, 11546, 11547, 11548, //11456\n11549, 11550, 11551, 11552, 11553, 11554, 11555, 11556, 11557, 11558, 11559, 11560, 11561, 11562, 11563, 11564, //11472\n4193, 4194, 11565, 11566, 11567, 11568, 11569, 11570, 11571, 11572, 11573, 11574, 11575, 11576, 11577, 11578, //11488\n11579, 11580, 11581, 11582, 11583, 11584, 11585, 11586, 11587, 11588, 11589, 11590, 11591, 4966, 4195, 11592, //11504\n11593, 11594, 11595, 11596, 11597, 11598, 11599, 11600, 11601, 11602, 11603, 11604, 3090, 11605, 11606, 11607, //11520\n11608, 11609, 11610, 4967, 11611, 11612, 11613, 11614, 11615, 11616, 11617, 11618, 11619, 11620, 11621, 11622, //11536\n11623, 11624, 11625, 11626, 11627, 11628, 11629, 11630, 11631, 11632, 11633, 11634, 11635, 11636, 11637, 11638, //11552\n11639, 11640, 11641, 11642, 11643, 11644, 11645, 11646, 11647, 11648, 11649, 11650, 11651, 11652, 11653, 11654, //11568\n11655, 11656, 11657, 11658, 11659, 11660, 11661, 11662, 11663, 11664, 11665, 11666, 11667, 11668, 11669, 11670, //11584\n11671, 11672, 11673, 11674, 4968, 11675, 11676, 11677, 11678, 11679, 11680, 11681, 11682, 11683, 11684, 11685, //11600\n11686, 11687, 11688, 11689, 11690, 11691, 11692, 11693, 3809, 11694, 11695, 11696, 11697, 11698, 11699, 11700, //11616\n11701, 11702, 11703, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11711, 11712, 11713, 11714, 11715, 11716, //11632\n11717, 11718, 3553, 11719, 11720, 11721, 11722, 11723, 11724, 11725, 11726, 11727, 11728, 11729, 11730, 4969, //11648\n11731, 11732, 11733, 11734, 11735, 11736, 11737, 11738, 11739, 11740, 4492, 11741, 11742, 11743, 11744, 11745, //11664\n11746, 11747, 11748, 11749, 11750, 11751, 11752, 4970, 11753, 11754, 11755, 11756, 11757, 11758, 11759, 11760, //11680\n11761, 11762, 11763, 11764, 11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775, 11776, //11696\n11777, 11778, 11779, 11780, 11781, 11782, 11783, 11784, 11785, 11786, 11787, 11788, 11789, 11790, 4971, 11791, //11712\n11792, 11793, 11794, 11795, 11796, 11797, 4972, 11798, 11799, 11800, 11801, 11802, 11803, 11804, 11805, 11806, //11728\n11807, 11808, 11809, 11810, 4973, 11811, 11812, 11813, 11814, 11815, 11816, 11817, 11818, 11819, 11820, 11821, //11744\n11822, 11823, 11824, 11825, 11826, 11827, 11828, 11829, 11830, 11831, 11832, 11833, 11834, 3680, 3810, 11835, //11760\n11836, 4974, 11837, 11838, 11839, 11840, 11841, 11842, 11843, 11844, 11845, 11846, 11847, 11848, 11849, 11850, //11776\n11851, 11852, 11853, 11854, 11855, 11856, 11857, 11858, 11859, 11860, 11861, 11862, 11863, 11864, 11865, 11866, //11792\n11867, 11868, 11869, 11870, 11871, 11872, 11873, 11874, 11875, 11876, 11877, 11878, 11879, 11880, 11881, 11882, //11808\n11883, 11884, 4493, 11885, 11886, 11887, 11888, 11889, 11890, 11891, 11892, 11893, 11894, 11895, 11896, 11897, //11824\n11898, 11899, 11900, 11901, 11902, 11903, 11904, 11905, 11906, 11907, 11908, 11909, 11910, 11911, 11912, 11913, //11840\n11914, 11915, 4975, 11916, 11917, 11918, 11919, 11920, 11921, 11922, 11923, 11924, 11925, 11926, 11927, 11928, //11856\n11929, 11930, 11931, 11932, 11933, 11934, 11935, 11936, 11937, 11938, 11939, 11940, 11941, 11942, 11943, 11944, //11872\n11945, 11946, 11947, 11948, 11949, 4976, 11950, 11951, 11952, 11953, 11954, 11955, 11956, 11957, 11958, 11959, //11888\n11960, 11961, 11962, 11963, 11964, 11965, 11966, 11967, 11968, 11969, 11970, 11971, 11972, 11973, 11974, 11975, //11904\n11976, 11977, 11978, 11979, 11980, 11981, 11982, 11983, 11984, 11985, 11986, 11987, 4196, 11988, 11989, 11990, //11920\n11991, 11992, 4977, 11993, 11994, 11995, 11996, 11997, 11998, 11999, 12000, 12001, 12002, 12003, 12004, 12005, //11936\n12006, 12007, 12008, 12009, 12010, 12011, 12012, 12013, 12014, 12015, 12016, 12017, 12018, 12019, 12020, 12021, //11952\n12022, 12023, 12024, 12025, 12026, 12027, 12028, 12029, 12030, 12031, 12032, 12033, 12034, 12035, 12036, 12037, //11968\n12038, 12039, 12040, 12041, 12042, 12043, 12044, 12045, 12046, 12047, 12048, 12049, 12050, 12051, 12052, 12053, //11984\n12054, 12055, 12056, 12057, 12058, 12059, 12060, 12061, 4978, 12062, 12063, 12064, 12065, 12066, 12067, 12068, //12000\n12069, 12070, 12071, 12072, 12073, 12074, 12075, 12076, 12077, 12078, 12079, 12080, 12081, 12082, 12083, 12084, //12016\n12085, 12086, 12087, 12088, 12089, 12090, 12091, 12092, 12093, 12094, 12095, 12096, 12097, 12098, 12099, 12100, //12032\n12101, 12102, 12103, 12104, 12105, 12106, 12107, 12108, 12109, 12110, 12111, 12112, 12113, 12114, 12115, 12116, //12048\n12117, 12118, 12119, 12120, 12121, 12122, 12123, 4979, 12124, 12125, 12126, 12127, 12128, 4197, 12129, 12130, //12064\n12131, 12132, 12133, 12134, 12135, 12136, 12137, 12138, 12139, 12140, 12141, 12142, 12143, 12144, 12145, 12146, //12080\n12147, 12148, 12149, 12150, 12151, 12152, 12153, 12154, 4980, 12155, 12156, 12157, 12158, 12159, 12160, 4494, //12096\n12161, 12162, 12163, 12164, 3811, 12165, 12166, 12167, 12168, 12169, 4495, 12170, 12171, 4496, 12172, 12173, //12112\n12174, 12175, 12176, 3812, 12177, 12178, 12179, 12180, 12181, 12182, 12183, 12184, 12185, 12186, 12187, 12188, //12128\n12189, 12190, 12191, 12192, 12193, 12194, 12195, 12196, 12197, 12198, 12199, 12200, 12201, 12202, 12203, 12204, //12144\n12205, 12206, 12207, 12208, 12209, 12210, 12211, 12212, 12213, 12214, 12215, 12216, 12217, 12218, 12219, 12220, //12160\n12221, 4981, 12222, 12223, 12224, 12225, 12226, 12227, 12228, 12229, 12230, 12231, 12232, 12233, 12234, 12235, //12176\n4982, 12236, 12237, 12238, 12239, 12240, 12241, 12242, 12243, 12244, 12245, 4983, 12246, 12247, 12248, 12249, //12192\n4984, 12250, 12251, 12252, 12253, 12254, 12255, 12256, 12257, 12258, 12259, 12260, 12261, 12262, 12263, 12264, //12208\n4985, 12265, 4497, 12266, 12267, 12268, 12269, 12270, 12271, 12272, 12273, 12274, 12275, 12276, 12277, 12278, //12224\n12279, 12280, 12281, 12282, 12283, 12284, 12285, 12286, 12287, 4986, 12288, 12289, 12290, 12291, 12292, 12293, //12240\n12294, 12295, 12296, 2473, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12304, 12305, 12306, 12307, 12308, //12256\n12309, 12310, 12311, 12312, 12313, 12314, 12315, 12316, 12317, 12318, 12319, 3963, 12320, 12321, 12322, 12323, //12272\n12324, 12325, 12326, 12327, 12328, 12329, 12330, 12331, 12332, 4987, 12333, 12334, 12335, 12336, 12337, 12338, //12288\n12339, 12340, 12341, 12342, 12343, 12344, 12345, 12346, 12347, 12348, 12349, 12350, 12351, 12352, 12353, 12354, //12304\n12355, 12356, 12357, 12358, 12359, 3964, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, //12320\n12370, 3965, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, //12336\n12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, //12352\n12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 4988, 12409, 12410, 12411, 12412, 12413, 12414, 12415, //12368\n12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, //12384\n12432, 12433, 12434, 12435, 12436, 12437, 12438, 3554, 12439, 12440, 12441, 12442, 12443, 12444, 12445, 12446, //12400\n12447, 12448, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, //12416\n12463, 12464, 4989, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, //12432\n12478, 12479, 12480, 4990, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 4498, 12490, 12491, //12448\n12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, //12464\n12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, //12480\n12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 12535, 12536, 12537, 12538, 12539, //12496\n12540, 12541, 12542, 12543, 12544, 12545, 12546, 12547, 12548, 12549, 12550, 12551, 4991, 12552, 12553, 12554, //12512\n12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, //12528\n12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 3036, 12579, 12580, 12581, 12582, 12583, 3966, 12584, //12544\n12585, 12586, 12587, 12588, 12589, 12590, 12591, 12592, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, //12560\n12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, //12576\n12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, //12592\n12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 4499, 12647, //12608\n12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, //12624\n12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, //12640\n12680, 12681, 12682, 12683, 12684, 12685, 12686, 12687, 12688, 12689, 12690, 12691, 12692, 12693, 12694, 12695, //12656\n12696, 12697, 12698, 4992, 12699, 12700, 12701, 12702, 12703, 12704, 12705, 12706, 12707, 12708, 12709, 12710, //12672\n12711, 12712, 12713, 12714, 12715, 12716, 12717, 12718, 12719, 12720, 12721, 12722, 12723, 12724, 12725, 12726, //12688\n12727, 12728, 12729, 12730, 12731, 12732, 12733, 12734, 12735, 12736, 12737, 12738, 12739, 12740, 12741, 12742, //12704\n12743, 12744, 12745, 12746, 12747, 12748, 12749, 12750, 12751, 12752, 12753, 12754, 12755, 12756, 12757, 12758, //12720\n12759, 12760, 12761, 12762, 12763, 12764, 12765, 12766, 12767, 12768, 12769, 12770, 12771, 12772, 12773, 12774, //12736\n12775, 12776, 12777, 12778, 4993, 2175, 12779, 12780, 12781, 12782, 12783, 12784, 12785, 12786, 4500, 12787, //12752\n12788, 12789, 12790, 12791, 12792, 12793, 12794, 12795, 12796, 12797, 12798, 12799, 12800, 12801, 12802, 12803, //12768\n12804, 12805, 12806, 12807, 12808, 12809, 12810, 12811, 12812, 12813, 12814, 12815, 12816, 12817, 12818, 12819, //12784\n12820, 12821, 12822, 12823, 12824, 12825, 12826, 4198, 3967, 12827, 12828, 12829, 12830, 12831, 12832, 12833, //12800\n12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 12842, 12843, 12844, 12845, 12846, 12847, 12848, 12849, //12816\n12850, 12851, 12852, 12853, 12854, 12855, 12856, 12857, 12858, 12859, 12860, 12861, 4199, 12862, 12863, 12864, //12832\n12865, 12866, 12867, 12868, 12869, 12870, 12871, 12872, 12873, 12874, 12875, 12876, 12877, 12878, 12879, 12880, //12848\n12881, 12882, 12883, 12884, 12885, 12886, 12887, 4501, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, //12864\n12896, 12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12908, 12909, 12910, 12911, //12880\n12912, 4994, 12913, 12914, 12915, 12916, 12917, 12918, 12919, 12920, 12921, 12922, 12923, 12924, 12925, 12926, //12896\n12927, 12928, 12929, 12930, 12931, 12932, 12933, 12934, 12935, 12936, 12937, 12938, 12939, 12940, 12941, 12942, //12912\n12943, 12944, 12945, 12946, 12947, 12948, 12949, 12950, 12951, 12952, 12953, 12954, 12955, 12956, 1772, 12957, //12928\n12958, 12959, 12960, 12961, 12962, 12963, 12964, 12965, 12966, 12967, 12968, 12969, 12970, 12971, 12972, 12973, //12944\n12974, 12975, 12976, 12977, 12978, 12979, 12980, 12981, 12982, 12983, 12984, 12985, 12986, 12987, 12988, 12989, //12960\n12990, 12991, 12992, 12993, 12994, 12995, 12996, 12997, 4502, 12998, 4503, 12999, 13000, 13001, 13002, 13003, //12976\n4504, 13004, 13005, 13006, 13007, 13008, 13009, 13010, 13011, 13012, 13013, 13014, 13015, 13016, 13017, 13018, //12992\n13019, 13020, 13021, 13022, 13023, 13024, 13025, 13026, 13027, 13028, 13029, 3449, 13030, 13031, 13032, 13033, //13008\n13034, 13035, 13036, 13037, 13038, 13039, 13040, 13041, 13042, 13043, 13044, 13045, 13046, 13047, 13048, 13049, //13024\n13050, 13051, 13052, 13053, 13054, 13055, 13056, 13057, 13058, 13059, 13060, 13061, 13062, 13063, 13064, 13065, //13040\n13066, 13067, 13068, 13069, 13070, 13071, 13072, 13073, 13074, 13075, 13076, 13077, 13078, 13079, 13080, 13081, //13056\n13082, 13083, 13084, 13085, 13086, 13087, 13088, 13089, 13090, 13091, 13092, 13093, 13094, 13095, 13096, 13097, //13072\n13098, 13099, 13100, 13101, 13102, 13103, 13104, 13105, 13106, 13107, 13108, 13109, 13110, 13111, 13112, 13113, //13088\n13114, 13115, 13116, 13117, 13118, 3968, 13119, 4995, 13120, 13121, 13122, 13123, 13124, 13125, 13126, 13127, //13104\n4505, 13128, 13129, 13130, 13131, 13132, 13133, 13134, 4996, 4506, 13135, 13136, 13137, 13138, 13139, 4997, //13120\n13140, 13141, 13142, 13143, 13144, 13145, 13146, 13147, 13148, 13149, 13150, 13151, 13152, 13153, 13154, 13155, //13136\n13156, 13157, 13158, 13159, 4998, 13160, 13161, 13162, 13163, 13164, 13165, 13166, 13167, 13168, 13169, 13170, //13152\n13171, 13172, 13173, 13174, 13175, 13176, 4999, 13177, 13178, 13179, 13180, 13181, 13182, 13183, 13184, 13185, //13168\n13186, 13187, 13188, 13189, 13190, 13191, 13192, 13193, 13194, 13195, 13196, 13197, 13198, 13199, 13200, 13201, //13184\n13202, 13203, 13204, 13205, 13206, 5000, 13207, 13208, 13209, 13210, 13211, 13212, 13213, 13214, 13215, 13216, //13200\n13217, 13218, 13219, 13220, 13221, 13222, 13223, 13224, 13225, 13226, 13227, 4200, 5001, 13228, 13229, 13230, //13216\n13231, 13232, 13233, 13234, 13235, 13236, 13237, 13238, 13239, 13240, 3969, 13241, 13242, 13243, 13244, 3970, //13232\n13245, 13246, 13247, 13248, 13249, 13250, 13251, 13252, 13253, 13254, 13255, 13256, 13257, 13258, 13259, 13260, //13248\n13261, 13262, 13263, 13264, 13265, 13266, 13267, 13268, 3450, 13269, 13270, 13271, 13272, 13273, 13274, 13275, //13264\n13276, 5002, 13277, 13278, 13279, 13280, 13281, 13282, 13283, 13284, 13285, 13286, 13287, 13288, 13289, 13290, //13280\n13291, 13292, 13293, 13294, 13295, 13296, 13297, 13298, 13299, 13300, 13301, 13302, 3813, 13303, 13304, 13305, //13296\n13306, 13307, 13308, 13309, 13310, 13311, 13312, 13313, 13314, 13315, 13316, 13317, 13318, 13319, 13320, 13321, //13312\n13322, 13323, 13324, 13325, 13326, 13327, 13328, 4507, 13329, 13330, 13331, 13332, 13333, 13334, 13335, 13336, //13328\n13337, 13338, 13339, 13340, 13341, 5003, 13342, 13343, 13344, 13345, 13346, 13347, 13348, 13349, 13350, 13351, //13344\n13352, 13353, 13354, 13355, 13356, 13357, 13358, 13359, 13360, 13361, 13362, 13363, 13364, 13365, 13366, 13367, //13360\n5004, 13368, 13369, 13370, 13371, 13372, 13373, 13374, 13375, 13376, 13377, 13378, 13379, 13380, 13381, 13382, //13376\n13383, 13384, 13385, 13386, 13387, 13388, 13389, 13390, 13391, 13392, 13393, 13394, 13395, 13396, 13397, 13398, //13392\n13399, 13400, 13401, 13402, 13403, 13404, 13405, 13406, 13407, 13408, 13409, 13410, 13411, 13412, 13413, 13414, //13408\n13415, 13416, 13417, 13418, 13419, 13420, 13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428, 13429, 13430, //13424\n13431, 13432, 4508, 13433, 13434, 13435, 4201, 13436, 13437, 13438, 13439, 13440, 13441, 13442, 13443, 13444, //13440\n13445, 13446, 13447, 13448, 13449, 13450, 13451, 13452, 13453, 13454, 13455, 13456, 13457, 5005, 13458, 13459, //13456\n13460, 13461, 13462, 13463, 13464, 13465, 13466, 13467, 13468, 13469, 13470, 4509, 13471, 13472, 13473, 13474, //13472\n13475, 13476, 13477, 13478, 13479, 13480, 13481, 13482, 13483, 13484, 13485, 13486, 13487, 13488, 13489, 13490, //13488\n13491, 13492, 13493, 13494, 13495, 13496, 13497, 13498, 13499, 13500, 13501, 13502, 13503, 13504, 13505, 13506, //13504\n13507, 13508, 13509, 13510, 13511, 13512, 13513, 13514, 13515, 13516, 13517, 13518, 13519, 13520, 13521, 13522, //13520\n13523, 13524, 13525, 13526, 13527, 13528, 13529, 13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537, 13538, //13536\n13539, 13540, 13541, 13542, 13543, 13544, 13545, 13546, 13547, 13548, 13549, 13550, 13551, 13552, 13553, 13554, //13552\n13555, 13556, 13557, 13558, 13559, 13560, 13561, 13562, 13563, 13564, 13565, 13566, 13567, 13568, 13569, 13570, //13568\n13571, 13572, 13573, 13574, 13575, 13576, 13577, 13578, 13579, 13580, 13581, 13582, 13583, 13584, 13585, 13586, //13584\n13587, 13588, 13589, 13590, 13591, 13592, 13593, 13594, 13595, 13596, 13597, 13598, 13599, 13600, 13601, 13602, //13600\n13603, 13604, 13605, 13606, 13607, 13608, 13609, 13610, 13611, 13612, 13613, 13614, 13615, 13616, 13617, 13618, //13616\n13619, 13620, 13621, 13622, 13623, 13624, 13625, 13626, 13627, 13628, 13629, 13630, 13631, 13632, 13633, 13634, //13632\n13635, 13636, 13637, 13638, 13639, 13640, 13641, 13642, 5006, 13643, 13644, 13645, 13646, 13647, 13648, 13649, //13648\n13650, 13651, 5007, 13652, 13653, 13654, 13655, 13656, 13657, 13658, 13659, 13660, 13661, 13662, 13663, 13664, //13664\n13665, 13666, 13667, 13668, 13669, 13670, 13671, 13672, 13673, 13674, 13675, 13676, 13677, 13678, 13679, 13680, //13680\n13681, 13682, 13683, 13684, 13685, 13686, 13687, 13688, 13689, 13690, 13691, 13692, 13693, 13694, 13695, 13696, //13696\n13697, 13698, 13699, 13700, 13701, 13702, 13703, 13704, 13705, 13706, 13707, 13708, 13709, 13710, 13711, 13712, //13712\n13713, 13714, 13715, 13716, 13717, 13718, 13719, 13720, 13721, 13722, 13723, 13724, 13725, 13726, 13727, 13728, //13728\n13729, 13730, 13731, 13732, 13733, 13734, 13735, 13736, 13737, 13738, 13739, 13740, 13741, 13742, 13743, 13744, //13744\n13745, 13746, 13747, 13748, 13749, 13750, 13751, 13752, 13753, 13754, 13755, 13756, 13757, 13758, 13759, 13760, //13760\n13761, 13762, 13763, 13764, 13765, 13766, 13767, 13768, 13769, 13770, 13771, 13772, 13773, 13774, 3273, 13775, //13776\n13776, 13777, 13778, 13779, 13780, 13781, 13782, 13783, 13784, 13785, 13786, 13787, 13788, 13789, 13790, 13791, //13792\n13792, 13793, 13794, 13795, 13796, 13797, 13798, 13799, 13800, 13801, 13802, 13803, 13804, 13805, 13806, 13807, //13808\n13808, 13809, 13810, 13811, 13812, 13813, 13814, 13815, 13816, 13817, 13818, 13819, 13820, 13821, 13822, 13823, //13824\n13824, 13825, 13826, 13827, 13828, 13829, 13830, 13831, 13832, 13833, 13834, 13835, 13836, 13837, 13838, 13839, //13840\n13840, 13841, 13842, 13843, 13844, 13845, 13846, 13847, 13848, 13849, 13850, 13851, 13852, 13853, 13854, 13855, //13856\n13856, 13857, 13858, 13859, 13860, 13861, 13862, 13863, 13864, 13865, 13866, 13867, 13868, 13869, 13870, 13871, //13872\n13872, 13873, 13874, 13875, 13876, 13877, 13878, 13879, 13880, 13881, 13882, 13883, 13884, 13885, 13886, 13887, //13888\n13888, 13889, 13890, 13891, 13892, 13893, 13894, 13895, 13896, 13897, 13898, 13899, 13900, 13901, 13902, 13903, //13904\n13904, 13905, 13906, 13907, 13908, 13909, 13910, 13911, 13912, 13913, 13914, 13915, 13916, 13917, 13918, 13919, //13920\n13920, 13921, 13922, 13923, 13924, 13925, 13926, 13927, 13928, 13929, 13930, 13931, 13932, 13933, 13934, 13935, //13936\n13936, 13937, 13938, 13939, 13940, 13941, 13942, 13943, 13944, 13945, 13946, 13947, 13948, 13949, 13950, 13951, //13952\n13952, 13953, 13954, 13955, 13956, 13957, 13958, 13959, 13960, 13961, 13962, 13963, 13964, 13965, 13966, 13967, //13968\n13968, 13969, 13970, 13971, 13972]; //13973","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar CharSetProber = require('./charsetprober');\n\nvar constants = require('./constants');\n\nvar UTF8SMModel = require('./mbcssm/utf8');\n\nfunction UTF8Prober() {\n  CharSetProber.apply(this);\n  var ONE_CHAR_PROB = 0.5;\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(UTF8SMModel);\n    self.reset();\n  }\n\n  this.reset = function () {\n    UTF8Prober.prototype.reset.apply(this);\n\n    this._mCodingSM.reset();\n\n    this._mNumOfMBChar = 0;\n  };\n\n  this.getCharsetName = function () {\n    return \"UTF-8\";\n  };\n\n  this.feed = function (aBuf) {\n    for (var i = 0, c; i < aBuf.length; i++) {\n      c = aBuf[i];\n\n      var codingState = this._mCodingSM.nextState(c);\n\n      if (codingState == constants.error) {\n        this._mState = constants.notMe;\n        break;\n      } else if (codingState == constants.itsMe) {\n        this._mState = constants.foundIt;\n        break;\n      } else if (codingState == constants.start) {\n        if (this._mCodingSM.getCurrentCharLen() >= 2) {\n          this._mNumOfMBChar++;\n        }\n      }\n    }\n\n    if (this.getState() == constants.detecting) {\n      if (this.getConfidence() > constants.SHORTCUT_THRESHOLD) {\n        this._mState = constants.foundIt;\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var unlike = 0.99;\n\n    if (this._mNumOfMBChar < 6) {\n      for (var i = 0; i < this._mNumOfMBChar; i++) {\n        unlike *= ONE_CHAR_PROB;\n      }\n\n      return 1 - unlike;\n    } else {\n      return unlike;\n    }\n  };\n\n  init();\n}\n\nUTF8Prober.prototype = new CharSetProber();\nmodule.exports = UTF8Prober;","var consts = require('../constants');\n\nvar UTF8_cls = [1, 1, 1, 1, 1, 1, 1, 1, // 00 - 07  //allow 0x00 as a legal value\n1, 1, 1, 1, 1, 1, 0, 0, // 08 - 0f\n1, 1, 1, 1, 1, 1, 1, 1, // 10 - 17\n1, 1, 1, 0, 1, 1, 1, 1, // 18 - 1f\n1, 1, 1, 1, 1, 1, 1, 1, // 20 - 27\n1, 1, 1, 1, 1, 1, 1, 1, // 28 - 2f\n1, 1, 1, 1, 1, 1, 1, 1, // 30 - 37\n1, 1, 1, 1, 1, 1, 1, 1, // 38 - 3f\n1, 1, 1, 1, 1, 1, 1, 1, // 40 - 47\n1, 1, 1, 1, 1, 1, 1, 1, // 48 - 4f\n1, 1, 1, 1, 1, 1, 1, 1, // 50 - 57\n1, 1, 1, 1, 1, 1, 1, 1, // 58 - 5f\n1, 1, 1, 1, 1, 1, 1, 1, // 60 - 67\n1, 1, 1, 1, 1, 1, 1, 1, // 68 - 6f\n1, 1, 1, 1, 1, 1, 1, 1, // 70 - 77\n1, 1, 1, 1, 1, 1, 1, 1, // 78 - 7f\n2, 2, 2, 2, 3, 3, 3, 3, // 80 - 87\n4, 4, 4, 4, 4, 4, 4, 4, // 88 - 8f\n4, 4, 4, 4, 4, 4, 4, 4, // 90 - 97\n4, 4, 4, 4, 4, 4, 4, 4, // 98 - 9f\n5, 5, 5, 5, 5, 5, 5, 5, // a0 - a7\n5, 5, 5, 5, 5, 5, 5, 5, // a8 - af\n5, 5, 5, 5, 5, 5, 5, 5, // b0 - b7\n5, 5, 5, 5, 5, 5, 5, 5, // b8 - bf\n0, 0, 6, 6, 6, 6, 6, 6, // c0 - c7\n6, 6, 6, 6, 6, 6, 6, 6, // c8 - cf\n6, 6, 6, 6, 6, 6, 6, 6, // d0 - d7\n6, 6, 6, 6, 6, 6, 6, 6, // d8 - df\n7, 8, 8, 8, 8, 8, 8, 8, // e0 - e7\n8, 8, 8, 8, 8, 9, 8, 8, // e8 - ef\n10, 11, 11, 11, 11, 11, 11, 11, // f0 - f7\n12, 13, 13, 13, 14, 15, 0, 0 // f8 - ff\n];\nvar UTF8_st = [consts.error, consts.start, consts.error, consts.error, consts.error, consts.error, 12, 10, //00-07\n9, 11, 8, 7, 6, 5, 4, 3, //08-0f\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //10-17\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //18-1f\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, //20-27\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, //28-2f\nconsts.error, consts.error, 5, 5, 5, 5, consts.error, consts.error, //30-37\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //38-3f\nconsts.error, consts.error, consts.error, 5, 5, 5, consts.error, consts.error, //40-47\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //48-4f\nconsts.error, consts.error, 7, 7, 7, 7, consts.error, consts.error, //50-57\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //58-5f\nconsts.error, consts.error, consts.error, consts.error, 7, 7, consts.error, consts.error, //60-67\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //68-6f\nconsts.error, consts.error, 9, 9, 9, 9, consts.error, consts.error, //70-77\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //78-7f\nconsts.error, consts.error, consts.error, consts.error, 9, 9, consts.error, consts.error, //80-87\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //88-8f\nconsts.error, consts.error, 12, 12, 12, 12, consts.error, consts.error, //90-97\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //98-9f\nconsts.error, consts.error, consts.error, consts.error, consts.error, 12, consts.error, consts.error, //a0-a7\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //a8-af\nconsts.error, consts.error, 12, 12, 12, consts.error, consts.error, consts.error, //b0-b7\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, //b8-bf\nconsts.error, consts.error, consts.start, consts.start, consts.start, consts.start, consts.error, consts.error, //c0-c7\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error //c8-cf\n];\nvar UTF8CharLenTable = [0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6];\nmodule.exports = {\n  \"classTable\": UTF8_cls,\n  \"classFactor\": 16,\n  \"stateTable\": UTF8_st,\n  \"charLenTable\": UTF8CharLenTable,\n  \"name\": \"UTF-8\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar SJISSMModel = require('./mbcssm/sjis');\n\nvar SJISDistributionAnalysis = require('./chardistribution').SJISDistributionAnalysis;\n\nvar SJISContextAnalysis = require('./jpcntx').SJISContextAnalysis;\n\nvar constants = require('./constants');\n\nvar logger = require('./logger');\n\nfunction SJISProber() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(SJISSMModel);\n    self._mDistributionAnalyzer = new SJISDistributionAnalysis();\n    self._mContextAnalyzer = new SJISContextAnalysis();\n    self.reset();\n  }\n\n  this.reset = function () {\n    SJISProber.prototype.reset.apply(this);\n\n    this._mContextAnalyzer.reset();\n  };\n\n  this.getCharsetName = function () {\n    return \"SHIFT_JIS\";\n  };\n\n  this.feed = function (aBuf) {\n    var aLen = aBuf.length;\n\n    for (var i = 0; i < aLen; i++) {\n      var codingState = this._mCodingSM.nextState(aBuf[i]);\n\n      if (codingState == constants.error) {\n        logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n        this._mState = constants.notMe;\n        break;\n      } else if (codingState == constants.itsMe) {\n        this._mState = constants.foundIt;\n        break;\n      } else if (codingState == constants.start) {\n        var charLen = this._mCodingSM.getCurrentCharLen();\n\n        if (i == 0) {\n          this._mLastChar[1] = aBuf[0];\n\n          this._mContextAnalyzer.feed(this._mLastChar.slice(2 - charLen), charLen);\n\n          this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n        } else {\n          this._mContextAnalyzer.feed(aBuf.slice(i + 1 - charLen, i + 3 - charLen), charLen);\n\n          this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n        }\n      }\n    }\n\n    this._mLastChar[0] = aBuf[aLen - 1];\n\n    if (this.getState() == constants.detecting) {\n      if (this._mContextAnalyzer.gotEnoughData() && this.getConfidence() > constants.SHORTCUT_THRESHOLD) {\n        this._mState = constants.foundIt;\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var contxtCf = this._mContextAnalyzer.getConfidence();\n\n    var distribCf = this._mDistributionAnalyzer.getConfidence();\n\n    return Math.max(contxtCf, distribCf);\n  };\n\n  init();\n}\n\nSJISProber.prototype = new MultiByteCharSetProber();\nmodule.exports = SJISProber;","var consts = require('../constants');\n\nvar SJIS_cls = [1, 1, 1, 1, 1, 1, 1, 1, // 00 - 07\n1, 1, 1, 1, 1, 1, 0, 0, // 08 - 0f\n1, 1, 1, 1, 1, 1, 1, 1, // 10 - 17\n1, 1, 1, 0, 1, 1, 1, 1, // 18 - 1f\n1, 1, 1, 1, 1, 1, 1, 1, // 20 - 27\n1, 1, 1, 1, 1, 1, 1, 1, // 28 - 2f\n1, 1, 1, 1, 1, 1, 1, 1, // 30 - 37\n1, 1, 1, 1, 1, 1, 1, 1, // 38 - 3f\n2, 2, 2, 2, 2, 2, 2, 2, // 40 - 47\n2, 2, 2, 2, 2, 2, 2, 2, // 48 - 4f\n2, 2, 2, 2, 2, 2, 2, 2, // 50 - 57\n2, 2, 2, 2, 2, 2, 2, 2, // 58 - 5f\n2, 2, 2, 2, 2, 2, 2, 2, // 60 - 67\n2, 2, 2, 2, 2, 2, 2, 2, // 68 - 6f\n2, 2, 2, 2, 2, 2, 2, 2, // 70 - 77\n2, 2, 2, 2, 2, 2, 2, 1, // 78 - 7f\n3, 3, 3, 3, 3, 3, 3, 3, // 80 - 87\n3, 3, 3, 3, 3, 3, 3, 3, // 88 - 8f\n3, 3, 3, 3, 3, 3, 3, 3, // 90 - 97\n3, 3, 3, 3, 3, 3, 3, 3, // 98 - 9f\n// 0xa0 is illegal in sjis encoding, but some pages does\n// contain such byte. We need to be more consts.error forgiven.\n2, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 2, 2, 2, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 2, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n3, 3, 3, 3, 3, 3, 3, 3, // e0 - e7\n3, 3, 3, 3, 3, 4, 4, 4, // e8 - ef\n3, 3, 3, 3, 3, 3, 3, 3, // f0 - f7\n3, 3, 3, 3, 3, 0, 0, 0 // f8 - ff\n];\nvar SJIS_st = [consts.error, consts.start, consts.start, 3, consts.error, consts.error, consts.error, consts.error, //00-07\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, //08-0f\nconsts.itsMe, consts.itsMe, consts.error, consts.error, consts.start, consts.start, consts.start, consts.start //10-17\n];\nvar SJISCharLenTable = [0, 1, 1, 2, 0, 0];\nmodule.exports = {\n  \"classTable\": SJIS_cls,\n  \"classFactor\": 6,\n  \"stateTable\": SJIS_st,\n  \"charLenTable\": SJISCharLenTable,\n  \"name\": \"Shift_JIS\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar EUCJPDistributionAnalysis = require('./chardistribution').EUCJPDistributionAnalysis;\n\nvar EUCJPContextAnalysis = require('./jpcntx').EUCJPContextAnalysis;\n\nvar EUCJPSMModel = require('./mbcssm/eucjp');\n\nvar constants = require('./constants');\n\nvar logger = require('./logger');\n\nfunction EUCJPProber() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(EUCJPSMModel);\n    self._mDistributionAnalyzer = new EUCJPDistributionAnalysis();\n    self._mContextAnalyzer = new EUCJPContextAnalysis();\n    self.reset();\n  }\n\n  this.reset = function () {\n    EUCJPProber.prototype.reset.apply(this);\n\n    this._mContextAnalyzer.reset();\n  };\n\n  this.getCharsetName = function () {\n    return \"EUC-JP\";\n  };\n\n  this.feed = function (aBuf) {\n    var aLen = aBuf.length;\n\n    for (var i = 0; i < aLen; i++) {\n      var codingState = this._mCodingSM.nextState(aBuf[i]);\n\n      if (codingState == constants.error) {\n        logger.log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\");\n        this._mState = constants.notMe;\n        break;\n      } else if (codingState == constants.itsMe) {\n        this._mState = constants.foundIt;\n        break;\n      } else if (codingState == constants.start) {\n        var charLen = this._mCodingSM.getCurrentCharLen();\n\n        if (i == 0) {\n          this._mLastChar[1] = aBuf[0];\n\n          this._mContextAnalyzer.feed(this._mLastChar, charLen);\n\n          this._mDistributionAnalyzer.feed(this._mLastChar, charLen);\n        } else {\n          this._mContextAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n\n          this._mDistributionAnalyzer.feed(aBuf.slice(i - 1, i + 1), charLen);\n        }\n      }\n    }\n\n    this._mLastChar[0] = aBuf[aLen - 1];\n\n    if (this.getState() == constants.detecting) {\n      if (this._mContextAnalyzer.gotEnoughData() && this.getConfidence() > constants.SHORTCUT_THRESHOLD) {\n        this._mState = constants.foundIt;\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var contxtCf = this._mContextAnalyzer.getConfidence();\n\n    var distribCf = this._mDistributionAnalyzer.getConfidence();\n\n    return Math.max(contxtCf, distribCf);\n  };\n\n  init();\n}\n\nEUCJPProber.prototype = new MultiByteCharSetProber();\nmodule.exports = EUCJPProber;","var consts = require('../constants');\n\nvar EUCJP_cls = [4, 4, 4, 4, 4, 4, 4, 4, // 00 - 07\n4, 4, 4, 4, 4, 4, 5, 5, // 08 - 0f\n4, 4, 4, 4, 4, 4, 4, 4, // 10 - 17\n4, 4, 4, 5, 4, 4, 4, 4, // 18 - 1f\n4, 4, 4, 4, 4, 4, 4, 4, // 20 - 27\n4, 4, 4, 4, 4, 4, 4, 4, // 28 - 2f\n4, 4, 4, 4, 4, 4, 4, 4, // 30 - 37\n4, 4, 4, 4, 4, 4, 4, 4, // 38 - 3f\n4, 4, 4, 4, 4, 4, 4, 4, // 40 - 47\n4, 4, 4, 4, 4, 4, 4, 4, // 48 - 4f\n4, 4, 4, 4, 4, 4, 4, 4, // 50 - 57\n4, 4, 4, 4, 4, 4, 4, 4, // 58 - 5f\n4, 4, 4, 4, 4, 4, 4, 4, // 60 - 67\n4, 4, 4, 4, 4, 4, 4, 4, // 68 - 6f\n4, 4, 4, 4, 4, 4, 4, 4, // 70 - 77\n4, 4, 4, 4, 4, 4, 4, 4, // 78 - 7f\n5, 5, 5, 5, 5, 5, 5, 5, // 80 - 87\n5, 5, 5, 5, 5, 5, 1, 3, // 88 - 8f\n5, 5, 5, 5, 5, 5, 5, 5, // 90 - 97\n5, 5, 5, 5, 5, 5, 5, 5, // 98 - 9f\n5, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 2, 2, 2, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 2, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n0, 0, 0, 0, 0, 0, 0, 0, // e0 - e7\n0, 0, 0, 0, 0, 0, 0, 0, // e8 - ef\n0, 0, 0, 0, 0, 0, 0, 0, // f0 - f7\n0, 0, 0, 0, 0, 0, 0, 5 // f8 - ff\n];\nvar EUCJP_st = [3, 4, 3, 5, consts.start, consts.error, consts.error, consts.error, //00-07\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, //08-0f\nconsts.itsMe, consts.itsMe, consts.start, consts.error, consts.start, consts.error, consts.error, consts.error, //10-17\nconsts.error, consts.error, consts.start, consts.error, consts.error, consts.error, 3, consts.error, //18-1f\n3, consts.error, consts.error, consts.error, consts.start, consts.start, consts.start, consts.start //20-27\n];\nvar EUCJPCharLenTable = [2, 2, 2, 3, 1, 0];\nmodule.exports = {\n  \"classTable\": EUCJP_cls,\n  \"classFactor\": 6,\n  \"stateTable\": EUCJP_st,\n  \"charLenTable\": EUCJPCharLenTable,\n  \"name\": \"EUC-JP\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar GB2312SMModel = require('./mbcssm/gb2312');\n\nvar GB2312DistributionAnalysis = require('./chardistribution').GB2312DistributionAnalysis;\n\nfunction GB2312Prober() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(GB2312SMModel);\n    self._mDistributionAnalyzer = new GB2312DistributionAnalysis();\n    self.reset();\n  }\n\n  this.getCharsetName = function () {\n    return \"GB2312\";\n  };\n\n  init();\n}\n\nGB2312Prober.prototype = new MultiByteCharSetProber();\nmodule.exports = GB2312Prober;","var consts = require('../constants');\n\nvar GB2312_cls = [1, 1, 1, 1, 1, 1, 1, 1, // 00 - 07\n1, 1, 1, 1, 1, 1, 0, 0, // 08 - 0f\n1, 1, 1, 1, 1, 1, 1, 1, // 10 - 17\n1, 1, 1, 0, 1, 1, 1, 1, // 18 - 1f\n1, 1, 1, 1, 1, 1, 1, 1, // 20 - 27\n1, 1, 1, 1, 1, 1, 1, 1, // 28 - 2f\n3, 3, 3, 3, 3, 3, 3, 3, // 30 - 37\n3, 3, 1, 1, 1, 1, 1, 1, // 38 - 3f\n2, 2, 2, 2, 2, 2, 2, 2, // 40 - 47\n2, 2, 2, 2, 2, 2, 2, 2, // 48 - 4f\n2, 2, 2, 2, 2, 2, 2, 2, // 50 - 57\n2, 2, 2, 2, 2, 2, 2, 2, // 58 - 5f\n2, 2, 2, 2, 2, 2, 2, 2, // 60 - 67\n2, 2, 2, 2, 2, 2, 2, 2, // 68 - 6f\n2, 2, 2, 2, 2, 2, 2, 2, // 70 - 77\n2, 2, 2, 2, 2, 2, 2, 4, // 78 - 7f\n5, 6, 6, 6, 6, 6, 6, 6, // 80 - 87\n6, 6, 6, 6, 6, 6, 6, 6, // 88 - 8f\n6, 6, 6, 6, 6, 6, 6, 6, // 90 - 97\n6, 6, 6, 6, 6, 6, 6, 6, // 98 - 9f\n6, 6, 6, 6, 6, 6, 6, 6, // a0 - a7\n6, 6, 6, 6, 6, 6, 6, 6, // a8 - af\n6, 6, 6, 6, 6, 6, 6, 6, // b0 - b7\n6, 6, 6, 6, 6, 6, 6, 6, // b8 - bf\n6, 6, 6, 6, 6, 6, 6, 6, // c0 - c7\n6, 6, 6, 6, 6, 6, 6, 6, // c8 - cf\n6, 6, 6, 6, 6, 6, 6, 6, // d0 - d7\n6, 6, 6, 6, 6, 6, 6, 6, // d8 - df\n6, 6, 6, 6, 6, 6, 6, 6, // e0 - e7\n6, 6, 6, 6, 6, 6, 6, 6, // e8 - ef\n6, 6, 6, 6, 6, 6, 6, 6, // f0 - f7\n6, 6, 6, 6, 6, 6, 6, 0 // f8 - ff\n];\nvar GB2312_st = [consts.error, consts.start, consts.start, consts.start, consts.start, consts.start, 3, consts.error, //00-07\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, //08-0f\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.error, consts.error, consts.start, //10-17\n4, consts.error, consts.start, consts.start, consts.error, consts.error, consts.error, consts.error, //18-1f\nconsts.error, consts.error, 5, consts.error, consts.error, consts.error, consts.itsMe, consts.error, //20-27\nconsts.error, consts.error, consts.start, consts.start, consts.start, consts.start, consts.start, consts.start //28-2f\n]; // To be accurate, the length of class 6 can be either 2 or 4.\n// But it is not necessary to discriminate between the two since\n// it is used for frequency analysis only, and we are validing\n// each code range there as well. So it is safe to set it to be\n// 2 here.\n\nvar GB2312CharLenTable = [0, 1, 1, 1, 1, 1, 2];\nmodule.exports = {\n  \"classTable\": GB2312_cls,\n  \"classFactor\": 7,\n  \"stateTable\": GB2312_st,\n  \"charLenTable\": GB2312CharLenTable,\n  \"name\": \"GB2312\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar EUCKRDistributionAnalysis = require('./chardistribution').EUCKRDistributionAnalysis;\n\nvar EUCKRSMModel = require('./mbcssm/euckr');\n\nfunction EUCKRProber() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(EUCKRSMModel);\n    self._mDistributionAnalyzer = new EUCKRDistributionAnalysis();\n    self.reset();\n  }\n\n  this.getCharsetName = function () {\n    return \"EUC-KR\";\n  };\n\n  init();\n}\n\nEUCKRProber.prototype = new MultiByteCharSetProber();\nmodule.exports = EUCKRProber;","var consts = require('../constants');\n\nvar EUCKR_cls = [1, 1, 1, 1, 1, 1, 1, 1, // 00 - 07\n1, 1, 1, 1, 1, 1, 0, 0, // 08 - 0f\n1, 1, 1, 1, 1, 1, 1, 1, // 10 - 17\n1, 1, 1, 0, 1, 1, 1, 1, // 18 - 1f\n1, 1, 1, 1, 1, 1, 1, 1, // 20 - 27\n1, 1, 1, 1, 1, 1, 1, 1, // 28 - 2f\n1, 1, 1, 1, 1, 1, 1, 1, // 30 - 37\n1, 1, 1, 1, 1, 1, 1, 1, // 38 - 3f\n1, 1, 1, 1, 1, 1, 1, 1, // 40 - 47\n1, 1, 1, 1, 1, 1, 1, 1, // 48 - 4f\n1, 1, 1, 1, 1, 1, 1, 1, // 50 - 57\n1, 1, 1, 1, 1, 1, 1, 1, // 58 - 5f\n1, 1, 1, 1, 1, 1, 1, 1, // 60 - 67\n1, 1, 1, 1, 1, 1, 1, 1, // 68 - 6f\n1, 1, 1, 1, 1, 1, 1, 1, // 70 - 77\n1, 1, 1, 1, 1, 1, 1, 1, // 78 - 7f\n0, 0, 0, 0, 0, 0, 0, 0, // 80 - 87\n0, 0, 0, 0, 0, 0, 0, 0, // 88 - 8f\n0, 0, 0, 0, 0, 0, 0, 0, // 90 - 97\n0, 0, 0, 0, 0, 0, 0, 0, // 98 - 9f\n0, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 3, 3, 3, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 3, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n2, 2, 2, 2, 2, 2, 2, 2, // e0 - e7\n2, 2, 2, 2, 2, 2, 2, 2, // e8 - ef\n2, 2, 2, 2, 2, 2, 2, 2, // f0 - f7\n2, 2, 2, 2, 2, 2, 2, 0 // f8 - ff\n];\nvar EUCKR_st = [consts.error, consts.start, 3, consts.error, consts.error, consts.error, consts.error, consts.error, //00-07\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.error, consts.error, consts.start, consts.start //08-0f\n];\nvar EUCKRCharLenTable = [0, 1, 2, 0];\nmodule.exports = {\n  \"classTable\": EUCKR_cls,\n  \"classFactor\": 4,\n  \"stateTable\": EUCKR_st,\n  \"charLenTable\": EUCKRCharLenTable,\n  \"name\": \"EUC-KR\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar MultiByteCharSetProber = require('./mbcharsetprober');\n\nvar EUCTWDistributionAnalysis = require('./chardistribution').EUCTWDistributionAnalysis;\n\nvar EUCTWSMModel = require('./mbcssm/euctw');\n\nfunction EUCTWProber() {\n  MultiByteCharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = new CodingStateMachine(EUCTWSMModel);\n    self._mDistributionAnalyzer = new EUCTWDistributionAnalysis();\n    self.reset();\n  }\n\n  this.getCharsetName = function () {\n    return \"EUC-TW\";\n  };\n\n  init();\n}\n\nEUCTWProber.prototype = new MultiByteCharSetProber();\nmodule.exports = EUCTWProber;","var consts = require('../constants');\n\nvar EUCTW_cls = [2, 2, 2, 2, 2, 2, 2, 2, // 00 - 07\n2, 2, 2, 2, 2, 2, 0, 0, // 08 - 0f\n2, 2, 2, 2, 2, 2, 2, 2, // 10 - 17\n2, 2, 2, 0, 2, 2, 2, 2, // 18 - 1f\n2, 2, 2, 2, 2, 2, 2, 2, // 20 - 27\n2, 2, 2, 2, 2, 2, 2, 2, // 28 - 2f\n2, 2, 2, 2, 2, 2, 2, 2, // 30 - 37\n2, 2, 2, 2, 2, 2, 2, 2, // 38 - 3f\n2, 2, 2, 2, 2, 2, 2, 2, // 40 - 47\n2, 2, 2, 2, 2, 2, 2, 2, // 48 - 4f\n2, 2, 2, 2, 2, 2, 2, 2, // 50 - 57\n2, 2, 2, 2, 2, 2, 2, 2, // 58 - 5f\n2, 2, 2, 2, 2, 2, 2, 2, // 60 - 67\n2, 2, 2, 2, 2, 2, 2, 2, // 68 - 6f\n2, 2, 2, 2, 2, 2, 2, 2, // 70 - 77\n2, 2, 2, 2, 2, 2, 2, 2, // 78 - 7f\n0, 0, 0, 0, 0, 0, 0, 0, // 80 - 87\n0, 0, 0, 0, 0, 0, 6, 0, // 88 - 8f\n0, 0, 0, 0, 0, 0, 0, 0, // 90 - 97\n0, 0, 0, 0, 0, 0, 0, 0, // 98 - 9f\n0, 3, 4, 4, 4, 4, 4, 4, // a0 - a7\n5, 5, 1, 1, 1, 1, 1, 1, // a8 - af\n1, 1, 1, 1, 1, 1, 1, 1, // b0 - b7\n1, 1, 1, 1, 1, 1, 1, 1, // b8 - bf\n1, 1, 3, 1, 3, 3, 3, 3, // c0 - c7\n3, 3, 3, 3, 3, 3, 3, 3, // c8 - cf\n3, 3, 3, 3, 3, 3, 3, 3, // d0 - d7\n3, 3, 3, 3, 3, 3, 3, 3, // d8 - df\n3, 3, 3, 3, 3, 3, 3, 3, // e0 - e7\n3, 3, 3, 3, 3, 3, 3, 3, // e8 - ef\n3, 3, 3, 3, 3, 3, 3, 3, // f0 - f7\n3, 3, 3, 3, 3, 3, 3, 0 // f8 - ff\n];\nvar EUCTW_st = [consts.error, consts.error, consts.start, 3, 3, 3, 4, consts.error, //00-07\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, //08-0f\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.error, consts.start, consts.error, //10-17\nconsts.start, consts.start, consts.start, consts.error, consts.error, consts.error, consts.error, consts.error, //18-1f\n5, consts.error, consts.error, consts.error, consts.start, consts.error, consts.start, consts.start, //20-27\nconsts.start, consts.error, consts.start, consts.start, consts.start, consts.start, consts.start, consts.start //28-2f\n];\nvar EUCTWCharLenTable = [0, 0, 1, 2, 2, 2, 3];\nmodule.exports = {\n  \"classTable\": EUCTW_cls,\n  \"classFactor\": 7,\n  \"stateTable\": EUCTW_st,\n  \"charLenTable\": EUCTWCharLenTable,\n  \"name\": \"x-euc-tw\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar SingleByteCharSetProber = require('./sbcharsetprober');\n\nvar CharSetGroupProber = require('./charsetgroupprober');\n\nvar Win1255HebrewModel = require('./langhebrewmodel').Win1255HebrewModel;\n\nvar HebrewProber = require('./hebrewprober');\n\nvar cyrillicModels = require('./langcyrillicmodel');\n\nvar greekModels = require('./langgreekmodel');\n\nvar TIS620ThaiModel = require('./langthaimodel').TIS620ThaiModel;\n\nvar hungarianModels = require('./langhungarianmodel');\n\nvar bulgarianModels = require('./langbulgarianmodel');\n\nfunction SBCSGroupProber() {\n  CharSetGroupProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mProbers = [new SingleByteCharSetProber(cyrillicModels.Win1251CyrillicModel), new SingleByteCharSetProber(cyrillicModels.Koi8rModel), new SingleByteCharSetProber(cyrillicModels.Latin5CyrillicModel), new SingleByteCharSetProber(cyrillicModels.MacCyrillicModel), new SingleByteCharSetProber(cyrillicModels.Ibm866Model), new SingleByteCharSetProber(cyrillicModels.Ibm855Model), new SingleByteCharSetProber(greekModels.Latin7GreekModel), new SingleByteCharSetProber(greekModels.Win1253GreekModel), new SingleByteCharSetProber(bulgarianModels.Latin5BulgarianModel), new SingleByteCharSetProber(bulgarianModels.Win1251BulgarianModel), new SingleByteCharSetProber(hungarianModels.Latin2HungarianModel), new SingleByteCharSetProber(hungarianModels.Win1250HungarianModel), new SingleByteCharSetProber(TIS620ThaiModel)];\n    var hebrewProber = new HebrewProber();\n    var logicalHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, false, hebrewProber);\n    var visualHebrewProber = new SingleByteCharSetProber(Win1255HebrewModel, true, hebrewProber);\n    hebrewProber.setModelProbers(logicalHebrewProber, visualHebrewProber);\n\n    self._mProbers.push(hebrewProber, logicalHebrewProber, visualHebrewProber);\n\n    self.reset();\n  }\n\n  init();\n}\n\nSBCSGroupProber.prototype = new CharSetGroupProber();\nmodule.exports = SBCSGroupProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetProber = require('./charsetprober');\n\nvar constants = require('./constants');\n\nvar logger = require('./logger');\n\nfunction SingleByteCharSetProber(model, reversed, nameProber) {\n  CharSetProber.apply(this);\n  var SAMPLE_SIZE = 64;\n  var SB_ENOUGH_REL_THRESHOLD = 1024;\n  var POSITIVE_SHORTCUT_THRESHOLD = 0.95;\n  var NEGATIVE_SHORTCUT_THRESHOLD = 0.05;\n  var SYMBOL_CAT_ORDER = 250;\n  var NUMBER_OF_SEQ_CAT = 4;\n  var POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1; //var NEGATIVE_CAT = 0;\n\n  var self = this;\n\n  function init(model, reversed, nameProber) {\n    self._mModel = model;\n    self._mReversed = reversed; // \"true\" if we need to reverse every pair in the model lookup\n\n    self._mNameProber = nameProber; // Optional auxiliary prober for name decision\n\n    self.reset();\n  }\n\n  this.reset = function () {\n    SingleByteCharSetProber.prototype.reset.apply(this);\n    this._mLastOrder = 255; // char order of last character\n\n    this._mSeqCounters = [];\n\n    for (var i = 0; i < NUMBER_OF_SEQ_CAT; this._mSeqCounters[i++] = 0) {\n      ;\n    }\n\n    this._mTotalSeqs = 0;\n    this._mTotalChar = 0;\n    this._mFreqChar = 0; // characters that fall in our sampling range\n  };\n\n  this.getCharsetName = function () {\n    if (this._mNameProber) {\n      return this._mNameProber.getCharsetName();\n    } else {\n      return this._mModel.charsetName;\n    }\n  };\n\n  this.feed = function (aBuf) {\n    if (!this._mModel.keepEnglishLetter) {\n      aBuf = this.filterWithoutEnglishLetters(aBuf);\n    }\n\n    var aLen = aBuf.length;\n\n    if (!aLen) {\n      return this.getState();\n    }\n\n    for (var i = 0, c; i < aLen; i++) {\n      c = aBuf.charCodeAt(i);\n      var order = this._mModel.charToOrderMap[c];\n\n      if (order < SYMBOL_CAT_ORDER) {\n        this._mTotalChar++;\n      }\n\n      if (order < SAMPLE_SIZE) {\n        this._mFreqChar++;\n\n        if (this._mLastOrder < SAMPLE_SIZE) {\n          this._mTotalSeqs++;\n\n          if (!this._mReversed) {\n            this._mSeqCounters[this._mModel.precedenceMatrix[this._mLastOrder * SAMPLE_SIZE + order]]++;\n          } else {\n            // reverse the order of the letters in the lookup\n            this._mSeqCounters[this._mModel.precedenceMatrix[order * SAMPLE_SIZE + this._mLastOrder]]++;\n          }\n        }\n      }\n\n      this._mLastOrder = order;\n    }\n\n    if (this.getState() == constants.detecting) {\n      if (self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD) {\n        var cf = this.getConfidence();\n\n        if (cf > POSITIVE_SHORTCUT_THRESHOLD) {\n          logger.log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\");\n        } else if (cf < NEGATIVE_SHORTCUT_THRESHOLD) {\n          logger.log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\");\n          this._mState = constants.notMe;\n        }\n      }\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var r = 0.01;\n\n    if (this._mTotalSeqs > 0) {\n      //logger.log(this._mSeqCounters[POSITIVE_CAT] + \" \" + this._mTotalSeqs + \" \" + this._mModel.mTypicalPositiveRatio);\n      r = 1.0 * this._mSeqCounters[POSITIVE_CAT] / this._mTotalSeqs / this._mModel.mTypicalPositiveRatio; //logger.log(r + \" \" + this._mFreqChar + \" \" + this._mTotalChar);\n\n      r *= this._mFreqChar / this._mTotalChar;\n\n      if (r >= 1.0) {\n        r = 0.99;\n      }\n    }\n\n    return r;\n  };\n\n  reversed = reversed !== undefined ? reversed : false;\n  nameProber = nameProber !== undefined ? nameProber : null;\n  init(model, reversed, nameProber);\n}\n\nSingleByteCharSetProber.prototype = new CharSetProber();\nmodule.exports = SingleByteCharSetProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n// Windows-1255 language model\n// Character Mapping Table:\nexports.win1255_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 69, 91, 79, 80, 92, 89, 97, 90, 68, 111, 112, 82, 73, 95, 85, // 40\n78, 121, 86, 71, 67, 102, 107, 84, 114, 103, 115, 253, 253, 253, 253, 253, // 50\n253, 50, 74, 60, 61, 42, 76, 70, 64, 53, 105, 93, 56, 65, 54, 49, // 60\n66, 110, 51, 43, 44, 63, 81, 77, 98, 75, 108, 253, 253, 253, 253, 253, // 70\n124, 202, 203, 204, 205, 40, 58, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 83, 52, 47, 46, 72, 32, 94, 216, 113, 217, 109, 218, 219, 220, 221, 34, 116, 222, 118, 100, 223, 224, 117, 119, 104, 125, 225, 226, 87, 99, 227, 106, 122, 123, 228, 55, 229, 230, 101, 231, 232, 120, 233, 48, 39, 57, 234, 30, 59, 41, 88, 33, 37, 36, 31, 29, 35, 235, 62, 28, 236, 126, 237, 238, 38, 45, 239, 240, 241, 242, 243, 127, 244, 245, 246, 247, 248, 249, 250, 9, 8, 20, 16, 3, 2, 24, 14, 22, 1, 25, 15, 4, 11, 6, 23, 12, 19, 13, 26, 18, 27, 21, 17, 7, 10, 5, 251, 252, 128, 96, 253]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.4004%\n// first 1024 sequences: 1.5981%\n// rest  sequences:      0.087%\n// negative sequences:   0.0015%\n\nexports.HebrewLangModel = [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 2, 0, 1, 0, 0, 3, 0, 3, 1, 0, 0, 1, 3, 2, 0, 1, 1, 2, 0, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 2, 2, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 2, 1, 3, 1, 1, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 3, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 3, 2, 2, 3, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 2, 3, 2, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 2, 0, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 2, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 1, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 1, 2, 0, 2, 1, 2, 0, 2, 0, 2, 2, 2, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 1, 2, 2, 3, 3, 2, 3, 2, 3, 2, 2, 3, 1, 2, 2, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 2, 2, 2, 3, 3, 3, 3, 1, 3, 2, 2, 2, 0, 2, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 1, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 1, 3, 2, 3, 3, 2, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 0, 2, 1, 2, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 0, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 1, 2, 3, 0, 2, 1, 2, 2, 0, 2, 1, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 1, 3, 1, 2, 2, 2, 1, 2, 3, 3, 1, 2, 1, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 3, 3, 3, 1, 3, 3, 3, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 0, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 3, 3, 3, 2, 1, 2, 3, 2, 3, 2, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 0, 2, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 3, 3, 2, 3, 1, 2, 2, 2, 2, 3, 2, 3, 1, 1, 2, 2, 1, 2, 2, 1, 1, 0, 2, 2, 2, 2, 0, 1, 0, 1, 2, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 3, 3, 3, 0, 3, 0, 2, 2, 2, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 2, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 2, 1, 2, 2, 2, 0, 2, 0, 2, 0, 1, 1, 2, 1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 0, 1, 0, 0, 1, 1, 2, 2, 1, 2, 0, 2, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 1, 2, 0, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1, 1, 2, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 2, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 2, 1, 1, 2, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 2, 0, 2, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 1, 0, 1, 0, 0, 2, 2, 1, 2, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 2, 1, 1, 1, 0, 2, 1, 1, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 2, 0, 1, 0, 0, 1, 1, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 2, 1, 0, 2, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 2, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0];\nexports.Win1255HebrewModel = {\n  \"charToOrderMap\": exports.win1255_CharToOrderMap,\n  \"precedenceMatrix\": exports.HebrewLangModel,\n  \"mTypicalPositiveRatio\": 0.984004,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"windows-1255\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// This prober doesn't actually recognize a language or a charset.\n// It is a helper prober for the use of the Hebrew model probers\n////// General ideas of the Hebrew charset recognition //////\n//\n// Four main charsets exist in Hebrew:\n// \"ISO-8859-8\" - Visual Hebrew\n// \"windows-1255\" - Logical Hebrew\n// \"ISO-8859-8-I\" - Logical Hebrew\n// \"x-mac-hebrew\" - ?? Logical Hebrew ??\n//\n// Both \"ISO\" charsets use a completely identical set of code points, whereas\n// \"windows-1255\" and \"x-mac-hebrew\" are two different proper supersets of\n// these code points. windows-1255 defines additional characters in the range\n// 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific\n// diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.\n// x-mac-hebrew defines similar additional code points but with a different\n// mapping.\n//\n// As far as an average Hebrew text with no diacritics is concerned, all four\n// charsets are identical with respect to code points. Meaning that for the\n// main Hebrew alphabet, all four map the same values to all 27 Hebrew letters\n// (including final letters).\n//\n// The dominant difference between these charsets is their directionality.\n// \"Visual\" directionality means that the text is ordered as if the renderer is\n// not aware of a BIDI rendering algorithm. The renderer sees the text and\n// draws it from left to right. The text itself when ordered naturally is read\n// backwards. A buffer of Visual Hebrew generally looks like so:\n// \"[last word of first line spelled backwards] [whole line ordered backwards\n// and spelled backwards] [first word of first line spelled backwards]\n// [end of line] [last word of second line] ... etc' \"\n// adding punctuation marks, numbers and English text to visual text is\n// naturally also \"visual\" and from left to right.\n//\n// \"Logical\" directionality means the text is ordered \"naturally\" according to\n// the order it is read. It is the responsibility of the renderer to display\n// the text from right to left. A BIDI algorithm is used to place general\n// punctuation marks, numbers and English text in the text.\n//\n// Texts in x-mac-hebrew are almost impossible to find on the Internet. From\n// what little evidence I could find, it seems that its general directionality\n// is Logical.\n//\n// To sum up all of the above, the Hebrew probing mechanism knows about two\n// charsets:\n// Visual Hebrew - \"ISO-8859-8\" - backwards text - Words and sentences are\n//    backwards while line order is natural. For charset recognition purposes\n//    the line order is unimportant (In fact, for this implementation, even\n//    word order is unimportant).\n// Logical Hebrew - \"windows-1255\" - normal, naturally ordered text.\n//\n// \"ISO-8859-8-I\" is a subset of windows-1255 and doesn't need to be\n//    specifically identified.\n// \"x-mac-hebrew\" is also identified as windows-1255. A text in x-mac-hebrew\n//    that contain special punctuation marks or diacritics is displayed with\n//    some unconverted characters showing as question marks. This problem might\n//    be corrected using another model prober for x-mac-hebrew. Due to the fact\n//    that x-mac-hebrew texts are so rare, writing another model prober isn't\n//    worth the effort and performance hit.\n//\n//////// The Prober ////////\n//\n// The prober is divided between two SBCharSetProbers and a HebrewProber,\n// all of which are managed, created, fed data, inquired and deleted by the\n// SBCSGroupProber. The two SBCharSetProbers identify that the text is in\n// fact some kind of Hebrew, Logical or Visual. The final decision about which\n// one is it is made by the HebrewProber by combining final-letter scores\n// with the scores of the two SBCharSetProbers to produce a final answer.\n//\n// The SBCSGroupProber is responsible for stripping the original text of HTML\n// tags, English characters, numbers, low-ASCII punctuation characters, spaces\n// and new lines. It reduces any sequence of such characters to a single space.\n// The buffer fed to each prober in the SBCS group prober is pure text in\n// high-ASCII.\n// The two SBCharSetProbers (model probers) share the same language model:\n// Win1255Model.\n// The first SBCharSetProber uses the model normally as any other\n// SBCharSetProber does, to recognize windows-1255, upon which this model was\n// built. The second SBCharSetProber is told to make the pair-of-letter\n// lookup in the language model backwards. This in practice exactly simulates\n// a visual Hebrew model using the windows-1255 logical Hebrew model.\n//\n// The HebrewProber is not using any language model. All it does is look for\n// final-letter evidence suggesting the text is either logical Hebrew or visual\n// Hebrew. Disjointed from the model probers, the results of the HebrewProber\n// alone are meaningless. HebrewProber always returns 0.00 as confidence\n// since it never identifies a charset by itself. Instead, the pointer to the\n// HebrewProber is passed to the model probers as a helper \"Name Prober\".\n// When the Group prober receives a positive identification from any prober,\n// it asks for the name of the charset identified. If the prober queried is a\n// Hebrew model prober, the model prober forwards the call to the\n// HebrewProber to make the final decision. In the HebrewProber, the\n// decision is made according to the final-letters scores maintained and Both\n// model probers scores. The answer is returned in the form of the name of the\n// charset identified, either \"windows-1255\" or \"ISO-8859-8\".\nvar CharSetProber = require('./charsetprober');\n\nvar constants = require('./constants'); // https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/IndexOf\n\n\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (elt\n  /*, from*/\n  ) {\n    var len = this.length >>> 0;\n    var from = Number(arguments[1]) || 0;\n    from = from < 0 ? Math.ceil(from) : Math.floor(from);\n    if (from < 0) from += len;\n\n    for (; from < len; from++) {\n      if (from in this && this[from] === elt) return from;\n    }\n\n    return -1;\n  };\n}\n\nfunction HebrewProber() {\n  CharSetProber.apply(this); // windows-1255 / ISO-8859-8 code points of interest\n\n  var FINAL_KAF = '\\xea';\n  var NORMAL_KAF = '\\xeb';\n  var FINAL_MEM = '\\xed';\n  var NORMAL_MEM = '\\xee';\n  var FINAL_NUN = '\\xef';\n  var NORMAL_NUN = '\\xf0';\n  var FINAL_PE = '\\xf3';\n  var NORMAL_PE = '\\xf4';\n  var FINAL_TSADI = '\\xf5';\n  var NORMAL_TSADI = '\\xf6'; // Minimum Visual vs Logical final letter score difference.\n  // If the difference is below this, don't rely solely on the final letter score distance.\n\n  var MIN_FINAL_CHAR_DISTANCE = 5; // Minimum Visual vs Logical model score difference.\n  // If the difference is below this, don't rely at all on the model score distance.\n\n  var MIN_MODEL_DISTANCE = 0.01;\n  var VISUAL_HEBREW_NAME = \"ISO-8859-8\";\n  var LOGICAL_HEBREW_NAME = \"windows-1255\";\n  var self = this;\n\n  function init() {\n    self._mLogicalProber = null;\n    self._mVisualProber = null;\n    self.reset();\n  }\n\n  this.reset = function () {\n    this._mFinalCharLogicalScore = 0;\n    this._mFinalCharVisualScore = 0; // The two last characters seen in the previous buffer,\n    // mPrev and mBeforePrev are initialized to space in order to simulate a word\n    // delimiter at the beginning of the data\n\n    this._mPrev = \" \";\n    this._mBeforePrev = \" \"; // These probers are owned by the group prober.\n  };\n\n  this.setModelProbers = function (logicalProber, visualProber) {\n    this._mLogicalProber = logicalProber;\n    this._mVisualProber = visualProber;\n  };\n\n  this.isFinal = function (c) {\n    return [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI].indexOf(c) != -1;\n  };\n\n  this.isNonFinal = function (c) {\n    // The normal Tsadi is not a good Non-Final letter due to words like\n    // 'lechotet' (to chat) containing an apostrophe after the tsadi. This\n    // apostrophe is converted to a space in FilterWithoutEnglishLetters causing\n    // the Non-Final tsadi to appear at an end of a word even though this is not\n    // the case in the original text.\n    // The letters Pe and Kaf rarely display a related behavior of not being a\n    // good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for\n    // example legally end with a Non-Final Pe or Kaf. However, the benefit of\n    // these letters as Non-Final letters outweighs the damage since these words\n    // are quite rare.\n    return [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE].indexOf(c) != -1;\n  };\n\n  this.feed = function (aBuf) {\n    // Final letter analysis for logical-visual decision.\n    // Look for evidence that the received buffer is either logical Hebrew or\n    // visual Hebrew.\n    // The following cases are checked:\n    // 1) A word longer than 1 letter, ending with a final letter. This is an\n    //    indication that the text is laid out \"naturally\" since the final letter\n    //    really appears at the end. +1 for logical score.\n    // 2) A word longer than 1 letter, ending with a Non-Final letter. In normal\n    //    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with\n    //    the Non-Final form of that letter. Exceptions to this rule are mentioned\n    //    above in isNonFinal(). This is an indication that the text is laid out\n    //    backwards. +1 for visual score\n    // 3) A word longer than 1 letter, starting with a final letter. Final letters\n    //    should not appear at the beginning of a word. This is an indication that\n    //    the text is laid out backwards. +1 for visual score.\n    //\n    // The visual score and logical score are accumulated throughout the text and\n    // are finally checked against each other in GetCharSetName().\n    // No checking for final letters in the middle of words is done since that case\n    // is not an indication for either Logical or Visual text.\n    //\n    // We automatically filter out all 7-bit characters (replace them with spaces)\n    // so the word boundary detection works properly. [MAP]\n    if (this.getState() == constants.notMe) {\n      // Both model probers say it's not them. No reason to continue.\n      return constants.notMe;\n    }\n\n    aBuf = this.filterHighBitOnly(aBuf);\n\n    for (var i = 0, cur; i < aBuf.length; i++) {\n      cur = aBuf[i];\n\n      if (cur == \" \") {\n        // We stand on a space - a word just ended\n        if (this._mBeforePrev != \" \") {\n          // next-to-last char was not a space so self._mPrev is not a 1 letter word\n          if (this.isFinal(this._mPrev)) {\n            // case (1) [-2:not space][-1:final letter][cur:space]\n            this._mFinalCharLogicalScore++;\n          } else if (this.isNonFinal(this._mPrev)) {\n            // case (2) [-2:not space][-1:Non-Final letter][cur:space]\n            this._mFinalCharVisualScore++;\n          }\n        }\n      } else {\n        // Not standing on a space\n        if (this._mBeforePrev == \" \" && this.isFinal(this._mPrev) && cur != \" \") {\n          // case (3) [-2:space][-1:final letter][cur:not space]\n          this._mFinalCharVisualScore++;\n        }\n      }\n\n      this._mBeforePrev = this._mPrev;\n      this._mPrev = cur;\n    } // Forever detecting, till the end or until both model probers return eNotMe (handled above)\n\n\n    return constants.detecting;\n  };\n\n  this.getCharsetName = function () {\n    // Make the decision: is it Logical or Visual?\n    // If the final letter score distance is dominant enough, rely on it.\n    var finalsub = this._mFinalCharLogicalScore - this._mFinalCharVisualScore;\n\n    if (finalsub >= MIN_FINAL_CHAR_DISTANCE) {\n      return LOGICAL_HEBREW_NAME;\n    }\n\n    if (finalsub <= -MIN_FINAL_CHAR_DISTANCE) {\n      return VISUAL_HEBREW_NAME;\n    } // It's not dominant enough, try to rely on the model scores instead.\n\n\n    var modelsub = this._mLogicalProber.getConfidence() - this._mVisualProber.getConfidence();\n\n    if (modelsub > MIN_MODEL_DISTANCE) {\n      return LOGICAL_HEBREW_NAME;\n    }\n\n    if (modelsub < -MIN_MODEL_DISTANCE) {\n      return VISUAL_HEBREW_NAME;\n    } // Still no good, back to final letter distance, maybe it'll save the day.\n\n\n    if (finalsub < 0) {\n      return VISUAL_HEBREW_NAME;\n    } // (finalsub > 0 - Logical) or (don't know what to do) default to Logical.\n\n\n    return LOGICAL_HEBREW_NAME;\n  };\n\n  this.getState = function () {\n    // Remain active as long as any of the model probers are active.\n    if (this._mLogicalProber.getState() == constants.notMe && this._mVisualProber.getState() == constants.notMe) {\n      return constants.notMe;\n    }\n\n    return constants.detecting;\n  };\n\n  init();\n}\n\nHebrewProber.prototype = new CharSetProber();\nmodule.exports = HebrewProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// KOI8-R language model\n// Character Mapping Table:\nexports.KOI8R_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, // 80\n207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, // 90\n223, 224, 225, 68, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, // a0\n238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, // b0\n27, 3, 21, 28, 13, 2, 39, 19, 26, 4, 23, 11, 8, 12, 5, 1, // c0\n15, 16, 9, 7, 6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54, // d0\n59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34, // e0\n35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70 // f0\n];\nexports.win1251_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 68, 247, 248, 249, 250, 251, 252, 253, 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35, 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43, 3, 21, 10, 19, 13, 2, 24, 20, 4, 23, 11, 8, 12, 5, 1, 15, 9, 7, 6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16];\nexports.latin5_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35, 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43, 3, 21, 10, 19, 13, 2, 24, 20, 4, 23, 11, 8, 12, 5, 1, 15, 9, 7, 6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16, 239, 68, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255];\nexports.macCyrillic_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35, 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 68, 16, 3, 21, 10, 19, 13, 2, 24, 20, 4, 23, 11, 8, 12, 5, 1, 15, 9, 7, 6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 255];\nexports.IBM855_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n191, 192, 193, 194, 68, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 27, 59, 54, 70, 3, 37, 21, 44, 28, 58, 13, 41, 2, 48, 39, 53, 19, 46, 218, 219, 220, 221, 222, 223, 224, 26, 55, 4, 42, 225, 226, 227, 228, 23, 60, 229, 230, 231, 232, 233, 234, 235, 11, 36, 236, 237, 238, 239, 240, 241, 242, 243, 8, 49, 12, 38, 5, 31, 1, 34, 15, 244, 245, 246, 247, 35, 16, 248, 43, 9, 45, 7, 32, 6, 40, 14, 52, 24, 56, 10, 33, 17, 61, 249, 250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50, 251, 252, 255];\nexports.IBM866_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 74, 153, 75, 154, // 40\n155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 253, 253, 253, 253, 253, // 50\n253, 71, 172, 66, 173, 65, 174, 76, 175, 64, 176, 177, 77, 72, 178, 69, // 60\n67, 179, 78, 73, 180, 181, 79, 182, 183, 184, 185, 253, 253, 253, 253, 253, // 70\n37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35, 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43, 3, 21, 10, 19, 13, 2, 24, 20, 4, 23, 11, 8, 12, 5, 1, 15, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 9, 7, 6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16, 239, 68, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 97.6601%\n// first 1024 sequences: 2.3389%\n// rest  sequences:      0.1237%\n// negative sequences:   0.0009%\n\nexports.RussianLangModel = [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 3, 3, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 2, 2, 2, 2, 0, 0, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 1, 3, 3, 1, 3, 3, 3, 3, 2, 2, 3, 0, 2, 2, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 3, 2, 1, 2, 2, 0, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 2, 3, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 3, 0, 3, 2, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 0, 3, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 0, 1, 3, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 3, 0, 1, 1, 1, 1, 2, 1, 1, 0, 2, 2, 2, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 0, 1, 1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 3, 3, 3, 2, 2, 2, 2, 0, 2, 2, 2, 2, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 2, 0, 0, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 2, 2, 3, 3, 0, 2, 1, 0, 3, 2, 3, 2, 3, 0, 0, 1, 2, 0, 0, 1, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 1, 2, 2, 0, 0, 2, 3, 2, 2, 2, 3, 2, 3, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 2, 3, 2, 3, 0, 1, 2, 3, 3, 2, 0, 2, 3, 0, 0, 2, 3, 2, 2, 0, 1, 3, 1, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 3, 2, 0, 0, 2, 2, 3, 3, 3, 2, 3, 3, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 2, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 2, 3, 2, 0, 2, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 3, 1, 3, 2, 3, 1, 1, 2, 1, 0, 2, 2, 2, 2, 1, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3, 3, 3, 3, 1, 2, 2, 1, 3, 1, 0, 3, 0, 0, 3, 0, 0, 0, 1, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 1, 1, 3, 3, 3, 2, 2, 1, 2, 2, 3, 1, 1, 2, 0, 0, 2, 2, 1, 3, 0, 0, 2, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 3, 3, 3, 1, 2, 2, 2, 1, 2, 1, 3, 3, 1, 1, 2, 1, 2, 1, 2, 2, 0, 2, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 2, 1, 3, 2, 2, 3, 2, 0, 3, 2, 0, 3, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 3, 3, 3, 2, 2, 2, 3, 3, 1, 2, 1, 2, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 2, 1, 2, 3, 3, 2, 2, 1, 2, 2, 3, 0, 2, 1, 0, 0, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 1, 0, 1, 1, 2, 2, 1, 1, 3, 0, 0, 1, 3, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 3, 3, 3, 2, 0, 0, 0, 2, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2, 3, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 0, 0, 1, 1, 1, 0, 2, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 2, 0, 0, 1, 1, 2, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 2, 2, 3, 2, 2, 2, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 3, 3, 3, 2, 2, 2, 2, 3, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 3, 1, 2, 1, 2, 0, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 2, 0, 0, 1, 0, 3, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 0, 0, 0, 2, 1, 2, 2, 1, 1, 2, 2, 0, 1, 1, 0, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 3, 2, 2, 2, 1, 1, 1, 2, 3, 0, 0, 0, 0, 2, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 3, 2, 3, 2, 1, 2, 2, 2, 2, 1, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 1, 2, 1, 1, 1, 2, 2, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 3, 2, 3, 3, 2, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 3, 3, 3, 1, 2, 2, 2, 2, 0, 1, 1, 0, 2, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 2, 0, 0, 1, 1, 2, 2, 1, 0, 0, 2, 0, 1, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 3, 2, 3, 2, 1, 0, 0, 2, 2, 2, 0, 1, 0, 2, 0, 1, 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 3, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 0, 0, 0, 2, 2, 2, 0, 0, 0, 1, 2, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 3, 0, 0, 0, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 3, 3, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 1, 2, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 2, 3, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 3, 2, 2, 2, 1, 0, 0, 2, 2, 1, 0, 1, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 3, 1, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 2, 0, 0, 1, 0, 3, 2, 1, 2, 1, 2, 2, 0, 1, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 2, 0, 1, 0, 1, 1, 1, 2, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 2, 1, 2, 2, 2, 0, 3, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 2, 3, 2, 2, 0, 0, 1, 1, 2, 0, 1, 2, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 1, 0, 0, 0, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 2, 2, 2, 2, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 0, 0, 0, 0, 1, 0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 2, 0, 2, 1, 1, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 2, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0];\nexports.Koi8rModel = {\n  \"charToOrderMap\": exports.KOI8R_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"KOI8-R\"\n};\nexports.Win1251CyrillicModel = {\n  \"charToOrderMap\": exports.win1251_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"windows-1251\"\n};\nexports.Latin5CyrillicModel = {\n  \"charToOrderMap\": exports.latin5_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"ISO-8859-5\"\n};\nexports.MacCyrillicModel = {\n  \"charToOrderMap\": exports.macCyrillic_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"MacCyrillic\"\n};\nexports.Ibm866Model = {\n  \"charToOrderMap\": exports.IBM866_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"IBM866\"\n};\nexports.Ibm855Model = {\n  \"charToOrderMap\": exports.IBM855_CharToOrderMap,\n  \"precedenceMatrix\": exports.RussianLangModel,\n  \"mTypicalPositiveRatio\": 0.976601,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"IBM855\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n// Character Mapping Table:\nexports.Latin7_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 82, 100, 104, 94, 98, 101, 116, 102, 111, 187, 117, 92, 88, 113, 85, // 40\n79, 118, 105, 83, 67, 114, 119, 95, 99, 109, 188, 253, 253, 253, 253, 253, // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68, 120, 97, 77, 86, 69, 55, // 60\n78, 115, 65, 66, 58, 76, 106, 103, 87, 107, 112, 253, 253, 253, 253, 253, // 70\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 80\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 90\n253, 233, 90, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 74, 253, 253, // a0\n253, 253, 253, 253, 247, 248, 61, 36, 46, 71, 73, 253, 54, 253, 108, 123, // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39, // c0\n35, 48, 250, 37, 33, 45, 56, 50, 84, 57, 120, 121, 17, 18, 22, 15, // d0\n124, 1, 29, 20, 21, 3, 32, 13, 25, 5, 11, 16, 10, 6, 30, 4, // e0\n9, 8, 14, 7, 2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27, 253 // f0\n];\nexports.win1253_CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 82, 100, 104, 94, 98, 101, 116, 102, 111, 187, 117, 92, 88, 113, 85, // 40\n79, 118, 105, 83, 67, 114, 119, 95, 99, 109, 188, 253, 253, 253, 253, 253, // 50\n253, 72, 70, 80, 81, 60, 96, 93, 89, 68, 120, 97, 77, 86, 69, 55, // 60\n78, 115, 65, 66, 58, 76, 106, 103, 87, 107, 112, 253, 253, 253, 253, 253, // 70\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 80\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 90\n253, 233, 61, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 74, 253, 253, // a0\n253, 253, 253, 253, 247, 253, 253, 36, 46, 71, 73, 253, 54, 253, 108, 123, // b0\n110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39, // c0\n35, 48, 250, 37, 33, 45, 56, 50, 84, 57, 120, 121, 17, 18, 22, 15, // d0\n124, 1, 29, 20, 21, 3, 32, 13, 25, 5, 11, 16, 10, 6, 30, 4, // e0\n9, 8, 14, 7, 2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27, 253 // f0\n]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 98.2851%\n// first 1024 sequences:1.7001%\n// rest  sequences:     0.0359%\n// negative sequences:  0.0148%\n\nexports.GreekLangModel = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 2, 2, 3, 3, 0, 3, 0, 3, 2, 0, 3, 3, 3, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 2, 3, 3, 0, 3, 2, 3, 3, 3, 0, 0, 3, 0, 3, 0, 3, 3, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 2, 3, 3, 0, 3, 3, 3, 3, 2, 3, 3, 3, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 1, 3, 3, 3, 3, 2, 3, 3, 2, 3, 3, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 3, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 3, 0, 3, 1, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 3, 0, 3, 3, 3, 3, 3, 0, 3, 2, 2, 2, 3, 0, 2, 3, 3, 3, 3, 3, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 0, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 0, 3, 0, 0, 0, 3, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 2, 3, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 3, 0, 0, 3, 3, 0, 2, 3, 0, 3, 0, 3, 3, 3, 0, 0, 3, 0, 3, 0, 2, 2, 3, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 0, 3, 2, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 2, 3, 2, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 0, 2, 3, 2, 3, 2, 2, 2, 3, 2, 3, 3, 2, 3, 0, 2, 2, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 3, 3, 2, 3, 3, 0, 0, 3, 0, 3, 0, 0, 0, 3, 2, 0, 3, 0, 3, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 0, 0, 0, 3, 3, 0, 3, 3, 3, 0, 0, 1, 2, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 0, 0, 3, 2, 2, 3, 3, 0, 3, 3, 3, 3, 3, 2, 1, 3, 0, 3, 2, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 2, 3, 3, 3, 3, 3, 3, 0, 0, 3, 0, 3, 0, 0, 0, 3, 3, 0, 3, 2, 3, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0, 0, 3, 0, 3, 0, 0, 0, 3, 2, 0, 3, 2, 3, 0, 0, 3, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 2, 2, 3, 3, 3, 3, 3, 3, 0, 2, 3, 0, 3, 0, 0, 0, 3, 3, 0, 3, 0, 2, 0, 0, 2, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 3, 0, 3, 0, 3, 3, 2, 3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 2, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 3, 0, 2, 3, 3, 0, 0, 3, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 3, 0, 2, 0, 0, 0, 3, 3, 0, 3, 0, 3, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 3, 0, 2, 0, 3, 2, 0, 3, 2, 3, 2, 3, 0, 0, 3, 2, 3, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 3, 3, 3, 3, 3, 0, 0, 0, 3, 0, 2, 1, 0, 0, 3, 2, 2, 2, 0, 3, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 2, 0, 3, 0, 3, 0, 3, 3, 0, 2, 1, 2, 3, 3, 0, 0, 3, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 0, 2, 3, 0, 3, 0, 0, 0, 2, 1, 0, 2, 2, 3, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 3, 3, 3, 2, 3, 0, 0, 1, 3, 0, 2, 0, 0, 0, 0, 3, 0, 1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 0, 3, 0, 0, 0, 3, 2, 0, 3, 2, 3, 3, 3, 0, 0, 3, 0, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 0, 3, 0, 0, 0, 0, 2, 0, 2, 3, 3, 2, 2, 2, 2, 3, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 0, 2, 0, 2, 3, 2, 0, 0, 3, 0, 3, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 3, 2, 2, 3, 0, 2, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 1, 3, 0, 2, 0, 2, 2, 2, 0, 0, 2, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 3, 2, 0, 2, 2, 0, 2, 0, 2, 2, 0, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 3, 2, 2, 3, 2, 3, 2, 0, 0, 3, 3, 3, 0, 0, 3, 2, 0, 0, 0, 1, 1, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 3, 0, 3, 3, 2, 2, 0, 3, 0, 0, 0, 2, 2, 0, 2, 2, 2, 1, 2, 0, 0, 1, 2, 2, 0, 0, 3, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 2, 2, 0, 0, 0, 2, 0, 2, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 1, 0, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 2, 3, 0, 0, 0, 3, 0, 0, 2, 2, 0, 2, 0, 2, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 0, 2, 2, 2, 0, 2, 2, 0, 1, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 1, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 1, 2, 1, 0, 0, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 0, 0, 2, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 1, 3, 0, 2, 0, 2, 2, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 2, 1, 2, 0, 2, 2, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 1, 2, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 1, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 1, 2, 0, 0, 0, 2, 2, 0, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 2, 2, 1, 0, 1, 0, 1, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nexports.Latin7GreekModel = {\n  \"charToOrderMap\": exports.Latin7_CharToOrderMap,\n  \"precedenceMatrix\": exports.GreekLangModel,\n  \"mTypicalPositiveRatio\": 0.982851,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"ISO-8859-7\"\n};\nexports.Win1253GreekModel = {\n  \"charToOrderMap\": exports.win1253_CharToOrderMap,\n  \"precedenceMatrix\": exports.GreekLangModel,\n  \"mTypicalPositiveRatio\": 0.982851,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"windows-1253\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n// The following result for thai was collected from a limited sample (1M).\n// Character Mapping Table:\nexports.TIS620CharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 182, 106, 107, 100, 183, 184, 185, 101, 94, 186, 187, 108, 109, 110, 111, // 40\n188, 189, 190, 89, 95, 112, 113, 191, 192, 193, 194, 253, 253, 253, 253, 253, // 50\n253, 64, 72, 73, 114, 74, 115, 116, 102, 81, 201, 117, 90, 103, 78, 82, // 60\n96, 202, 91, 79, 84, 104, 105, 97, 98, 92, 203, 253, 253, 253, 253, 253, // 70\n209, 210, 211, 212, 213, 88, 214, 215, 216, 217, 218, 219, 220, 118, 221, 222, 223, 224, 99, 85, 83, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 5, 30, 237, 24, 238, 75, 8, 26, 52, 34, 51, 119, 47, 58, 57, 49, 53, 55, 43, 20, 19, 44, 14, 48, 3, 17, 25, 39, 62, 31, 54, 45, 9, 16, 2, 61, 15, 239, 12, 42, 46, 18, 21, 76, 4, 66, 63, 22, 10, 1, 36, 23, 13, 40, 27, 32, 35, 86, 240, 241, 242, 243, 244, 11, 28, 41, 29, 33, 245, 50, 37, 6, 7, 67, 77, 38, 93, 246, 247, 68, 56, 59, 65, 69, 60, 70, 80, 71, 87, 248, 249, 250, 251, 252, 253]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 92.6386%\n// first 1024 sequences:7.3177%\n// rest  sequences:     1.0230%\n// negative sequences:  0.0436%\n\nexports.ThaiLangModel = [0, 1, 3, 3, 3, 3, 0, 0, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 3, 3, 3, 3, 0, 3, 3, 0, 0, 0, 1, 3, 0, 3, 3, 2, 3, 3, 0, 1, 2, 3, 3, 3, 3, 0, 2, 0, 2, 0, 0, 3, 2, 1, 2, 2, 3, 0, 3, 3, 2, 3, 0, 0, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 2, 3, 0, 2, 2, 2, 3, 0, 2, 3, 0, 0, 0, 0, 1, 0, 1, 2, 3, 1, 1, 3, 2, 2, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 3, 3, 2, 2, 2, 3, 1, 2, 3, 0, 3, 3, 2, 2, 1, 2, 3, 3, 1, 2, 0, 1, 3, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 2, 2, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 3, 2, 3, 2, 2, 3, 3, 1, 2, 3, 1, 2, 2, 3, 3, 1, 0, 2, 1, 0, 0, 3, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 3, 1, 2, 1, 1, 3, 2, 1, 0, 2, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 3, 2, 3, 3, 2, 3, 1, 1, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 3, 3, 2, 1, 0, 1, 2, 2, 0, 1, 3, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 3, 0, 0, 2, 1, 1, 3, 3, 2, 3, 3, 2, 0, 0, 3, 3, 0, 3, 3, 0, 2, 2, 3, 1, 2, 2, 1, 1, 1, 0, 2, 2, 2, 0, 2, 2, 1, 1, 0, 2, 1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 2, 3, 3, 2, 0, 0, 3, 3, 0, 2, 3, 0, 2, 1, 2, 2, 2, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 2, 1, 1, 0, 2, 1, 0, 2, 0, 0, 2, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 3, 2, 3, 2, 0, 2, 2, 1, 3, 2, 1, 3, 2, 1, 2, 3, 2, 2, 3, 0, 2, 3, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 0, 0, 0, 0, 2, 0, 1, 2, 0, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 2, 3, 3, 2, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 1, 2, 3, 2, 2, 3, 1, 3, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 1, 3, 0, 1, 1, 1, 0, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 3, 0, 3, 3, 3, 3, 3, 0, 0, 3, 0, 2, 2, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 3, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 0, 0, 2, 3, 0, 0, 3, 0, 3, 3, 2, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 2, 1, 1, 3, 0, 0, 1, 0, 0, 2, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 1, 2, 1, 3, 3, 2, 2, 1, 2, 2, 2, 3, 1, 1, 2, 0, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 1, 2, 3, 3, 3, 0, 2, 0, 2, 2, 0, 2, 1, 3, 2, 2, 1, 2, 1, 0, 0, 2, 2, 1, 0, 2, 1, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 1, 3, 3, 1, 1, 3, 0, 2, 3, 1, 1, 3, 2, 1, 1, 2, 0, 2, 2, 3, 2, 1, 1, 1, 1, 1, 2, 3, 0, 0, 1, 3, 1, 2, 1, 2, 0, 3, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 1, 1, 3, 2, 3, 3, 3, 1, 3, 2, 1, 3, 2, 1, 3, 2, 2, 2, 2, 1, 3, 3, 1, 2, 1, 3, 1, 2, 3, 0, 2, 1, 1, 3, 2, 2, 2, 1, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 2, 3, 2, 3, 3, 2, 3, 2, 3, 2, 3, 3, 2, 1, 0, 3, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 3, 0, 1, 3, 1, 1, 1, 1, 0, 1, 1, 0, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 3, 2, 2, 1, 1, 3, 2, 3, 2, 3, 2, 0, 3, 2, 2, 1, 2, 0, 2, 2, 2, 1, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 1, 0, 2, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 2, 3, 1, 2, 3, 3, 2, 2, 3, 0, 1, 1, 2, 0, 3, 3, 2, 2, 3, 0, 1, 1, 3, 0, 0, 0, 0, 3, 1, 0, 3, 3, 0, 2, 0, 2, 1, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 3, 2, 3, 3, 0, 1, 3, 1, 1, 2, 1, 2, 1, 1, 3, 1, 1, 0, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 2, 2, 2, 2, 1, 1, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 2, 1, 1, 2, 1, 3, 3, 2, 3, 2, 2, 3, 2, 2, 3, 1, 2, 2, 1, 2, 0, 3, 2, 1, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 2, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 0, 2, 1, 0, 3, 2, 0, 0, 3, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 2, 3, 0, 0, 1, 3, 0, 3, 2, 0, 3, 2, 2, 3, 3, 3, 3, 3, 1, 0, 2, 2, 2, 0, 2, 2, 1, 2, 0, 2, 3, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 2, 3, 1, 3, 3, 2, 3, 3, 0, 3, 3, 0, 3, 2, 2, 3, 2, 3, 3, 3, 0, 0, 2, 2, 3, 0, 1, 1, 1, 3, 0, 0, 3, 0, 0, 0, 2, 2, 0, 1, 3, 0, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 3, 3, 2, 0, 3, 3, 2, 2, 3, 1, 3, 2, 1, 3, 2, 0, 1, 2, 2, 0, 2, 3, 2, 1, 0, 3, 0, 0, 0, 0, 3, 0, 0, 2, 3, 1, 3, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 2, 2, 2, 1, 2, 0, 1, 3, 1, 1, 3, 1, 3, 0, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 0, 2, 1, 0, 1, 1, 2, 0, 0, 0, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 1, 0, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 3, 1, 1, 1, 2, 0, 1, 1, 2, 1, 2, 1, 3, 2, 0, 0, 3, 1, 1, 1, 1, 1, 3, 1, 0, 2, 3, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 1, 3, 0, 0, 1, 2, 0, 0, 2, 0, 3, 3, 2, 3, 3, 3, 2, 3, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 1, 3, 3, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 2, 3, 1, 2, 3, 1, 0, 3, 0, 2, 2, 1, 0, 2, 1, 1, 2, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 1, 0, 1, 1, 1, 3, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 3, 1, 0, 1, 3, 1, 1, 1, 1, 1, 1, 0, 2, 0, 1, 3, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 3, 0, 2, 2, 1, 3, 3, 2, 3, 3, 0, 1, 1, 0, 2, 2, 1, 2, 1, 3, 3, 1, 0, 0, 3, 2, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 1, 2, 0, 1, 1, 3, 1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 3, 0, 0, 3, 0, 3, 1, 0, 1, 1, 1, 3, 2, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 3, 2, 1, 3, 3, 1, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 2, 0, 3, 3, 3, 2, 2, 0, 1, 1, 0, 1, 3, 0, 0, 0, 2, 2, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 3, 1, 2, 0, 0, 2, 1, 0, 3, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 0, 0, 3, 1, 1, 0, 2, 2, 1, 1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 2, 2, 0, 1, 2, 0, 1, 0, 1, 3, 1, 2, 1, 0, 0, 0, 2, 0, 3, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 1, 2, 2, 0, 0, 0, 2, 0, 2, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 0, 0, 1, 1, 1, 0, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 1, 3, 1, 1, 1, 1, 0, 0, 0, 0, 3, 2, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 3, 2, 1, 2, 2, 3, 0, 0, 0, 2, 3, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 2, 0, 1, 0, 0, 0, 0, 2, 0, 2, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 1, 3, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 1, 1, 1, 2, 3, 0, 0, 2, 1, 1, 1, 1, 1, 0, 2, 1, 1, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 0, 1, 2, 1, 0, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 1, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 3, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 3, 3, 0, 0, 1, 1, 2, 0, 0, 1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 1, 2, 0, 0, 1, 1, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 2, 1, 3, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nexports.TIS620ThaiModel = {\n  \"charToOrderMap\": exports.TIS620CharToOrderMap,\n  \"precedenceMatrix\": exports.ThaiLangModel,\n  \"mTypicalPositiveRatio\": 0.926386,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"TIS-620\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n// Character Mapping Table:\nexports.Latin2_HungarianCharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47, 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52, 253, 253, 253, 253, 253, 253, 2, 18, 26, 17, 1, 27, 12, 20, 9, 22, 7, 6, 13, 4, 8, 23, 67, 10, 5, 3, 21, 19, 65, 62, 16, 11, 253, 253, 253, 253, 253, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 75, 198, 199, 200, 201, 202, 203, 204, 205, 79, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 51, 81, 222, 78, 223, 224, 225, 226, 44, 227, 228, 229, 61, 230, 231, 232, 233, 234, 58, 235, 66, 59, 236, 237, 238, 60, 69, 63, 239, 240, 241, 82, 14, 74, 242, 70, 80, 243, 72, 244, 15, 83, 77, 84, 30, 76, 85, 245, 246, 247, 25, 73, 42, 24, 248, 249, 250, 31, 56, 29, 251, 252, 253];\nexports.win1250HungarianCharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47, 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52, 253, 253, 253, 253, 253, 253, 2, 18, 26, 17, 1, 27, 12, 20, 9, 22, 7, 6, 13, 4, 8, 23, 67, 10, 5, 3, 21, 19, 65, 62, 16, 11, 253, 253, 253, 253, 253, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 78, 181, 69, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 76, 198, 199, 200, 201, 202, 203, 204, 205, 81, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 51, 83, 222, 80, 223, 224, 225, 226, 44, 227, 228, 229, 61, 230, 231, 232, 233, 234, 58, 235, 66, 59, 236, 237, 238, 60, 70, 63, 239, 240, 241, 84, 14, 75, 242, 71, 82, 243, 73, 244, 15, 85, 79, 86, 30, 77, 87, 245, 246, 247, 25, 74, 42, 24, 248, 249, 250, 31, 56, 29, 251, 252, 253]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 94.7368%\n// first 1024 sequences:5.2623%\n// rest  sequences:     0.8894%\n// negative sequences:  0.0009%\n\nexports.HungarianLangModel = [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 1, 1, 2, 2, 2, 2, 2, 1, 2, 3, 2, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 2, 3, 3, 1, 1, 3, 3, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 2, 1, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 2, 3, 3, 3, 1, 3, 3, 3, 3, 3, 1, 3, 3, 2, 2, 0, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 3, 2, 3, 2, 0, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 1, 2, 3, 2, 2, 3, 1, 2, 3, 3, 2, 2, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 0, 2, 3, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 2, 1, 3, 2, 2, 3, 2, 1, 3, 2, 2, 1, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 1, 2, 1, 3, 3, 3, 3, 2, 2, 3, 1, 1, 3, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 3, 2, 2, 1, 3, 3, 3, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 2, 0, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 3, 3, 1, 3, 2, 2, 2, 3, 1, 1, 3, 3, 1, 1, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 1, 2, 3, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 2, 2, 3, 1, 3, 3, 2, 2, 1, 3, 3, 3, 1, 1, 3, 1, 2, 3, 2, 3, 2, 2, 2, 1, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 1, 2, 1, 3, 3, 3, 2, 2, 3, 2, 1, 0, 3, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 3, 1, 1, 0, 3, 3, 3, 3, 0, 2, 3, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 3, 3, 0, 1, 2, 3, 2, 3, 2, 2, 3, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 1, 2, 3, 3, 3, 2, 1, 2, 3, 3, 2, 2, 2, 3, 2, 3, 3, 1, 3, 3, 1, 1, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 2, 2, 2, 2, 3, 3, 3, 1, 1, 1, 3, 3, 1, 1, 3, 1, 1, 3, 2, 1, 2, 3, 1, 1, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 1, 2, 1, 1, 3, 3, 1, 1, 1, 1, 3, 3, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 1, 2, 1, 1, 3, 3, 1, 0, 1, 1, 3, 3, 2, 0, 1, 1, 2, 3, 1, 0, 2, 2, 1, 0, 0, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 3, 3, 3, 3, 3, 1, 2, 3, 2, 3, 3, 2, 1, 1, 3, 2, 3, 2, 1, 2, 2, 0, 1, 2, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 2, 2, 2, 2, 3, 1, 2, 2, 1, 1, 3, 3, 0, 3, 2, 1, 2, 3, 2, 1, 3, 3, 1, 1, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 2, 2, 2, 3, 2, 3, 3, 3, 2, 1, 1, 3, 3, 1, 1, 1, 2, 2, 3, 2, 3, 2, 2, 2, 1, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 3, 3, 3, 0, 0, 3, 3, 2, 3, 0, 0, 0, 2, 3, 3, 1, 0, 1, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 2, 3, 3, 3, 3, 3, 1, 2, 3, 3, 2, 2, 1, 1, 0, 3, 3, 2, 2, 1, 2, 2, 1, 0, 2, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 2, 1, 3, 1, 2, 3, 3, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 1, 1, 1, 1, 1, 3, 3, 3, 0, 1, 1, 3, 3, 1, 1, 1, 1, 1, 2, 2, 0, 3, 1, 1, 2, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 1, 2, 1, 2, 2, 0, 1, 2, 3, 1, 2, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 0, 0, 1, 1, 0, 0, 0, 0, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 0, 2, 0, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 2, 3, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 1, 0, 2, 1, 2, 2, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 2, 2, 1, 0, 0, 3, 2, 3, 2, 0, 0, 0, 1, 1, 3, 0, 0, 1, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 2, 2, 3, 3, 1, 0, 1, 3, 2, 3, 1, 1, 1, 0, 1, 1, 1, 1, 1, 3, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 1, 0, 1, 2, 3, 3, 2, 0, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 3, 2, 2, 1, 0, 0, 1, 1, 2, 2, 0, 3, 0, 1, 2, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 3, 3, 0, 1, 0, 0, 0, 3, 3, 1, 0, 0, 1, 2, 2, 1, 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 3, 3, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 0, 1, 0, 2, 3, 2, 0, 0, 1, 2, 2, 1, 0, 0, 1, 1, 1, 0, 0, 2, 1, 0, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 1, 2, 2, 2, 0, 0, 1, 0, 0, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 3, 0, 0, 0, 1, 0, 3, 2, 1, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 2, 1, 2, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 3, 0, 0, 2, 1, 2, 2, 1, 0, 0, 2, 1, 2, 2, 0, 0, 0, 2, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 2, 0, 0, 0, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 3, 2, 0, 0, 0, 1, 0, 2, 2, 2, 0, 0, 0, 2, 2, 1, 0, 0, 0, 0, 3, 1, 1, 1, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 3, 2, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 2, 1, 1, 0, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 0, 1, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 1, 1, 2, 2, 2, 3, 2, 1, 1, 2, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0, 1, 1, 0, 0, 1, 2, 0, 0, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 0, 1, 1, 0, 0, 1, 2, 3, 2, 1, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1, 0, 1, 2, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 1, 1, 1, 0, 2, 2, 2, 0, 0, 0, 3, 2, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 2, 1, 0, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 2, 3, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 0, 1, 2, 1, 1, 1, 1, 0, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 2, 2, 2, 0, 0, 0, 1, 0, 2, 1, 2, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 0, 0, 1, 0, 2, 2, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1, 1, 2, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 1, 0, 1, 2, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 1, 2, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 2, 0, 0, 3, 1, 0, 2, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 2, 1, 0, 1, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nexports.Latin2HungarianModel = {\n  \"charToOrderMap\": exports.Latin2_HungarianCharToOrderMap,\n  \"precedenceMatrix\": exports.HungarianLangModel,\n  \"mTypicalPositiveRatio\": 0.947368,\n  \"keepEnglishLetter\": true,\n  \"charsetName\": \"ISO-8859-2\"\n};\nexports.Win1250HungarianModel = {\n  \"charToOrderMap\": exports.win1250HungarianCharToOrderMap,\n  \"precedenceMatrix\": exports.HungarianLangModel,\n  \"mTypicalPositiveRatio\": 0.947368,\n  \"keepEnglishLetter\": true,\n  \"charsetName\": \"windows-1250\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\n// 255: Control characters that usually does not exist in any text\n// 254: Carriage/Return\n// 253: symbol (punctuation) that does not belong to word\n// 252: 0 - 9\n// Character Mapping Table:\n// this table is modified base on win1251BulgarianCharToOrderMap, so\n// only number <64 is sure valid\nexports.Latin5_BulgarianCharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 77, 90, 99, 100, 72, 109, 107, 101, 79, 185, 81, 102, 76, 94, 82, // 40\n110, 186, 108, 91, 74, 119, 84, 96, 111, 187, 115, 253, 253, 253, 253, 253, // 50\n253, 65, 69, 70, 66, 63, 68, 112, 103, 92, 194, 104, 95, 86, 87, 71, // 60\n116, 195, 85, 93, 97, 113, 196, 197, 198, 199, 200, 253, 253, 253, 253, 253, // 70\n194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, // 80\n210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, // 90\n81, 226, 227, 228, 229, 230, 105, 231, 232, 233, 234, 235, 236, 45, 237, 238, // a0\n31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30, // b0\n39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61, 239, 67, 240, 60, 56, // c0\n1, 18, 9, 20, 11, 3, 23, 15, 2, 26, 12, 10, 14, 6, 4, 13, // d0\n7, 8, 5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52, 241, 42, 16, // e0\n62, 242, 243, 244, 58, 245, 98, 246, 247, 248, 249, 250, 251, 91, 252, 253 // f0\n];\nexports.win1251BulgarianCharToOrderMap = [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 255, 255, 254, 255, 255, // 00\n255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, // 10\n253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, // 20\n252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 253, 253, 253, 253, 253, 253, // 30\n253, 77, 90, 99, 100, 72, 109, 107, 101, 79, 185, 81, 102, 76, 94, 82, // 40\n110, 186, 108, 91, 74, 119, 84, 96, 111, 187, 115, 253, 253, 253, 253, 253, // 50\n253, 65, 69, 70, 66, 63, 68, 112, 103, 92, 194, 104, 95, 86, 87, 71, // 60\n116, 195, 85, 93, 97, 113, 196, 197, 198, 199, 200, 253, 253, 253, 253, 253, // 70\n206, 207, 208, 209, 210, 211, 212, 213, 120, 214, 215, 216, 217, 218, 219, 220, // 80\n221, 78, 64, 83, 121, 98, 117, 105, 222, 223, 224, 225, 226, 227, 228, 229, // 90\n88, 230, 231, 232, 233, 122, 89, 106, 234, 235, 236, 237, 238, 45, 239, 240, // a0\n73, 80, 118, 114, 241, 242, 243, 244, 245, 62, 58, 246, 247, 248, 249, 250, // b0\n31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30, // c0\n39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61, 251, 67, 252, 60, 56, // d0\n1, 18, 9, 20, 11, 3, 23, 15, 2, 26, 12, 10, 14, 6, 4, 13, // e0\n7, 8, 5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52, 253, 42, 16 // f0\n]; // Model Table:\n// total sequences: 100%\n// first 512 sequences: 96.9392%\n// first 1024 sequences:3.0618%\n// rest  sequences:     0.2992%\n// negative sequences:  0.0020%\n\nexports.BulgarianLangModel = [0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 2, 2, 3, 2, 2, 1, 2, 2, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 1, 3, 3, 3, 3, 2, 2, 2, 1, 1, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 1, 1, 2, 3, 3, 2, 3, 3, 3, 3, 2, 1, 2, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 1, 3, 3, 2, 3, 2, 2, 2, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 2, 2, 3, 3, 3, 1, 2, 2, 3, 2, 1, 1, 2, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 1, 2, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 2, 3, 2, 2, 2, 3, 1, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 1, 3, 1, 3, 2, 2, 3, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 1, 2, 1, 1, 1, 2, 3, 1, 3, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 1, 3, 2, 2, 3, 3, 1, 2, 3, 1, 1, 3, 3, 3, 3, 1, 2, 2, 1, 1, 1, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 2, 3, 3, 3, 2, 2, 1, 1, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 1, 2, 1, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 2, 1, 0, 3, 1, 2, 1, 2, 1, 2, 3, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 1, 3, 3, 2, 3, 3, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 2, 1, 1, 2, 1, 3, 3, 0, 3, 1, 1, 1, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 1, 3, 3, 2, 3, 2, 2, 2, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 3, 2, 1, 1, 1, 1, 1, 3, 1, 3, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 2, 3, 2, 0, 3, 2, 0, 3, 0, 2, 0, 0, 2, 1, 3, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 2, 1, 3, 1, 1, 2, 1, 3, 2, 1, 1, 0, 1, 2, 3, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 2, 3, 2, 3, 3, 1, 3, 2, 1, 1, 1, 2, 1, 1, 2, 1, 3, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 2, 2, 3, 3, 2, 3, 2, 2, 2, 3, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 1, 3, 1, 0, 2, 2, 1, 3, 2, 1, 0, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 1, 2, 0, 2, 3, 1, 2, 3, 2, 0, 1, 3, 1, 2, 1, 1, 1, 0, 0, 1, 0, 0, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 3, 3, 3, 3, 3, 2, 1, 2, 2, 1, 2, 0, 2, 0, 1, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 2, 3, 3, 1, 1, 3, 1, 0, 3, 2, 1, 0, 0, 0, 1, 2, 0, 2, 0, 1, 0, 0, 0, 1, 0, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 1, 0, 1, 0, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 0, 2, 1, 2, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 0, 1, 2, 1, 2, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 2, 0, 1, 0, 0, 0, 0, 2, 3, 2, 3, 3, 0, 0, 2, 1, 0, 2, 1, 0, 0, 0, 0, 2, 3, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 2, 0, 0, 3, 3, 2, 2, 3, 0, 2, 3, 1, 1, 2, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 0, 1, 0, 1, 0, 1, 2, 0, 2, 2, 1, 1, 1, 1, 2, 1, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 3, 2, 3, 3, 0, 0, 3, 0, 1, 1, 0, 1, 0, 0, 0, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 0, 2, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 0, 2, 0, 1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 2, 0, 1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 2, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 2, 3, 3, 3, 3, 0, 2, 2, 0, 2, 1, 0, 0, 0, 1, 1, 1, 2, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 2, 1, 0, 0, 0, 1, 1, 0, 0, 2, 3, 3, 3, 3, 0, 2, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3, 3, 2, 2, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 3, 1, 0, 1, 0, 2, 2, 2, 2, 3, 2, 1, 1, 1, 2, 3, 0, 0, 1, 0, 2, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 0, 1, 2, 1, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 2, 1, 0, 1, 0, 0, 0, 0, 2, 1, 0, 1, 0, 3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 0, 2, 1, 2, 2, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 0, 1, 1, 0, 2, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 3, 2, 0, 1, 2, 0, 1, 2, 1, 1, 0, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 2, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 0, 2, 1, 2, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 3, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 2, 3, 1, 2, 1, 0, 1, 1, 0, 2, 2, 2, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 1, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 3, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 2, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 3, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 2, 0, 1, 0, 0, 1, 1, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 0, 1, 1, 0, 2, 1, 0, 1, 1, 1, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];\nexports.Latin5BulgarianModel = {\n  \"charToOrderMap\": exports.Latin5_BulgarianCharToOrderMap,\n  \"precedenceMatrix\": exports.BulgarianLangModel,\n  \"mTypicalPositiveRatio\": 0.969392,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"ISO-8859-5\"\n};\nexports.Win1251BulgarianModel = {\n  \"charToOrderMap\": exports.win1251BulgarianCharToOrderMap,\n  \"precedenceMatrix\": exports.BulgarianLangModel,\n  \"mTypicalPositiveRatio\": 0.969392,\n  \"keepEnglishLetter\": false,\n  \"charsetName\": \"windows-1251\"\n};","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetProber = require('./charsetprober');\n\nvar Constants = require('./constants');\n\nvar UDF = 0; // undefined\n\nvar OTH = 1; // other\n\nvar ASC = 2; // ascii capital letter\n\nvar ASS = 3; // ascii small letter\n\nvar ACV = 4; // accent capital vowel\n\nvar ACO = 5; // accent capital other\n\nvar ASV = 6; // accent small vowel\n\nvar ASO = 7; // accent small other\n\nvar Latin1_CharToClass = [OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 00 - 07\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 08 - 0F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 10 - 17\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 18 - 1F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 20 - 27\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 28 - 2F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 30 - 37\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 38 - 3F\nOTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 40 - 47\nASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 48 - 4F\nASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC, // 50 - 57\nASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH, // 58 - 5F\nOTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 60 - 67\nASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 68 - 6F\nASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS, // 70 - 77\nASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH, // 78 - 7F\nOTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH, // 80 - 87\nOTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF, // 88 - 8F\nUDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // 90 - 97\nOTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO, // 98 - 9F\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A0 - A7\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // A8 - AF\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B0 - B7\nOTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH, // B8 - BF\nACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO, // C0 - C7\nACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV, // C8 - CF\nACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH, // D0 - D7\nACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO, // D8 - DF\nASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO, // E0 - E7\nASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV, // E8 - EF\nASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH, // F0 - F7\nASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO // F8 - FF\n]; // 0 : illegal\n// 1 : very unlikely\n// 2 : normal\n// 3 : very likely\n\nvar Latin1ClassModel = [// UDF OTH ASC ASS ACV ACO ASV ASO\n0, 0, 0, 0, 0, 0, 0, 0, // UDF\n0, 3, 3, 3, 3, 3, 3, 3, // OTH\n0, 3, 3, 3, 3, 3, 3, 3, // ASC\n0, 3, 3, 3, 1, 1, 3, 3, // ASS\n0, 3, 3, 3, 1, 2, 1, 2, // ACV\n0, 3, 3, 3, 3, 3, 3, 3, // ACO\n0, 3, 1, 3, 1, 1, 1, 3, // ASV\n0, 3, 1, 3, 1, 1, 3, 3 // ASO\n];\n\nfunction Latin1Prober() {\n  CharSetProber.apply(this);\n  var FREQ_CAT_NUM = 4;\n  var CLASS_NUM = 8; // total classes\n\n  var self = this;\n\n  function init() {\n    self.reset();\n  }\n\n  this.reset = function () {\n    this._mLastCharClass = OTH;\n    this._mFreqCounter = [];\n\n    for (var i = 0; i < FREQ_CAT_NUM; this._mFreqCounter[i++] = 0) {\n      ;\n    }\n\n    Latin1Prober.prototype.reset.apply(this);\n  };\n\n  this.getCharsetName = function () {\n    return \"windows-1252\";\n  };\n\n  this.feed = function (aBuf) {\n    aBuf = this.filterWithEnglishLetters(aBuf);\n\n    for (var i = 0; i < aBuf.length; i++) {\n      var c = aBuf.charCodeAt(i);\n      var charClass = Latin1_CharToClass[c];\n      var freq = Latin1ClassModel[this._mLastCharClass * CLASS_NUM + charClass];\n\n      if (freq == 0) {\n        this._mState = Constants.notMe;\n        break;\n      }\n\n      this._mFreqCounter[freq]++;\n      this._mLastCharClass = charClass;\n    }\n\n    return this.getState();\n  };\n\n  this.getConfidence = function () {\n    var confidence;\n    var constants;\n\n    if (this.getState() == Constants.notMe) {\n      return 0.01;\n    }\n\n    var total = 0;\n\n    for (var i = 0; i < this._mFreqCounter.length; i++) {\n      total += this._mFreqCounter[i];\n    }\n\n    if (total < 0.01) {\n      constants = 0.0;\n    } else {\n      confidence = this._mFreqCounter[3] / total - this._mFreqCounter[1] * 20 / total;\n    }\n\n    if (confidence < 0) {\n      confidence = 0.0;\n    } // lower the confidence of latin1 so that other more accurate detector\n    // can take priority.\n    //\n    // antonio.afonso: need to change this otherwise languages like pt, es, fr using latin1 will never be detected.\n\n\n    confidence = confidence * 0.95;\n    return confidence;\n  };\n\n  init();\n}\n\nLatin1Prober.prototype = new CharSetProber();\nmodule.exports = Latin1Prober;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar CharSetProber = require('./charsetprober');\n\nvar CodingStateMachine = require('./codingstatemachine');\n\nvar escsm = require('./escsm');\n\nvar constants = require('./constants');\n\nfunction EscCharSetProber() {\n  CharSetProber.apply(this);\n  var self = this;\n\n  function init() {\n    self._mCodingSM = [new CodingStateMachine(escsm.HZSMModel), new CodingStateMachine(escsm.ISO2022CNSMModel), new CodingStateMachine(escsm.ISO2022JPSMModel), new CodingStateMachine(escsm.ISO2022KRSMModel)];\n    self.reset();\n  }\n\n  this.reset = function () {\n    EscCharSetProber.prototype.reset.apply(this);\n\n    for (var i = 0, codingSM; codingSM = this._mCodingSM[i]; i++) {\n      if (!codingSM) continue;\n      codingSM.active = true;\n      codingSM.reset();\n    }\n\n    this._mActiveSM = self._mCodingSM.length;\n    this._mDetectedCharset = null;\n  };\n\n  this.getCharsetName = function () {\n    return this._mDetectedCharset;\n  };\n\n  this.getConfidence = function () {\n    if (this._mDetectedCharset) {\n      return 0.99;\n    } else {\n      return 0.00;\n    }\n  };\n\n  this.feed = function (aBuf) {\n    for (var i = 0, c; i < aBuf.length; i++) {\n      c = aBuf[i];\n\n      for (var j = 0, codingSM; codingSM = this._mCodingSM[j]; j++) {\n        if (!codingSM || !codingSM.active) continue;\n        var codingState = codingSM.nextState(c);\n\n        if (codingState == constants.error) {\n          codingSM.active = false;\n          this._mActiveSM--;\n\n          if (this._mActiveSM <= 0) {\n            this._mState = constants.notMe;\n            return this.getState();\n          }\n        } else if (codingState == constants.itsMe) {\n          this._mState = constants.foundIt;\n          this._mDetectedCharset = codingSM.getCodingStateMachine();\n          return this.getState();\n        }\n      }\n    }\n\n    return this.getState();\n  };\n\n  init();\n}\n\nEscCharSetProber.prototype = new CharSetProber();\nmodule.exports = EscCharSetProber;","/*\n * The Original Code is Mozilla Universal charset detector code.\n *\n * The Initial Developer of the Original Code is\n * Netscape Communications Corporation.\n * Portions created by the Initial Developer are Copyright (C) 2001\n * the Initial Developer. All Rights Reserved.\n *\n * Contributor(s):\n *   António Afonso (antonio.afonso gmail.com) - port to JavaScript\n *   Mark Pilgrim - port to Python\n *   Shy Shalom - original C code\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301  USA\n */\nvar consts = require('./constants');\n\nvar HZ_cls = [1, 0, 0, 0, 0, 0, 0, 0, // 00 - 07\n0, 0, 0, 0, 0, 0, 0, 0, // 08 - 0f\n0, 0, 0, 0, 0, 0, 0, 0, // 10 - 17\n0, 0, 0, 1, 0, 0, 0, 0, // 18 - 1f\n0, 0, 0, 0, 0, 0, 0, 0, // 20 - 27\n0, 0, 0, 0, 0, 0, 0, 0, // 28 - 2f\n0, 0, 0, 0, 0, 0, 0, 0, // 30 - 37\n0, 0, 0, 0, 0, 0, 0, 0, // 38 - 3f\n0, 0, 0, 0, 0, 0, 0, 0, // 40 - 47\n0, 0, 0, 0, 0, 0, 0, 0, // 48 - 4f\n0, 0, 0, 0, 0, 0, 0, 0, // 50 - 57\n0, 0, 0, 0, 0, 0, 0, 0, // 58 - 5f\n0, 0, 0, 0, 0, 0, 0, 0, // 60 - 67\n0, 0, 0, 0, 0, 0, 0, 0, // 68 - 6f\n0, 0, 0, 0, 0, 0, 0, 0, // 70 - 77\n0, 0, 0, 4, 0, 5, 2, 0, // 78 - 7f\n1, 1, 1, 1, 1, 1, 1, 1, // 80 - 87\n1, 1, 1, 1, 1, 1, 1, 1, // 88 - 8f\n1, 1, 1, 1, 1, 1, 1, 1, // 90 - 97\n1, 1, 1, 1, 1, 1, 1, 1, // 98 - 9f\n1, 1, 1, 1, 1, 1, 1, 1, // a0 - a7\n1, 1, 1, 1, 1, 1, 1, 1, // a8 - af\n1, 1, 1, 1, 1, 1, 1, 1, // b0 - b7\n1, 1, 1, 1, 1, 1, 1, 1, // b8 - bf\n1, 1, 1, 1, 1, 1, 1, 1, // c0 - c7\n1, 1, 1, 1, 1, 1, 1, 1, // c8 - cf\n1, 1, 1, 1, 1, 1, 1, 1, // d0 - d7\n1, 1, 1, 1, 1, 1, 1, 1, // d8 - df\n1, 1, 1, 1, 1, 1, 1, 1, // e0 - e7\n1, 1, 1, 1, 1, 1, 1, 1, // e8 - ef\n1, 1, 1, 1, 1, 1, 1, 1, // f0 - f7\n1, 1, 1, 1, 1, 1, 1, 1 // f8 - ff\n];\nvar HZ_st = [consts.start, consts.error, 3, consts.start, consts.start, consts.start, consts.error, consts.error, // 00-07\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, // 08-0f\nconsts.itsMe, consts.itsMe, consts.error, consts.error, consts.start, consts.start, 4, consts.error, // 10-17\n5, consts.error, 6, consts.error, 5, 5, 4, consts.error, // 18-1f\n4, consts.error, 4, 4, 4, consts.error, 4, consts.error, // 20-27\n4, consts.itsMe, consts.start, consts.start, consts.start, consts.start, consts.start, consts.start // 28-2f\n];\nvar HZCharLenTable = [0, 0, 0, 0, 0, 0];\nexports.HZSMModel = {\n  \"classTable\": HZ_cls,\n  \"classFactor\": 6,\n  \"stateTable\": HZ_st,\n  \"charLenTable\": HZCharLenTable,\n  \"name\": \"HZ-GB-2312\"\n};\nvar ISO2022CN_cls = [2, 0, 0, 0, 0, 0, 0, 0, // 00 - 07\n0, 0, 0, 0, 0, 0, 0, 0, // 08 - 0f\n0, 0, 0, 0, 0, 0, 0, 0, // 10 - 17\n0, 0, 0, 1, 0, 0, 0, 0, // 18 - 1f\n0, 0, 0, 0, 0, 0, 0, 0, // 20 - 27\n0, 3, 0, 0, 0, 0, 0, 0, // 28 - 2f\n0, 0, 0, 0, 0, 0, 0, 0, // 30 - 37\n0, 0, 0, 0, 0, 0, 0, 0, // 38 - 3f\n0, 0, 0, 4, 0, 0, 0, 0, // 40 - 47\n0, 0, 0, 0, 0, 0, 0, 0, // 48 - 4f\n0, 0, 0, 0, 0, 0, 0, 0, // 50 - 57\n0, 0, 0, 0, 0, 0, 0, 0, // 58 - 5f\n0, 0, 0, 0, 0, 0, 0, 0, // 60 - 67\n0, 0, 0, 0, 0, 0, 0, 0, // 68 - 6f\n0, 0, 0, 0, 0, 0, 0, 0, // 70 - 77\n0, 0, 0, 0, 0, 0, 0, 0, // 78 - 7f\n2, 2, 2, 2, 2, 2, 2, 2, // 80 - 87\n2, 2, 2, 2, 2, 2, 2, 2, // 88 - 8f\n2, 2, 2, 2, 2, 2, 2, 2, // 90 - 97\n2, 2, 2, 2, 2, 2, 2, 2, // 98 - 9f\n2, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 2, 2, 2, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 2, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n2, 2, 2, 2, 2, 2, 2, 2, // e0 - e7\n2, 2, 2, 2, 2, 2, 2, 2, // e8 - ef\n2, 2, 2, 2, 2, 2, 2, 2, // f0 - f7\n2, 2, 2, 2, 2, 2, 2, 2 // f8 - ff\n];\nvar ISO2022CN_st = [consts.start, 3, consts.error, consts.start, consts.start, consts.start, consts.start, consts.start, // 00-07\nconsts.start, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, // 08-0f\nconsts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, // 10-17\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.error, consts.error, consts.error, 4, consts.error, // 18-1f\nconsts.error, consts.error, consts.error, consts.itsMe, consts.error, consts.error, consts.error, consts.error, // 20-27\n5, 6, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, // 28-2f\nconsts.error, consts.error, consts.error, consts.itsMe, consts.error, consts.error, consts.error, consts.error, // 30-37\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.error, consts.start // 38-3f\n];\nvar ISO2022CNCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexports.ISO2022CNSMModel = {\n  \"classTable\": ISO2022CN_cls,\n  \"classFactor\": 9,\n  \"stateTable\": ISO2022CN_st,\n  \"charLenTable\": ISO2022CNCharLenTable,\n  \"name\": \"ISO-2022-CN\"\n};\nvar ISO2022JP_cls = [2, 0, 0, 0, 0, 0, 0, 0, // 00 - 07\n0, 0, 0, 0, 0, 0, 2, 2, // 08 - 0f\n0, 0, 0, 0, 0, 0, 0, 0, // 10 - 17\n0, 0, 0, 1, 0, 0, 0, 0, // 18 - 1f\n0, 0, 0, 0, 7, 0, 0, 0, // 20 - 27\n3, 0, 0, 0, 0, 0, 0, 0, // 28 - 2f\n0, 0, 0, 0, 0, 0, 0, 0, // 30 - 37\n0, 0, 0, 0, 0, 0, 0, 0, // 38 - 3f\n6, 0, 4, 0, 8, 0, 0, 0, // 40 - 47\n0, 9, 5, 0, 0, 0, 0, 0, // 48 - 4f\n0, 0, 0, 0, 0, 0, 0, 0, // 50 - 57\n0, 0, 0, 0, 0, 0, 0, 0, // 58 - 5f\n0, 0, 0, 0, 0, 0, 0, 0, // 60 - 67\n0, 0, 0, 0, 0, 0, 0, 0, // 68 - 6f\n0, 0, 0, 0, 0, 0, 0, 0, // 70 - 77\n0, 0, 0, 0, 0, 0, 0, 0, // 78 - 7f\n2, 2, 2, 2, 2, 2, 2, 2, // 80 - 87\n2, 2, 2, 2, 2, 2, 2, 2, // 88 - 8f\n2, 2, 2, 2, 2, 2, 2, 2, // 90 - 97\n2, 2, 2, 2, 2, 2, 2, 2, // 98 - 9f\n2, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 2, 2, 2, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 2, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n2, 2, 2, 2, 2, 2, 2, 2, // e0 - e7\n2, 2, 2, 2, 2, 2, 2, 2, // e8 - ef\n2, 2, 2, 2, 2, 2, 2, 2, // f0 - f7\n2, 2, 2, 2, 2, 2, 2, 2 // f8 - ff\n];\nvar ISO2022JP_st = [consts.start, 3, consts.error, consts.start, consts.start, consts.start, consts.start, consts.start, // 00-07\nconsts.start, consts.start, consts.error, consts.error, consts.error, consts.error, consts.error, consts.error, // 08-0f\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, // 10-17\nconsts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, consts.error, consts.error, // 18-1f\nconsts.error, 5, consts.error, consts.error, consts.error, 4, consts.error, consts.error, // 20-27\nconsts.error, consts.error, consts.error, 6, consts.itsMe, consts.error, consts.itsMe, consts.error, // 28-2f\nconsts.error, consts.error, consts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, // 30-37\nconsts.error, consts.error, consts.error, consts.itsMe, consts.error, consts.error, consts.error, consts.error, // 38-3f\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.error, consts.start, consts.start // 40-47\n];\nvar ISO2022JPCharLenTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nexports.ISO2022JPSMModel = {\n  \"classTable\": ISO2022JP_cls,\n  \"classFactor\": 10,\n  \"stateTable\": ISO2022JP_st,\n  \"charLenTable\": ISO2022JPCharLenTable,\n  \"name\": \"ISO-2022-JP\"\n};\nvar ISO2022KR_cls = [2, 0, 0, 0, 0, 0, 0, 0, // 00 - 07\n0, 0, 0, 0, 0, 0, 0, 0, // 08 - 0f\n0, 0, 0, 0, 0, 0, 0, 0, // 10 - 17\n0, 0, 0, 1, 0, 0, 0, 0, // 18 - 1f\n0, 0, 0, 0, 3, 0, 0, 0, // 20 - 27\n0, 4, 0, 0, 0, 0, 0, 0, // 28 - 2f\n0, 0, 0, 0, 0, 0, 0, 0, // 30 - 37\n0, 0, 0, 0, 0, 0, 0, 0, // 38 - 3f\n0, 0, 0, 5, 0, 0, 0, 0, // 40 - 47\n0, 0, 0, 0, 0, 0, 0, 0, // 48 - 4f\n0, 0, 0, 0, 0, 0, 0, 0, // 50 - 57\n0, 0, 0, 0, 0, 0, 0, 0, // 58 - 5f\n0, 0, 0, 0, 0, 0, 0, 0, // 60 - 67\n0, 0, 0, 0, 0, 0, 0, 0, // 68 - 6f\n0, 0, 0, 0, 0, 0, 0, 0, // 70 - 77\n0, 0, 0, 0, 0, 0, 0, 0, // 78 - 7f\n2, 2, 2, 2, 2, 2, 2, 2, // 80 - 87\n2, 2, 2, 2, 2, 2, 2, 2, // 88 - 8f\n2, 2, 2, 2, 2, 2, 2, 2, // 90 - 97\n2, 2, 2, 2, 2, 2, 2, 2, // 98 - 9f\n2, 2, 2, 2, 2, 2, 2, 2, // a0 - a7\n2, 2, 2, 2, 2, 2, 2, 2, // a8 - af\n2, 2, 2, 2, 2, 2, 2, 2, // b0 - b7\n2, 2, 2, 2, 2, 2, 2, 2, // b8 - bf\n2, 2, 2, 2, 2, 2, 2, 2, // c0 - c7\n2, 2, 2, 2, 2, 2, 2, 2, // c8 - cf\n2, 2, 2, 2, 2, 2, 2, 2, // d0 - d7\n2, 2, 2, 2, 2, 2, 2, 2, // d8 - df\n2, 2, 2, 2, 2, 2, 2, 2, // e0 - e7\n2, 2, 2, 2, 2, 2, 2, 2, // e8 - ef\n2, 2, 2, 2, 2, 2, 2, 2, // f0 - f7\n2, 2, 2, 2, 2, 2, 2, 2 // f8 - ff\n];\nvar ISO2022KR_st = [consts.start, 3, consts.error, consts.start, consts.start, consts.start, consts.error, consts.error, // 00-07\nconsts.error, consts.error, consts.error, consts.error, consts.itsMe, consts.itsMe, consts.itsMe, consts.itsMe, // 08-0f\nconsts.itsMe, consts.itsMe, consts.error, consts.error, consts.error, 4, consts.error, consts.error, // 10-17\nconsts.error, consts.error, consts.error, consts.error, 5, consts.error, consts.error, consts.error, // 18-1f\nconsts.error, consts.error, consts.error, consts.itsMe, consts.start, consts.start, consts.start, consts.start // 20-27\n];\nvar ISO2022KRCharLenTable = [0, 0, 0, 0, 0, 0];\nexports.ISO2022KRSMModel = {\n  \"classTable\": ISO2022KR_cls,\n  \"classFactor\": 6,\n  \"stateTable\": ISO2022KR_st,\n  \"charLenTable\": ISO2022KRCharLenTable,\n  \"name\": \"ISO-2022-KR\"\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/**\n * The public API for putting history on context.\n */\n\nvar Router = function (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props.history.location.pathname)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Router.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        history: this.props.history,\n        route: {\n          location: this.props.history.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Router.prototype.computeMatch = function computeMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  Router.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        history = _props.history;\n    invariant(children == null || React.Children.count(children) === 1, \"A <Router> may have only one child element\"); // Do this here so we can setState when a <Redirect> changes the\n    // location in componentWillMount. This happens e.g. when doing\n    // server rendering using a <StaticRouter>.\n\n    this.unlisten = history.listen(function () {\n      _this2.setState({\n        match: _this2.computeMatch(history.location.pathname)\n      });\n    });\n  };\n\n  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(this.props.history === nextProps.history, \"You cannot change <Router history>\");\n  };\n\n  Router.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  Router.prototype.render = function render() {\n    var children = this.props.children;\n    return children ? React.Children.only(children) : null;\n  };\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  history: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\nRouter.contextTypes = {\n  router: PropTypes.object\n};\nRouter.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default Router;","// Written in this round about way for babel-transform-imports\nimport Router from \"react-router/es/Router\";\nexport default Router;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport Router from \"./Router\";\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = function (_React$Component) {\n  _inherits(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BrowserRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  BrowserRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\");\n  };\n\n  BrowserRouter.prototype.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nBrowserRouter.propTypes = {\n  basename: PropTypes.string,\n  forceRefresh: PropTypes.bool,\n  getUserConfirmation: PropTypes.func,\n  keyLength: PropTypes.number,\n  children: PropTypes.node\n};\nexport default BrowserRouter;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport matchPath from \"./matchPath\";\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\nvar Switch = function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  function Switch() {\n    _classCallCheck(this, Switch);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Switch.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Switch> outside a <Router>\");\n  };\n\n  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n    warning(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n  };\n\n  Switch.prototype.render = function render() {\n    var route = this.context.router.route;\n    var children = this.props.children;\n    var location = this.props.location || route.location;\n    var match = void 0,\n        child = void 0;\n    React.Children.forEach(children, function (element) {\n      if (match == null && React.isValidElement(element)) {\n        var _element$props = element.props,\n            pathProp = _element$props.path,\n            exact = _element$props.exact,\n            strict = _element$props.strict,\n            sensitive = _element$props.sensitive,\n            from = _element$props.from;\n        var path = pathProp || from;\n        child = element;\n        match = matchPath(location.pathname, {\n          path: path,\n          exact: exact,\n          strict: strict,\n          sensitive: sensitive\n        }, route.match);\n      }\n    });\n    return match ? React.cloneElement(child, {\n      location: location,\n      computedMatch: match\n    }) : null;\n  };\n\n  return Switch;\n}(React.Component);\n\nSwitch.contextTypes = {\n  router: PropTypes.shape({\n    route: PropTypes.object.isRequired\n  }).isRequired\n};\nSwitch.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object\n};\nexport default Switch;","// Written in this round about way for babel-transform-imports\nimport Switch from \"react-router/es/Switch\";\nexport default Switch;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n    var history = this.context.router.history;\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, {\n      onClick: this.handleClick,\n      href: href,\n      ref: innerRef\n    }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Link;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Route from \"./Route\";\nimport Link from \"./Link\";\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\nvar NavLink = function NavLink(_ref) {\n  var to = _ref.to,\n      exact = _ref.exact,\n      strict = _ref.strict,\n      location = _ref.location,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      ariaCurrent = _ref[\"aria-current\"],\n      rest = _objectWithoutProperties(_ref, [\"to\", \"exact\", \"strict\", \"location\", \"activeClassName\", \"className\", \"activeStyle\", \"style\", \"isActive\", \"aria-current\"]);\n\n  var path = (typeof to === \"undefined\" ? \"undefined\" : _typeof(to)) === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n      var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n      return React.createElement(Link, _extends({\n        to: to,\n        className: isActive ? [className, activeClassName].filter(function (i) {\n          return i;\n        }).join(\" \") : className,\n        style: isActive ? _extends({}, style, activeStyle) : style,\n        \"aria-current\": isActive && ariaCurrent || null\n      }, rest));\n    }\n  });\n};\n\nNavLink.propTypes = {\n  to: Link.propTypes.to,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  location: PropTypes.object,\n  activeClassName: PropTypes.string,\n  className: PropTypes.string,\n  activeStyle: PropTypes.object,\n  style: PropTypes.object,\n  isActive: PropTypes.func,\n  \"aria-current\": PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"])\n};\nNavLink.defaultProps = {\n  activeClassName: \"active\",\n  \"aria-current\": \"page\"\n};\nexport default NavLink;"],"sourceRoot":""}